%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: ministere_culture.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Alice Nué
%%CreationDate: 26/03/10
%%BoundingBox: 0 0 215 281
%%HiResBoundingBox: 0 0 214.1817 280.9605
%%CropBox: 0 0 214.1817 280.9605
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 100 128 8%%BeginData: 21002 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C455A0629062906290629062906290629062906290629062906290629%062906290629062906290629062906070654A8FD12FFC28D938DB58D938D%B58D938DB58D938DB58D938DB58D938DB58D938DB58D938DB58D8DA05307%060706290607062906070629060706290607062906070629060706290607%0629060706290607060706A8FD15FFBC8C8D8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC254062906290629062906%290629062906290629062906290629062906290629062906290629062906%07067EFD16FF938D8D938CB58D938CB58D938CB58D938CB58D938CB58D93%8CB58D938CB58D938C8DC253060607060706070607060706070607060706%070607060706070607060706070607060706070607012FFD14FFA8C3938D%8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8CC35406290629062906290629062906290629062906290629062906%29062906290629062906290629062FA9FD16FFC28CB08D938DB58D938DB5%8D938DB58D938DB58D938DB58D938DB58D938DB58D938DB0C25306062906%070629060706290607062906070629060706290607062906070629060706%2906070629A8FD18FFC293938C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8C8D8C8D8C8D8C8D8C8D8CC354062906290629062906290629062906%29062906290629062906290629062906290629062906077DFD1AFFCA93B0%8D938CB58D938CB58D938CB58D938CB58D938CB58D938CB58D938CB58D8D%A02F06060706070607060706070607060706070607060706070607060706%07060706070607060728FD1BFF998D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C%8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC25A062906290629062906290629%06290629062906290629062906290629062906290629062906A8FD1BFFC3%8CB58D938DB58D938DB58D938DB58D938DB58D938DB58D938DB58D938DB5%8D8DA0530706070629060706290607062906070629060706290607062906%0706290607062906070629A8FD1BFFCA8D8C8D8C8D8C8D8C8D8C8D8C8D8C%8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC25406290629062906290629%062906290629062906290629062906290629062906290629060706FD1DFF%938D8CB58D938CB58D938CB58D938CB58D938CB58D938CB58D938CB58D93%8C8DC2530606070607060706070607060706070607060706070607060706%07060706070607060706067EFD1CFFC28C8D8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC3540629062906290629062906%29062906290629062906290629062906290629062906290629067EFD1AFF%A8FFC98D8CB58D938DB58D938DB58D938DB58D938DB58D938DB58D938DB5%8D938DB0C253060629060706290607062906070629060706290607062906%0706290607062906070629060629FD17FFA8A8A87D7DCA8C8D8C8D8C8D8C%8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC35406290629%062906290629062906290629062906290629062906290629062906290629%0629062FA9FD19FF7DA8A18D8D938CB58D938CB58D938CB58D938CB58D93%8CB58D938CB58D938CB58D8DA02F06060706070607060706070607060706%07060706070607060706060607060706070607060706A9FD17FFA8527DFF%C38C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C%8D8CC25A0629062906290629062906290629062906290629062906290607%0629062906290629062906077EFD17FFA87DA8FFFFBB8D938DB58D938DB5%8D938DB58D938DB58D938DB58D938DB58D938DB58D8DA053070607062906%070629060706290607062906070629060706072F7E530706060607060706%290629FD18FFA8FFFFFFA78D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8C8D8C8D8C8D8C8D8CC2540629062906290629062906290629062906%290629062906297EFF5329065329290607060706290653FD1CFFA08D8D93%8CB58D938CB58D938CB58D938CB58D938CB58D938CB58D938C8DC2530606%070607060706070607060706070607060706070129A8FF06297EA87E7E7E%A87E7E28060153287EFD1CFF938D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8C8D8C8D8C8D8C8D8CC3540629062906290629062906290629062906%290629062FA9FF29297E7E53A9FD06FF53A8FD1EFFCABB8D938DB58D938D%B58D938DB58D938DB58D938DB58D938DB58D938DB0C25306062906070629%0607062906070629060706070629A8FF53077E2F0629285353A8FD06FFA9%FD1BFFA18D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C%8D8C8D8CC3540629062906290629062906290629062906290654FFA82929%7EFFA97E290701290653A8FFFFFF535AFD1BFFCA8D8D8CB58D938CB58D93%8CB58D938CB58D938CB58D938CB58D938CB58D8DA02F0606070607060706%0706070607060706070153FF5A0106017EFD04FF7E5A2807010728530606%53FD1BFF998D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8C8D8CC25A062906290629062906290629062906290629A854062906%292FFD07FFA8530629060729FD1CFFBC8D938DB58D938DB58D938DB58D93%8DB58D938DB58D938DB58D938DB58D8DA053070607062906070629060706%2906070607535301070607017EFD08FFA8290107067EFD1CFF938D8C8D8C%8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC2540629%0629062906290629062906290607295306290607067EFD06FFA87E2F2906%0729A9FFFFA8FD19FFCA8D8CB58D938CB58D938CB58D938CB58D938CB58D%938CB58D938CB58D938C8DC2530606070607060706070607060706070607%0107060606A8FF7E2953535329070106012953FFFFFF7D53FD1AFF8C8D8C%8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC354%0629062906290629062906290629062906290629067EA82F062906075354%06290654FD04FF5353A9FFFF7E7EFD0DFFCAC3A0CACAFFFFFF9A8D8DB58D%938DB58D938DB58D938DB58D938DB58D938DB58D938DB58D938DB0C25306%062906070629060706290607062906070629060728070607060706060107%060653A87E53287EFFFF7E2F017EFD0CFFA7938C8D8C9393938C8D8C8D8C%8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC354%062906290629062906290629062906290629062906070607062906290607%0629297E7DA8A8FFFFA9290706A9FD0CFFCA938CB58D8D8CB08D8D8CB58D%938CB58D938CB58D938CB58D938CB58D938CB58D938CB58D938CB58D8DA0%290606060107060601070606010706060107060601070106287E7E2F0106%0653A8FFFFFFA8A97D2F010606A8FD0DFFBC8C8D8C8D8C8D8C8D8C8D8C8D%8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8C8D8CC2%7E29532F532F532F532F532F532F532F532F532F532F537EFFFF7E29532F%7EFFFF7E7E2F53535329532FA8FD0EFF99BC99BC99BC93BC99BC93BC99BC%93BC99BC93BC99BC93BC99BC93BC99BC93BC99BC93BC99BC93BC99BBC3FD%20FFA8FDCAFFA852FD40FFA8FD21FF7DA8FD0AFFA8FD13FFA8A8A8FD1FFF%2752FFFFA8A8A82EFD0DFF52A8FD09FFA800A853A8FD08FF5252FF7DA8FF%FFFFA87DA8FD09FFA8277D52A8FD15FF7DFD05FF52A8FF52A8FFFFA8FF7E%7DFD06FFAFFFFFA87DFFA87DFD04FFA8FD05FFA852A8FFFFFFA8FFFFFFA8%FFFF7D7DFFA8FF7DA8FFA87DFD05FFA8FD04FFA827FFA8FD05FFA8FFFF7D%7EFD0BFFA8A8FF847DFFA87DFFA852A8FFA852FF7D277DA8A8527DA82727%A8277DA85952FD04FF27F8FD04FFA8275252FF525227FF7D5227FF52A87D%7DFF277DA85252A8FFFFFFF827A8FFFFFF7D5252A87D2752FF525252FF27%A8A85252A827527D525252A87E52FF277DA87D52FFA852FFFFA852FF52FF%53A8527D7DFF52FFA87DFF7D527DFD04FF5252FD04FF7D7DFFFFFF5252A8%A87DA87DFF52FF7D7DFF52FF527D7DFD04FF5252FD04FF7D7DFFFF7D53FF%7D847DA8FF7DFF5252A8A852FFFF52A852FF7D7EFF7DFF52527DFF52277D%7D7D52FF52527DA82852FF7D7DFFA827FF2E52A8FD09FFA852527D7DFF27%52FF7D525252FF27FF52848452A85252A8FD0AFF277DFFFF52A8FF7D5227%7DA82EFF2752AFA852FFA852A852FF527DA827FF2752A8FFFD04A8FFA8FF%A8A8FFFFA8A8FFFFA8FFFFA8FFFF7DFD0BFFA8A87DFF52A8537DFFA8A8A8%FFA8FFFFA8FFA8FFA8A8FD0AFFA8A8A8FD05FFA8A8A8FFA8A8FFA884FFA8%FFFFFFA8FFA8FFA8FFA8A8FFFF7DFD27FF527D7D7DFD62FFA8FD3CFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FDD2FF52FD5AFFA827275227A8FFFF7D7DFD1CFFAFFD10%FF522752277DFD14FFA8FD14FF2752FF2727FF5252527DFF5252527DA827%7DFF7D52FF527D52A8FF5927FFFFA82784FFA8525252FFA85252FF7D52A8%52527D53FFFFFF7D27A8FF7DA8277D52FFFFFF7D7DFFFF5352FFFF527DFF%A8525252FFFFA87DFFFF7D27FFA85227A8A8525252A8FF5227FFF87DFF52%27FF7DFF28527D27A8277DFF527DFF277D7DF8FF5252FFFFA821A8A8F8A8%A85227FF2752FFA827FF2852FFA8FFFFFFA8F8A87DFFA827A85227FFFF28%00FFFF7DF852FF7D7DA8F8A8FF7DA8FF2727A8FF7DF8FF282EFF7DFFF8A8%A8A8FF5227F852FFFF7D2752A8FF7D527D52FF27A8FF7D7DFF2752277DFF%5252FFFFFF27FF5252FFFFA827A85259FFA87DFF7D277D7DFFFFFF842752%52A8FF277D28A8FFA852277EFF7D7DF8847DFF527DFD04FFA85227A8FFA8%27FF7D277DFFFF285252FFFF525253F8FFFF7D27A87DFF52527DFFFF277D%FF7D7DFF527D7D27FF5252FFFFA827A85227FFFFFF21AF277DFFA852FF52%527DA8FFFFFFA8F8FFA8FFA8272727FFFF52522752FF7EA8A8F82EA85227%FD04FF7D272727FF7D27FFFF7DF87DFF277D7DFFFF2752FF2727FF5252FF%7DA85252FFFFFF277DFF52A8FFF87DA827FF5227FF7DA8F8A8A8277DFF52%52FF5227FF537DFF5227FF7DFFFFFF5227A8FFFFAFF8A8277DA852A8A8F8%FF7D7DFF7DF8FFA8277DFF7DA827FFA827A8A8F8FF7DFF5252A8277EFF7D%A85252FFA8527D7D525252FF527DA8FFFFA8275253FFA85252527DFF5252%287D7D527DFF7D5252F87DFFFF52277DA8FF5252527DA8FFA87D27A8FFFF%7D527DA8277D52FF84527D7D52FFFF7DA8FF7D27277D7D52A8A82E7D7D52%A87D5259A8A8285227A8FD27FFA852527DA8FD23FF7D52FD3CFFA8A8FD24%FFA8A8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD07FFA9FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FF5406290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906077E53060107060601070606010706060107%060601070606010706060107060601070606010706060107060601070606%010706060107060601070606010706060107060601070606010706060107%06060107060601070606010706060107060601070606017E540629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%2906297E5306062906070629060706290607062906070629060706290607%062906070629060706290607062906070629060706290607062906070629%060706290607062906070629060706290607062906070629060706290607%062906070629060706290607017E54062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%2906290629062906290629062906290629062906290607532F0606070607%060706070607060706070607060706070607060706070607060706070607%060706070607060706070607060706070607060706070607060706070607%060706070607060706070607060706070607060706070607060706070607%0607017E5A06290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906077E53070607062906070629060706070607%062906070629060706290607010706070629060706290607062906070629%060706290607062906070629060706290607062906070629060706290607%06290607062906070629060706290607062906070629067E540629062906%2906290629065A7D07067E53530607060753290607062F062F5307060706%070607062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%2906077E53060607060706070607060753FF0629FF53282F5353062F2853%532FA85328A953295353297E290706070607060706070607060706070607%060706070607060706070607060706070607060706070607060706070607%060706070607060706070607017E5406290629062906290629067EA85353%A9537E7EA8537E537E7E7E537E53A953A853A92FA953A929070629062906%290629062906290629062906290629062906290629062906290629062906%29062906290629062906290629062906290629062906297E530606290607%06290607060753547D7E595A537E2929535A2954FD04537E537D542F2F7E%537D53060706290607062906070629060706290607062906070629060706%290607062906070629060706290607062906070629060706290607062906%07017E5406290629062906290629067E2F7E535A535A5353297E535A7E7E%537E537E537E537E067E537E282906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290607532F06060706070607060706060629062906%29062906290629062F2906282F0653062928060653060606070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607017E5A062906290629%062906290629060706290607062906070629060706290629062906070629%060706290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%06077E530706070629060706290607062906070629060706290607062906%070629060706290607062906070629060706290607062906070629060706%290607062906070629060706290607062906070629060706290607062906%0706290607062906070629067E5406290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906077E53060607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07017E540629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%0629062906290629062906297E5306062906070629060706290607062906%070629060706290607062906070629060706290607062906070629060706%290607062906070629060706290607062906070629060706290607062906%070629060706290607062906070629060706290607017E54062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%0607532F0606070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%0706070607060706070607017E5A06290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906077E53070607062906%070629060706290607062906070629060706290607062906070629060706%290607062906070629060706290607062906070629060706290607062906%070629060706290607062906070629060706290607062906070629060706%29067E540629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%0629062906290629062906077E5306060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070606010706060107060706070607060701%060607010606070607060706070607060706070607017E54062906290629%062906290629062906290629062906290629062906290629062906290629%06290629062906290629062906290629062906290629062953A9A8A95329%062906290629062953A95329295329290629062906290629062906290629%06297E530606290607062906070629060706290607062906070629060706%290607062906070629060706290607062906070629060706290607062906%0706077EFD05FF5307060606070606017EFFA9017EFFA801070106060701%060607060601070606017E54062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%0629062906290629060753FFFF7E29A9FFFF29547E2F067E7E2953FF7E53%A8FFFF53287E5329297E5329537E537E2907537EA82F0606070607060706%070607060706070607060706070607060706070607060706070607060706%07060706070607060706070607060706070607067EFFFF280606535329A8%FF5307FFFF2953FF7E53FFFFFF7D53FFFF0653FFFF29FD04FF5353FFA8FF%5A0629062906290629062906290629062906290629062906290629062906%29062906290629062906290629062906290629062906290629062906077E%FFA9290629060706FFFF5406FFFF5353FFA8077EFFA80753FFFF2953FFA9%53A9FFFF7E53FFFF7E7E5307060706290607062906070629060706290607%062906070629060706290607062906070629060706290607062906070629%0607062906070607067EFFFF29062FFFA8537EFF5306FFFF2953FFA8067E%FFA80153FFFF0653FFFF29FFFF7E0153FFFFA8FF54062906290629062906%290629062906290629062906290629062906290629062906290629062906%2906290629062906290629062906290629060729FFFFFF7EFFFFFF29A9FF%A97EFFFF5353FF7E077EFFA9532FFFFFA8A8FFA853FFFF532929FFFF7E7E%530606070607060706070607060706070607060706070607060706070607%060706070607060706070607060706070607060706070607060706070607%53FD04FFA9280653FFFFFFA8FF2853FFA8015AFFFF7E29A8FD04FFA928FF%FF53010753FFFFFF54062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%29062906290629060706545353062906292F5A292F292F29532929065353%5306295354292F292F2953282906072954A8530606290607062906070629%060706290607062906070629060706290607062906070629060706290607%062906070629060706290607062906070629060601070607062906060107%0606060706060607060601290606010706060607060706290606017E5406%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290629062906290629062906290629062906290629062906%29062906290607532F060607060706070607060706070607060706070607%060706070607060706070607060706070607060706070607060706070606%060706070607060706070607060706070607060706070607060706070607%06070607060706070607060706070607017E540607062906290629062906%290629062906290629062906290629062906290629062906290629062906%290629062906290607062906290629062906290629062906290629062906%2906070629062906290629062906290629062906290629062906077E7E7E%290606290607062906070629060706290607062906070629060706290607%06290607062906070629060706290607067E7E2F01290607062906070629%060706290629282906297EA8290606290607062906070629060706290607%062906070629067EFFFFFF7E070629060706290607060706070629060706%290607060706070607060706070607060706070607060706070629A9FF53%07060706070629060706070607062953FF7E2929FFFF5406070629060706%07060706290607062906290629062906077E7E7EFFFF5306065353530606%0653282F53530153535301292929287E29072F7E29062853290628532829%292F287E532906537D2F01072F7E532901070653537E530706A8FFA92929%537E28060653535A0606285A292F535406060607060706070607017E5306%A9A85406A9FD04FF2953FD05FFA9FFFFFF5353FD05FFA8FFFFFF297EFFA9%06A8FF7E2FFD05FF7E07A8FF5329A8FD04FF5306FD05FF7E7EFD04FF29FF%FF5406FD05FF2954FD05FF7E062906290629062906297E53060107017EFF%FF2FA8FFA829FFFF7EA8FFFF7EA8FF7D53FFFF53A9FFFF53FFFF7E53FFA8%067DFF7E53FFFF7EA8FFFF06A9FF5353FFA8537EFF5929537E53A9FFA906%7EFFA90629FFFF297EFFA928A9FF7E29FFFF7E7EFFA82906290607062906%07017E53067E7E547EFF7E2953FFA854FFFF067EFFA906A8FF7E53FFA907%7EFF7E07A8FF537EFFA9067EFF7E2FFFA90753FFA829A8FF53A8FF7E0107%062928A8A9FFFFFFA90753FF7E2828FFFF537EFF7E2853FFA854FFFF0653%FFFF0607062906290629060753537EFFFF2F7EFFA9067EFFA828FFA80753%FFA8067EFF7D53FFA9067EFF7E06A9FF7E53FFA853A8FF5953FFFF015AFF%A906A9FF5353FFA8297DFF537EFFFF537EFFA9067EFFFF2929A9FF297EFF%A928A8FF7E2FFFA82953FFA8290607060706070607017EFFFFFF7E2929FD%05FF2953FFFF067EFFFF06A9FF7E53FFA9297EFF7E07A9FF5A53FD05FFA8%53FFFF2953FFFF2FA9FF5329A9FD04FF532FFD06FF2953FFFFFF29FFFF53%06FD05FF2954FFFF2854FFFF062906290629062906077E7E7E5307060728%7E7E7E2906065A5307285A2F07297E29295353065353530653532F065353%54295329295353062F5353065353290129537E532F06072F7E532F535406%072F5A2F29535A2806065A59540607285353292853292906070629060706%29067E530107062906070607060706070607060706070607060706070629%060706290607062906070607060706070629060706290607062906070607%062906070607060706290607060706070629060706290607060706070629%0607062906290629062906077E5306060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607017E54062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%06297E530606290607062906070629060706290607062906070629060706%290607062906070629060706290607062906070629060706290607062906%070629060706290607062906070629060706290607062906070629060706%2906070629060706290607017E5406290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%062906290629062906290629062906290629062906290629062906290629%06290629062906290629062906290629062906290607532F060607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%070607060706070607060706070607060706070607060706070607060706%07017E%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 6.66</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2010-03-26T14:06:06+01:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-03-26T14:06:06+01:00</xmp:ModifyDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:MetadataDate>2010-03-26T14:06:06+01:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>196</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADEAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A5Z5y/wCUv1z/ALaF1/yf&#xA;fOuw/QPcHTZPqPvSfLGDsVdirsVdirsVdirsVdir378gPyU0nWtM/wAVeZrcXVnK5XSrFiRG4jYq&#xA;80oBHIc14qp22NQds1Ov1pieCHPq52mwAjiL6QsrGysbZLWyt47W1iFIoIUWONR4KqgAZpJSJNlz&#xA;qVsCuxV2KsY89ap5Gj0q4sfNkkItJY2YQTijPRSf3BNKuO3A1ByjNOFVJ2XZuHVHIJYAeIHmP0+X&#xA;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&#xA;zRum3hXocVTbSvzPkvNa13y9daHcWPmHRLMX/wBSeaGSO4hYfCY50JUEkgfEB1+dFUb+XHn1/PHl&#xA;RfMlvpcthbTvKtjFPLGzTCJijNVK8B6isnxb7V6UxVJ/L/506VfeVte8z6xp02h6ToFw1pPJO6Sv&#xA;JPGeLxxrHvUOyKPEt7Yqoaj+ct7ocFnqnmfylqGjeW76SONNVeW3maD1fsNd28TNJCPHqR067Yqn&#xA;A/Mgn8yofI66VIz3Fl+k4dUWaJoWtDVRIFFW/vFKU+npiqHvvzPurRfOTnQZnXyaFe7pcRVnjaIX&#xA;HOMdqW7CQhvl1xVW8nfmHq3mNtKnfyzdWGk6zbtc2epNPBNGFCB1WRYyXQuDtyGKpF/zkB5q84+V&#xA;PL2max5c1NbIvfxWV3DJBFMrpOrESAyKxDIU6dCD7YqjdO1Dzromsa0L/wAwwebLTS9MN3PYRQW9&#xA;lcQTl6xK5Qt/exxS8a/y79jiqG8u/nnaapc+WBe6Jc6bYebjKmjX7ywyo0sLFTHIiHmhYig27j3o&#xA;qyPzd+ZGg+V/MXlzQtQ5G58yXDW1sykUjI4qrSDrR5HVB/ZiqD/Mf81dN8g3WkHWLKV9L1Sb0H1G&#xA;JlIgYUqXjPxFQprVcVTC787PH5t0XQrXTmvLTXLWW9tdXimjMAig4GQ8RVjtNHxI2PLbFUktvzX1&#xA;LWkvrzyh5Xute0awkeE6mLiC2S4eLaQWaSEvMB4niD2xVMvOn5naT5R8j23mzVLWdYbn6sEsKBZw&#xA;9yAxQhtg0acmYf5OKqn5hfmFb+T/ACefNa2T6rpiGEym3kRSIrghY5QW2ZSzqPpxVK9V/Na7ttZ0&#xA;jy7p/ly41DzLqmnDVpdO+sQQpb25LKQ07koz80K0X78VUtZ/Ny80+48q20fle9nufNkJeygeSKCS&#xA;KZFDyQTiT7DIrA1O3XwxVM/8d+Yf0P8AWf8ACV7+lf0j+jf0T6sPL+79T6x69fR9Kn7XLrt12xV5&#xA;F+YvlCDzz+d+pabdWl5DYzaGdNsdWFtc/V01FH9aMmVU4cBurVPE7itSMKq+k+ZtZX8kvMvkLXdF&#xA;urTzNotjNp0FvbWcrx3Ubn0opIfRQoficByNj9vuaKp1+T115f0uTRkg/Ts+rjQobbXLe/hv2t7D&#xA;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&#xA;zMP/AJE/5n++b/8AJf536H//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:0180117407206811994CC23D40EB989A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0180117407206811994CC23D40EB989A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:7f7962e7-4621-11da-8468-000a959f60fc</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:be7cca52-4621-11da-8468-000a959f60fc</stRef:instanceID>
            <stRef:documentID>uuid:7f7962e7-4621-11da-8468-000a959f60fc</stRef:documentID>
            <stRef:originalDocumentID>uuid:7f7962e7-4621-11da-8468-000a959f60fc</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811994CC23D40EB989A</stEvt:instanceID>
                  <stEvt:when>2010-03-26T14:06:06+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>595.275391</stDim:w>
            <stDim:h>841.889648</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Groupe de nuances par d√©faut</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 J=100 N=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 J=100 N=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 J=0 N=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 J=0 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 J=0 N=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=1 M=45 J=60 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>1.179999</xmpG:cyan>
                           <xmpG:magenta>44.709999</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=3 M=50 J=7 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>2.749997</xmpG:cyan>
                           <xmpG:magenta>49.800003</xmpG:magenta>
                           <xmpG:yellow>7.059998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=2 M=91 J=92 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>2.350003</xmpG:cyan>
                           <xmpG:magenta>90.979996</xmpG:magenta>
                           <xmpG:yellow>91.759995</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=95 M=19 J=95 N=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>94.900009</xmpG:cyan>
                           <xmpG:magenta>18.820000</xmpG:magenta>
                           <xmpG:yellow>94.900009</xmpG:yellow>
                           <xmpG:black>5.489999</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=94 M=40 J=13 N=3</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>93.729996</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>13.330001</xmpG:yellow>
                           <xmpG:black>3.140002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=2 J=98 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>1.569998</xmpG:magenta>
                           <xmpG:yellow>97.649994</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=94 J=24 N=6</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.610001</xmpG:cyan>
                           <xmpG:magenta>94.119995</xmpG:magenta>
                           <xmpG:yellow>23.530001</xmpG:yellow>
                           <xmpG:black>6.269998</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=33 M=35 J=35 N=11</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>32.550003</xmpG:cyan>
                           <xmpG:magenta>34.899998</xmpG:magenta>
                           <xmpG:yellow>34.509998</xmpG:yellow>
                           <xmpG:black>10.979998</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=29 M=66 J=94 N=16</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>28.630001</xmpG:cyan>
                           <xmpG:magenta>66.269997</xmpG:magenta>
                           <xmpG:yellow>93.729996</xmpG:yellow>
                           <xmpG:black>16.079998</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=90 J=3 N=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>74.900002</xmpG:cyan>
                           <xmpG:magenta>90.200005</xmpG:magenta>
                           <xmpG:yellow>2.749997</xmpG:yellow>
                           <xmpG:black>0.389999</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Aigue-marine</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>94.509995</xmpG:cyan>
                           <xmpG:magenta>5.100000</xmpG:magenta>
                           <xmpG:yellow>53.329998</xmpG:yellow>
                           <xmpG:black>0.780000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Bleu</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>94.509995</xmpG:cyan>
                           <xmpG:magenta>50.980003</xmpG:magenta>
                           <xmpG:yellow>2.750000</xmpG:yellow>
                           <xmpG:black>0.390000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Bleu gris</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>44.709999</xmpG:cyan>
                           <xmpG:magenta>35.290001</xmpG:magenta>
                           <xmpG:yellow>23.920000</xmpG:yellow>
                           <xmpG:black>9.410000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Bleu ciel</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>81.570000</xmpG:cyan>
                           <xmpG:magenta>6.270000</xmpG:magenta>
                           <xmpG:yellow>5.100000</xmpG:yellow>
                           <xmpG:black>0.390000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Marron</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>33.329998</xmpG:cyan>
                           <xmpG:magenta>82.349998</xmpG:magenta>
                           <xmpG:yellow>95.690002</xmpG:yellow>
                           <xmpG:black>25.490002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Bleu fonc√à</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>95.690002</xmpG:cyan>
                           <xmpG:magenta>90.979996</xmpG:magenta>
                           <xmpG:yellow>8.240000</xmpG:yellow>
                           <xmpG:black>1.960000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Vert</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>94.900009</xmpG:cyan>
                           <xmpG:magenta>36.859997</xmpG:magenta>
                           <xmpG:yellow>95.290001</xmpG:yellow>
                           <xmpG:black>32.160000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Or</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>5.100000</xmpG:cyan>
                           <xmpG:magenta>19.610001</xmpG:magenta>
                           <xmpG:yellow>92.939995</xmpG:yellow>
                           <xmpG:black>0.390000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Vert prairie</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>75.689995</xmpG:cyan>
                           <xmpG:magenta>6.270000</xmpG:magenta>
                           <xmpG:yellow>98.039993</xmpG:yellow>
                           <xmpG:black>0.390000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Orange</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>1.960000</xmpG:cyan>
                           <xmpG:magenta>44.709999</xmpG:magenta>
                           <xmpG:yellow>93.329994</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Rouge</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>12.940000</xmpG:cyan>
                           <xmpG:magenta>92.549995</xmpG:magenta>
                           <xmpG:yellow>96.470001</xmpG:yellow>
                           <xmpG:black>2.350000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Violet</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>45.100002</xmpG:cyan>
                           <xmpG:magenta>90.979996</xmpG:magenta>
                           <xmpG:yellow>1.960000</xmpG:yellow>
                           <xmpG:black>0.390000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -280.96 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 280.96 li
214.182 280.96 li
214.182 0 li
cp
clp
[1 0 0 1 0 0 ]ct
213.823 280.96 mo
.823242 280.96 li
.823242 0 li
213.823 0 li
213.823 280.96 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
213.823 280.96 mo
.823242 280.96 li
.823242 162.46 li
213.823 162.46 li
213.823 280.96 li
cp
.9647 .7961 .0314 .00779998 cmyk
f
6.83936 109.04 mo
6.41699 109.04 6.03613 109.103 5.57178 109.208 cv
5.57178 110.454 5.55127 112.715 5.55127 114.468 cv
5.7832 114.51 6.20605 114.531 6.48145 114.531 cv
8.21191 114.531 9.375 113.454 9.375 111.807 cv
9.375 110.201 8.29688 109.04 6.83936 109.04 cv
cp
12.2676 122.261 mo
11.4863 122.261 11.042 122.156 10.5991 121.86 cv
9.90137 121.396 9.1626 120.129 8.74121 119.41 cv
8.02246 118.164 7.21973 116.833 6.45996 115.714 cv
6.33203 115.734 6.22705 115.734 6.14209 115.734 cv
5.93066 115.734 5.76172 115.714 5.55127 115.714 cv
5.55127 116.833 li
5.55127 117.403 5.57178 117.974 5.57178 118.544 cv
5.59375 119.685 5.61475 120.171 5.7832 120.614 cv
5.99512 121.163 6.375 121.438 7.07178 121.502 cv
7.07178 122.092 li
6.58545 122.071 li
6.03613 122.05 5.27637 122.071 4.28418 122.071 cv
3.3125 122.071 2.55176 122.05 2.00293 122.071 cv
1.49561 122.092 li
1.49561 121.502 li
2.02393 121.459 2.27686 121.354 2.53027 121.078 cv
2.76318 120.804 2.91162 120.424 2.9541 119.938 cv
3.0166 119.304 3.03809 118.925 3.03809 116.833 cv
3.03809 113.285 li
3.03809 110.708 2.9541 110.074 2.80469 109.483 cv
2.65771 108.913 2.21484 108.681 1.49561 108.596 cv
1.49561 108.005 li
1.91895 108.047 2.34131 108.026 2.76318 108.026 cv
3.86133 108.026 4.19971 108.026 5.50879 107.962 cv
6.64941 107.92 7.30469 107.899 7.81104 107.899 cv
9.24756 107.899 10.1128 108.11 10.8311 108.617 cv
11.6338 109.187 12.1621 110.286 12.1621 111.384 cv
12.1621 113.117 11.0215 114.531 9.07813 115.25 cv
9.88086 116.263 10.5146 117.276 11.2544 118.438 cv
11.9302 119.515 12.6055 120.445 13.1338 120.974 cv
13.4297 121.289 13.6191 121.396 14.0205 121.502 cv
14.0205 122.092 li
13.4717 122.22 12.9219 122.261 12.2676 122.261 cv
cp
0 0 0 1 cmyk
f
23.1045 121.83 mo
22.9473 122.092 22.7725 122.145 21.8125 122.145 cv
21.2188 122.145 20.644 122.109 20.0508 122.092 cv
19.2129 122.075 18.375 122.04 17.5386 122.04 cv
16.7002 122.04 15.8628 122.058 15.0264 122.092 cv
15.0264 121.604 li
15.811 121.534 16.1597 121.08 16.2295 120.313 cv
16.2822 119.789 16.2822 119.23 16.2822 118.324 cv
16.2822 113.386 li
16.2822 112.461 16.2295 112.042 16.0898 111.677 cv
15.9326 111.223 15.6182 111.013 15.0264 110.943 cv
15.0264 110.454 li
23.1914 110.454 li
23.1914 110.96 23.1748 111.484 23.1748 111.99 cv
23.1748 112.409 23.1572 112.81 23.1914 113.229 cv
22.5645 113.229 li
22.4409 111.886 21.8652 111.519 19.7891 111.519 cv
19.4048 111.519 18.8994 111.536 18.4805 111.554 cv
18.4458 112.234 18.4287 112.461 18.4287 113.473 cv
18.4287 115.496 li
18.6899 115.514 18.8994 115.514 19.2129 115.514 cv
21.0283 115.514 21.5864 115.253 21.6909 114.311 cv
22.3193 114.311 li
22.2842 114.59 22.2842 115.166 22.2842 116.038 cv
22.2842 116.929 22.3018 117.451 22.3193 117.73 cv
21.6909 117.73 li
21.6387 116.736 21.167 116.491 19.3711 116.491 cv
19.0557 116.491 18.7427 116.509 18.4287 116.509 cv
18.4287 117.608 18.4458 118.707 18.4458 119.807 cv
18.4458 120.54 18.5674 120.783 18.9863 120.889 cv
19.248 120.959 19.6494 120.977 20.1904 120.977 cv
22.0747 120.977 22.7378 120.557 23.1396 119.126 cv
23.8203 119.266 li
23.5752 120.487 23.2959 121.5 23.1045 121.83 cv
cp
19.2129 109.321 mo
18.3926 108.832 li
20.1211 106.285 li
22.127 106.651 li
19.2129 109.321 li
cp
f
30.3799 116.911 mo
30.2056 116.911 30.1191 116.911 29.8916 116.893 cv
29.5078 116.003 li
31.1479 115.898 32.0547 115.096 32.0547 113.77 cv
32.0547 112.374 31.0957 111.379 29.7695 111.379 cv
29.5605 111.379 29.3848 111.397 29.1069 111.449 cv
29.1069 112.531 29.0718 113.612 29.0718 114.694 cv
29.0718 117.748 li
29.0718 120.033 29.0894 120.417 29.2637 120.871 cv
29.4194 121.325 29.7349 121.552 30.3281 121.604 cv
30.3281 122.092 li
29.9082 122.075 li
29.4551 122.058 28.8271 122.058 27.9893 122.058 cv
27.1694 122.058 26.5244 122.058 26.0879 122.075 cv
25.6689 122.092 li
25.6689 121.604 li
26.4541 121.534 26.8032 121.08 26.873 120.313 cv
26.9248 119.789 26.9248 119.476 26.9248 117.748 cv
26.9248 113.386 li
26.9248 112.461 26.873 112.042 26.7334 111.677 cv
26.5771 111.223 26.2627 111.013 25.6689 110.943 cv
25.6689 110.454 li
25.8789 110.472 25.7217 110.472 26.4717 110.472 cv
26.7686 110.472 27.1875 110.472 27.7461 110.454 cv
28.6357 110.42 29.5254 110.368 30.415 110.368 cv
32.8931 110.368 34.376 111.589 34.376 113.612 cv
34.376 115.514 32.6831 116.911 30.3799 116.911 cv
cp
f
46.2373 111.327 mo
46.0449 111.589 45.958 111.938 45.9219 112.636 cv
45.8877 113.386 45.8701 113.961 45.8701 115.044 cv
45.8701 115.445 45.8877 116.648 45.8877 117.853 cv
45.8877 119.074 45.6958 119.807 45.1899 120.54 cv
44.3872 121.708 43.0615 122.301 41.3164 122.301 cv
40.2178 122.301 39.3799 122.092 38.5957 121.569 cv
37.373 120.783 36.9023 119.753 36.9023 117.904 cv
36.9023 116.02 36.9375 115.202 36.9375 114.59 cv
36.9375 113.7 36.9893 112.775 36.832 111.903 cv
36.7275 111.275 36.3965 111.013 35.6641 110.943 cv
35.6641 110.454 li
36.0654 110.472 li
36.5181 110.49 37.1636 110.49 38.0005 110.49 cv
38.8389 110.49 39.4834 110.49 39.9385 110.472 cv
40.3389 110.454 li
40.3389 110.943 li
39.7988 111.013 39.5366 111.153 39.3623 111.449 cv
39.2061 111.71 39.1357 112.06 39.1182 112.827 cv
39.0835 113.928 39.0659 115.009 39.0659 116.107 cv
39.0659 119.108 39.1357 119.685 39.6772 120.313 cv
40.0952 120.801 40.8105 121.132 41.6484 121.132 cv
42.8174 121.132 43.9512 120.54 44.3003 119.37 cv
44.5264 118.62 44.561 118.079 44.561 116.107 cv
44.561 114.381 li
44.561 112.392 44.5088 111.781 44.3179 111.484 cv
44.125 111.17 43.8633 110.996 43.4111 110.943 cv
43.4111 110.454 li
44.1084 110.49 44.3521 110.49 45.2246 110.49 cv
46.1147 110.49 46.3589 110.49 47.0566 110.454 cv
47.0566 110.943 li
46.6733 110.996 46.4287 111.101 46.2373 111.327 cv
cp
f
53.2148 116.229 mo
52.918 116.229 52.6035 116.247 52.1504 116.282 cv
52.1328 116.753 52.1328 116.84 52.1328 117.643 cv
52.1328 118.673 li
52.1328 119.649 52.1675 120.173 52.29 120.521 cv
52.4297 120.959 52.8477 121.168 53.5811 121.168 cv
55.0635 121.168 55.9014 120.348 55.9014 118.882 cv
55.9014 117.259 54.855 116.229 53.2148 116.229 cv
cp
53.1626 111.362 mo
52.8477 111.362 52.5342 111.397 52.2202 111.397 cv
52.2026 112.531 52.1675 114.485 52.1504 115.218 cv
52.3418 115.235 52.5859 115.253 52.918 115.253 cv
54.6279 115.253 55.6045 114.538 55.6045 113.281 cv
55.6045 112.078 54.6973 111.362 53.1626 111.362 cv
cp
56.9658 121.272 mo
56.1465 121.9 55.2212 122.109 53.4404 122.109 cv
52.4995 122.109 51.5391 122.04 50.5972 122.04 cv
50.2139 122.04 49.498 122.04 49.0098 122.075 cv
48.7998 122.092 li
48.7998 121.604 li
49.6196 121.534 49.9346 121.115 50.0044 120.313 cv
50.0557 119.789 50.0732 119.476 50.0732 117.748 cv
50.0732 114.45 li
50.0732 112.827 50.0557 112.13 49.8818 111.677 cv
49.708 111.223 49.3936 111.013 48.7998 110.943 cv
48.7998 110.454 li
49.6025 110.49 50.0732 110.49 51.1904 110.49 cv
52.2026 110.49 53.7207 110.437 54.7319 110.437 cv
56.3379 110.437 57.8037 111.205 57.8037 113.02 cv
57.8037 114.363 56.9658 115.271 55.3081 115.69 cv
57.1572 116.056 58.1348 117.12 58.1348 118.848 cv
58.1348 119.894 57.751 120.68 56.9658 121.272 cv
cp
f
67.9893 121.848 mo
67.832 122.092 67.623 122.145 66.75 122.145 cv
66.3145 122.145 65.8613 122.127 65.4243 122.109 cv
64.3438 122.075 63.3652 122.04 62.1787 122.04 cv
61.2891 122.04 60.6963 122.058 60.1377 122.092 cv
60.1377 121.604 li
60.5752 121.569 60.8018 121.482 60.9922 121.255 cv
61.3066 120.889 61.3936 120.435 61.3936 119.161 cv
61.3936 118.288 61.4116 117.591 61.4116 116.684 cv
61.4116 114.816 li
61.4116 112.461 61.3936 112.147 61.2202 111.677 cv
61.0625 111.223 60.7305 111.013 60.1377 110.943 cv
60.1377 110.454 li
60.5752 110.472 li
61.0449 110.49 61.6899 110.49 62.563 110.49 cv
63.418 110.49 64.0811 110.49 64.5352 110.472 cv
64.9712 110.454 li
64.9712 110.943 li
64.0811 110.943 63.6973 111.415 63.5923 112.251 cv
63.5576 112.548 63.5405 112.827 63.5405 114.816 cv
63.5405 117.73 li
63.5405 120.155 63.5576 120.453 63.7852 120.697 cv
63.9761 120.889 64.3438 120.977 65.0938 120.977 cv
66.0522 120.977 66.5752 120.871 67.0122 120.626 cv
67.501 120.365 67.8672 119.842 68.041 119.108 cv
68.7041 119.283 li
68.5127 120.295 68.1812 121.552 67.9893 121.848 cv
cp
f
74.0586 122.075 mo
73.6216 122.058 72.9761 122.058 72.1567 122.058 cv
71.3198 122.058 70.6914 122.058 70.2373 122.075 cv
69.8184 122.092 li
69.8184 121.604 li
70.6387 121.534 70.9521 121.115 71.0215 120.313 cv
71.0747 119.789 71.0923 119.476 71.0923 117.748 cv
71.0923 114.816 li
71.0923 114.363 71.0747 113.893 71.0747 113.386 cv
71.0747 112.461 71.04 112.042 70.8999 111.677 cv
70.7432 111.223 70.4111 111.013 69.8184 110.943 cv
69.8184 110.454 li
70.2373 110.472 li
70.6914 110.49 71.3198 110.49 72.1567 110.49 cv
72.9761 110.49 73.6216 110.49 74.0586 110.472 cv
74.4766 110.454 li
74.4766 110.943 li
73.7266 110.996 73.3428 111.467 73.2729 112.251 cv
73.2207 112.757 73.2207 113.246 73.2207 114.816 cv
73.2207 117.748 li
73.2207 120.033 73.2383 120.417 73.4131 120.871 cv
73.5693 121.325 73.8838 121.552 74.4766 121.604 cv
74.4766 122.092 li
74.0586 122.075 li
cp
f
82.1333 111.433 mo
80.0039 111.433 78.4863 113.211 78.4863 115.707 cv
78.4863 118.742 80.2832 121.132 82.5693 121.132 cv
84.7163 121.132 86.2339 119.317 86.2339 116.788 cv
86.2339 113.788 84.4365 111.433 82.1333 111.433 cv
cp
90.3687 125.232 mo
89.0078 125.232 87.5586 124.813 86.1816 124.046 cv
85.3955 123.61 84.2959 122.86 83.4941 122.198 cv
82.9004 122.284 82.6738 122.301 82.1162 122.301 cv
78.5908 122.301 76.2529 119.998 76.2529 116.527 cv
76.2529 112.81 78.7832 110.245 82.4814 110.245 cv
86.0757 110.245 88.4663 112.548 88.4663 116.003 cv
88.4663 118.463 87.2109 120.645 85.2217 121.656 cv
85.8496 121.971 86.4775 122.318 87.0879 122.686 cv
88.8677 123.767 90.0894 124.221 91.2412 124.221 cv
91.9556 124.221 92.5488 124.064 93.2476 123.715 cv
93.4741 124.326 li
92.6182 124.919 91.5547 125.232 90.3687 125.232 cv
cp
f
100.557 111.327 mo
100.365 111.589 100.277 111.938 100.242 112.636 cv
100.207 113.386 100.189 113.961 100.189 115.044 cv
100.189 115.445 100.207 116.648 100.207 117.853 cv
100.207 119.074 100.016 119.807 99.5103 120.54 cv
98.707 121.708 97.3809 122.301 95.6362 122.301 cv
94.5361 122.301 93.6992 122.092 92.915 121.569 cv
91.6934 120.783 91.2227 119.753 91.2227 117.904 cv
91.2227 116.02 91.2578 115.202 91.2578 114.59 cv
91.2578 113.7 91.3086 112.775 91.1523 111.903 cv
91.0479 111.275 90.7158 111.013 89.9834 110.943 cv
89.9834 110.454 li
90.3848 110.472 li
90.8389 110.49 91.4844 110.49 92.3213 110.49 cv
93.1587 110.49 93.8047 110.49 94.2578 110.472 cv
94.6592 110.454 li
94.6592 110.943 li
94.1182 111.013 93.856 111.153 93.6816 111.449 cv
93.5254 111.71 93.4556 112.06 93.4385 112.827 cv
93.4023 113.928 93.3857 115.009 93.3857 116.107 cv
93.3857 119.108 93.4556 119.685 93.9961 120.313 cv
94.4155 120.801 95.1299 121.132 95.9678 121.132 cv
97.1362 121.132 98.2705 120.54 98.6201 119.37 cv
98.8462 118.62 98.8818 118.079 98.8818 116.107 cv
98.8818 114.381 li
98.8818 112.392 98.8291 111.781 98.6377 111.484 cv
98.4463 111.17 98.1836 110.996 97.7295 110.943 cv
97.7295 110.454 li
98.4277 110.49 98.6724 110.49 99.5439 110.49 cv
100.435 110.49 100.679 110.49 101.376 110.454 cv
101.376 110.943 li
100.993 110.996 100.749 111.101 100.557 111.327 cv
cp
f
111.198 121.83 mo
111.042 122.092 110.867 122.145 109.907 122.145 cv
109.314 122.145 108.738 122.109 108.145 122.092 cv
107.309 122.075 106.47 122.04 105.632 122.04 cv
104.796 122.04 103.957 122.058 103.12 122.092 cv
103.12 121.604 li
103.905 121.534 104.254 121.08 104.325 120.313 cv
104.377 119.789 104.377 119.23 104.377 118.324 cv
104.377 113.386 li
104.377 112.461 104.325 112.042 104.184 111.677 cv
104.026 111.223 103.713 111.013 103.12 110.943 cv
103.12 110.454 li
111.286 110.454 li
111.286 110.96 111.269 111.484 111.269 111.99 cv
111.269 112.409 111.251 112.81 111.286 113.229 cv
110.658 113.229 li
110.535 111.886 109.959 111.519 107.882 111.519 cv
107.499 111.519 106.993 111.536 106.574 111.554 cv
106.54 112.234 106.522 112.461 106.522 113.473 cv
106.522 115.496 li
106.785 115.514 106.993 115.514 107.309 115.514 cv
109.122 115.514 109.68 115.253 109.785 114.311 cv
110.413 114.311 li
110.378 114.59 110.378 115.166 110.378 116.038 cv
110.378 116.929 110.396 117.451 110.413 117.73 cv
109.785 117.73 li
109.732 116.736 109.262 116.491 107.465 116.491 cv
107.149 116.491 106.837 116.509 106.522 116.509 cv
106.522 117.608 106.54 118.707 106.54 119.807 cv
106.54 120.54 106.662 120.783 107.081 120.889 cv
107.343 120.959 107.743 120.977 108.284 120.977 cv
110.169 120.977 110.832 120.557 111.233 119.126 cv
111.914 119.266 li
111.669 120.487 111.391 121.5 111.198 121.83 cv
cp
f
127.341 111.405 mo
127.32 109.885 126.434 109.294 124.046 109.294 cv
123.56 109.294 123.096 109.314 122.567 109.356 cv
122.526 110.814 122.526 111.828 122.526 114.13 cv
123.033 114.151 123.285 114.172 123.645 114.172 cv
125.609 114.172 126.2 113.834 126.308 112.694 cv
127.066 112.694 li
127.066 113.285 127.024 113.898 127.024 114.488 cv
127.024 115.271 127.066 116.073 127.066 116.855 cv
126.308 116.855 li
126.159 115.587 125.673 115.334 123.455 115.334 cv
123.075 115.334 122.929 115.334 122.526 115.354 cv
122.526 117.721 li
122.526 118.186 122.526 118.692 122.547 119.241 cv
122.589 120.402 122.675 121.417 124.046 121.502 cv
124.046 122.092 li
123.539 122.071 li
123.011 122.05 122.229 122.05 121.238 122.05 cv
120.224 122.05 119.463 122.05 118.914 122.071 cv
118.408 122.092 li
118.408 121.502 li
119.358 121.417 119.78 120.867 119.864 119.938 cv
119.927 119.304 119.927 118.925 119.927 116.833 cv
119.927 111.553 li
119.927 110.433 119.864 109.928 119.696 109.483 cv
119.506 108.934 119.126 108.681 118.408 108.596 cv
118.408 108.005 li
128.123 108.005 li
128.08 108.406 128.08 109.082 128.08 109.969 cv
128.08 110.814 128.08 110.94 128.123 111.405 cv
127.341 111.405 li
cp
f
134.535 111.31 mo
134.187 111.31 133.874 111.362 133.489 111.449 cv
133.489 112.479 133.473 114.346 133.473 115.793 cv
133.665 115.829 134.012 115.846 134.239 115.846 cv
135.671 115.846 136.63 114.957 136.63 113.595 cv
136.63 112.269 135.741 111.31 134.535 111.31 cv
cp
139.021 122.232 mo
138.375 122.232 138.009 122.145 137.642 121.9 cv
137.066 121.516 136.455 120.47 136.105 119.877 cv
135.514 118.848 134.85 117.748 134.222 116.823 cv
134.116 116.84 134.029 116.84 133.961 116.84 cv
133.786 116.84 133.647 116.823 133.473 116.823 cv
133.473 117.748 li
133.473 118.22 133.489 118.69 133.489 119.161 cv
133.508 120.103 133.523 120.504 133.665 120.871 cv
133.837 121.325 134.151 121.552 134.729 121.604 cv
134.729 122.092 li
134.326 122.075 li
133.874 122.058 133.245 122.075 132.425 122.075 cv
131.622 122.075 130.995 122.058 130.541 122.075 cv
130.122 122.092 li
130.122 121.604 li
130.558 121.569 130.768 121.482 130.979 121.255 cv
131.169 121.027 131.292 120.714 131.325 120.313 cv
131.379 119.789 131.396 119.476 131.396 117.748 cv
131.396 114.816 li
131.396 112.688 131.325 112.165 131.204 111.677 cv
131.081 111.205 130.716 111.013 130.122 110.943 cv
130.122 110.454 li
130.472 110.49 130.82 110.472 131.169 110.472 cv
132.076 110.472 132.354 110.472 133.438 110.42 cv
134.38 110.385 134.921 110.368 135.338 110.368 cv
136.524 110.368 137.241 110.543 137.833 110.96 cv
138.497 111.433 138.934 112.339 138.934 113.246 cv
138.934 114.677 137.989 115.846 136.385 116.439 cv
137.05 117.276 137.571 118.114 138.184 119.074 cv
138.741 119.963 139.301 120.732 139.735 121.168 cv
139.98 121.429 140.137 121.516 140.468 121.604 cv
140.468 122.092 li
140.015 122.198 139.561 122.232 139.021 122.232 cv
cp
f
145.959 113.525 mo
145.505 114.711 144.877 116.247 144.616 117.103 cv
147.197 117.103 li
145.959 113.525 li
cp
151.611 122.075 mo
151.176 122.058 150.548 122.058 149.746 122.058 cv
148.925 122.058 148.297 122.058 147.86 122.075 cv
147.46 122.092 li
147.46 121.604 li
148.017 121.569 148.351 121.272 148.351 120.783 cv
148.351 120.609 148.297 120.365 148.121 119.842 cv
147.912 119.196 147.773 118.759 147.564 118.167 cv
144.214 118.167 li
143.864 119.179 li
143.603 119.963 143.465 120.54 143.465 120.835 cv
143.465 121.343 143.691 121.569 144.248 121.604 cv
144.248 122.092 li
143.587 122.075 143.342 122.058 142.505 122.058 cv
141.684 122.058 141.439 122.075 140.776 122.092 cv
140.776 121.604 li
141.039 121.569 141.127 121.534 141.318 121.359 cv
141.648 121.063 141.981 120.453 142.505 119.126 cv
144.16 114.904 li
144.616 113.77 145.296 111.938 145.769 110.454 cv
146.954 110.454 li
147.11 110.996 147.477 111.852 147.722 112.479 cv
150.181 118.777 li
150.6 119.842 150.896 120.47 151.125 120.871 cv
151.367 121.289 151.611 121.5 152.032 121.604 cv
152.032 122.092 li
151.611 122.075 li
cp
f
164.031 111.467 mo
163.839 111.781 163.804 112.078 163.77 112.984 cv
163.717 114.555 163.699 116.998 163.699 118.167 cv
163.699 120.835 li
163.699 121.237 163.753 121.848 163.753 122.092 cv
162.566 122.092 li
161.434 120.609 159.077 117.73 159.077 117.73 cv
158.798 117.382 156.616 114.694 155.517 113.351 cv
155.517 113.718 155.499 113.49 155.499 114.625 cv
155.499 115.758 li
155.499 117.067 155.517 118.358 155.568 119.668 cv
155.604 120.399 155.673 120.766 155.849 121.097 cv
156.023 121.446 156.284 121.586 156.791 121.604 cv
156.791 122.092 li
156.179 122.058 155.551 122.058 154.941 122.058 cv
154.313 122.058 153.701 122.058 153.074 122.092 cv
153.074 121.604 li
154.227 121.569 154.261 120.609 154.294 119.703 cv
154.313 118.97 154.329 118.358 154.329 117.241 cv
154.329 113.56 li
154.329 112.112 154.261 111.763 153.998 111.379 cv
153.825 111.101 153.597 110.996 153.074 110.943 cv
153.074 110.454 li
153.65 110.49 153.859 110.49 154.593 110.49 cv
155.309 110.49 155.517 110.49 156.095 110.454 cv
156.304 110.838 156.634 111.188 157.837 112.653 cv
159.547 114.729 161.083 116.491 162.53 118.306 cv
162.53 114.502 li
162.53 112.757 162.496 112.321 162.408 111.869 cv
162.287 111.31 161.954 111.03 161.31 110.943 cv
161.31 110.454 li
162.023 110.49 162.271 110.49 163.158 110.49 cv
164.048 110.49 164.292 110.49 165.009 110.454 cv
165.009 110.943 li
164.537 110.96 164.275 111.048 164.031 111.467 cv
cp
f
176.208 121.674 mo
175.073 122.127 174.078 122.301 172.7 122.301 cv
172.542 123 li
172.631 122.982 172.805 123 172.875 123 cv
173.537 123 173.975 123.471 173.975 124.046 cv
173.975 124.989 173.224 125.652 172.036 125.652 cv
171.688 125.652 171.375 125.581 170.991 125.425 cv
171.235 124.745 li
171.462 124.831 171.671 124.884 171.862 124.884 cv
172.352 124.884 172.683 124.64 172.683 124.203 cv
172.683 123.855 172.509 123.646 172.248 123.646 cv
172.105 123.646 171.984 123.697 171.862 123.784 cv
171.479 123.68 li
171.826 122.266 li
170.293 122.127 169.176 121.621 168.233 120.645 cv
167.152 119.545 166.575 118.043 166.575 116.282 cv
166.575 112.514 169.002 110.245 172.996 110.245 cv
174.2 110.245 175.37 110.42 176.381 110.751 cv
176.347 111.153 176.347 111.554 176.347 111.938 cv
176.347 112.234 176.364 112.862 176.381 113.264 cv
175.701 113.264 li
175.422 112.025 174.427 111.362 172.84 111.362 cv
170.38 111.362 168.879 113.003 168.879 115.724 cv
168.879 118.865 170.641 121.15 173.067 121.15 cv
174.531 121.15 175.527 120.417 175.929 119.021 cv
176.591 119.161 li
176.435 119.753 176.276 120.75 176.208 121.674 cv
cp
f
182.659 113.525 mo
182.206 114.711 181.577 116.247 181.317 117.103 cv
183.899 117.103 li
182.659 113.525 li
cp
188.313 122.075 mo
187.877 122.058 187.249 122.058 186.446 122.058 cv
185.625 122.058 184.998 122.058 184.563 122.075 cv
184.16 122.092 li
184.16 121.604 li
184.718 121.569 185.051 121.272 185.051 120.783 cv
185.051 120.609 184.998 120.365 184.822 119.842 cv
184.613 119.196 184.475 118.759 184.266 118.167 cv
180.915 118.167 li
180.565 119.179 li
180.305 119.963 180.164 120.54 180.164 120.835 cv
180.164 121.343 180.392 121.569 180.949 121.604 cv
180.949 122.092 li
180.287 122.075 180.043 122.058 179.206 122.058 cv
178.384 122.058 178.141 122.075 177.478 122.092 cv
177.478 121.604 li
177.74 121.569 177.826 121.534 178.02 121.359 cv
178.351 121.063 178.682 120.453 179.206 119.126 cv
180.861 114.904 li
181.317 113.77 181.997 111.938 182.468 110.454 cv
183.655 110.454 li
183.812 110.996 184.177 111.852 184.421 112.479 cv
186.882 118.777 li
187.3 119.842 187.598 120.47 187.825 120.871 cv
188.068 121.289 188.313 121.5 188.733 121.604 cv
188.733 122.092 li
188.313 122.075 li
cp
f
194.017 122.075 mo
193.579 122.058 192.934 122.058 192.112 122.058 cv
191.276 122.058 190.646 122.058 190.193 122.075 cv
189.775 122.092 li
189.775 121.604 li
190.596 121.534 190.908 121.115 190.979 120.313 cv
191.03 119.789 191.049 119.476 191.049 117.748 cv
191.049 114.816 li
191.049 114.363 191.03 113.893 191.03 113.386 cv
191.03 112.461 190.996 112.042 190.856 111.677 cv
190.699 111.223 190.369 111.013 189.775 110.943 cv
189.775 110.454 li
190.193 110.472 li
190.646 110.49 191.276 110.49 192.112 110.49 cv
192.934 110.49 193.579 110.49 194.017 110.472 cv
194.434 110.454 li
194.434 110.943 li
193.682 110.996 193.3 111.467 193.229 112.251 cv
193.177 112.757 193.177 113.246 193.177 114.816 cv
193.177 117.748 li
193.177 120.033 193.193 120.417 193.368 120.871 cv
193.526 121.325 193.841 121.552 194.434 121.604 cv
194.434 122.092 li
194.017 122.075 li
cp
f
199.438 122.301 mo
198.426 122.301 197.692 122.163 196.507 121.708 cv
196.454 121.045 196.333 120.033 196.191 119.196 cv
196.855 119.091 li
197.273 120.504 198.198 121.237 199.542 121.237 cv
200.78 121.237 201.618 120.592 201.618 119.615 cv
201.618 118.83 201.077 118.288 200.294 117.801 cv
198.46 116.631 li
197.204 115.829 196.472 114.991 196.472 113.456 cv
196.472 111.501 197.954 110.245 200.258 110.245 cv
201.376 110.245 202.3 110.454 203.12 110.874 cv
203.102 111.292 203.102 111.433 203.102 111.973 cv
203.102 112.601 203.102 112.775 203.12 113.264 cv
202.455 113.264 li
202.212 112.008 201.427 111.31 200.224 111.31 cv
199.142 111.31 198.355 111.99 198.355 112.95 cv
198.355 113.788 198.933 114.346 199.855 114.938 cv
201.338 115.898 li
202.752 116.823 203.555 117.714 203.555 119.108 cv
203.555 121.01 201.881 122.301 199.438 122.301 cv
cp
f
213.467 121.83 mo
213.309 122.092 213.135 122.145 212.176 122.145 cv
211.583 122.145 211.006 122.109 210.413 122.092 cv
209.575 122.075 208.737 122.04 207.9 122.04 cv
207.063 122.04 206.225 122.058 205.388 122.092 cv
205.388 121.604 li
206.172 121.534 206.521 121.08 206.592 120.313 cv
206.645 119.789 206.645 119.23 206.645 118.324 cv
206.645 113.386 li
206.645 112.461 206.592 112.042 206.452 111.677 cv
206.293 111.223 205.979 111.013 205.388 110.943 cv
205.388 110.454 li
213.553 110.454 li
213.553 110.96 213.534 111.484 213.534 111.99 cv
213.534 112.409 213.517 112.81 213.553 113.229 cv
212.925 113.229 li
212.804 111.886 212.227 111.519 210.149 111.519 cv
209.766 111.519 209.261 111.536 208.842 111.554 cv
208.808 112.234 208.789 112.461 208.789 113.473 cv
208.789 115.496 li
209.052 115.514 209.261 115.514 209.575 115.514 cv
211.39 115.514 211.948 115.253 212.053 114.311 cv
212.681 114.311 li
212.644 114.59 212.644 115.166 212.644 116.038 cv
212.644 116.929 212.663 117.451 212.681 117.73 cv
212.053 117.73 li
212 116.736 211.529 116.491 209.731 116.491 cv
209.418 116.491 209.104 116.509 208.789 116.509 cv
208.789 117.608 208.808 118.707 208.808 119.807 cv
208.808 120.54 208.929 120.783 209.348 120.889 cv
209.61 120.959 210.011 120.977 210.552 120.977 cv
212.436 120.977 213.1 120.557 213.5 119.126 cv
214.182 119.266 li
213.937 120.487 213.658 121.5 213.467 121.83 cv
cp
f
7.47607 92.229 mo
7.32275 92.4326 7.06689 92.5 6.45605 92.5 cv
5.62402 92.5 4.80811 92.4492 3.97559 92.4326 cv
3.26221 92.4155 2.71777 92.3979 2.34473 92.3979 cv
1.83496 92.3979 .595215 92.4155 .238281 92.4326 cv
0 92.4492 li
.0683594 92.0918 li
.578125 92.0415 .884277 91.8887 1.12207 91.5659 cv
1.39355 91.2256 1.56348 90.751 1.80176 89.7993 cv
2.02246 88.8643 2.12354 88.3042 2.48047 86.5542 cv
2.75195 85.2134 li
3.02441 83.853 3.12598 83.0547 3.12598 82.6299 cv
3.12598 81.8818 2.85449 81.5771 2.12354 81.4922 cv
2.19238 81.1182 li
2.29395 81.1353 2.37939 81.1353 2.43018 81.1353 cv
3.05859 81.1353 3.66992 81.1519 4.29883 81.1519 cv
5.2832 81.1519 5.92871 81.1353 6.21875 81.1353 cv
6.26953 81.1353 6.37061 81.1353 6.49023 81.1182 cv
6.42188 81.4922 li
5.89551 81.5254 5.60645 81.6621 5.35107 82.002 cv
4.92725 82.5444 4.68945 83.2749 4.05957 86.5542 cv
3.83984 87.6924 li
3.56738 89.0854 3.46582 89.5605 3.38086 90.1895 cv
3.34668 90.3936 3.32959 90.6143 3.32959 90.7163 cv
3.32959 91.3789 3.66992 91.583 4.75684 91.583 cv
6.67773 91.583 7.39063 91.1919 8.01758 89.7993 cv
8.47705 89.9688 li
8.06982 91.0898 7.67969 91.9561 7.47607 92.229 cv
cp
f
10.667 92.6357 mo
10.3271 92.6357 10.1064 92.4492 10.1064 92.1436 cv
10.1064 91.9912 10.1572 91.7188 10.2422 91.3447 cv
10.4634 90.4443 10.769 89.2217 10.9385 88.5762 cv
11.1768 87.6924 11.2798 87.0801 11.2798 86.8428 cv
11.2798 86.6221 11.1768 86.5215 10.9893 86.5215 cv
10.8359 86.5215 10.6846 86.5713 10.3271 86.6733 cv
10.209 86.707 li
10.1572 86.2319 li
11.0908 85.8755 12.0088 85.6543 12.4683 85.6543 cv
12.7227 85.6543 12.8242 85.7383 12.8242 85.9429 cv
12.8242 86.1465 12.7402 86.6909 12.4336 87.8794 cv
12.1787 88.8809 li
11.7549 90.5303 11.6519 91.1074 11.6519 91.3789 cv
11.6519 91.6333 11.7881 91.7871 12.043 91.7871 cv
12.1963 91.7871 12.502 91.7188 12.9775 91.5498 cv
13.0117 92.0249 li
12.1113 92.3809 11.1421 92.6357 10.667 92.6357 cv
cp
12.519 83.9561 mo
11.9927 83.9561 11.6519 83.6323 11.6519 83.1396 cv
11.6519 82.5273 12.0942 82.103 12.7056 82.103 cv
13.2153 82.103 13.5381 82.4097 13.5381 82.9028 cv
13.5381 83.5142 13.1128 83.9561 12.519 83.9561 cv
cp
f
20.0078 86.3843 mo
19.7012 86.3843 19.3271 86.5044 18.8516 86.7583 cv
18.3584 87.0137 18.002 87.2852 17.8154 87.54 cv
17.5947 87.8452 17.4072 88.3721 17.1523 89.4927 cv
16.8979 90.5469 16.7788 91.209 16.7788 91.4463 cv
16.7788 91.77 17.1523 91.9561 17.833 91.9561 cv
18.5293 91.9561 19.1235 91.6333 19.5654 91.0054 cv
20.2446 90.0376 20.7544 88.4907 20.7544 87.3862 cv
20.7544 86.7412 20.5 86.3843 20.0078 86.3843 cv
cp
20.0249 91.8374 mo
19.3618 92.4155 18.5791 92.6528 17.374 92.6528 cv
16.0488 92.6528 15.2505 92.4326 15.2505 92.0918 cv
15.2505 91.9561 15.2676 91.7871 15.4365 91.0728 cv
16.3208 87.2168 li
16.6084 85.9766 16.8306 84.9917 17.1357 83.5981 cv
17.3062 82.7827 17.374 82.3408 17.374 82.1206 cv
17.374 81.917 17.2715 81.7979 17.085 81.7979 cv
16.9668 81.7979 16.5923 81.8818 16.3379 81.9678 cv
16.3208 81.4751 li
16.5244 81.4072 li
17.4419 81.1011 18.2061 80.9316 18.5625 80.9316 cv
18.7842 80.9316 18.9194 81.0327 18.9194 81.2202 cv
18.9194 81.4072 18.835 81.8315 18.5459 83.0889 cv
18.0371 85.3311 li
17.8667 86.0615 17.8154 86.3325 17.7646 86.5713 cv
18.835 85.9429 19.769 85.6543 20.6187 85.6543 cv
21.6543 85.6543 22.1641 86.1807 22.1641 87.2515 cv
22.1641 88.8311 21.2642 90.7666 20.0249 91.8374 cv
cp
f
27.6182 86.3325 mo
26.8018 86.3325 25.9351 87.4551 25.5112 89.1025 cv
25.6807 89.1025 li
27.2598 89.1025 28.4497 88.2705 28.4497 87.1826 cv
28.4497 86.707 28.0757 86.3325 27.6182 86.3325 cv
cp
25.8687 89.7305 mo
25.7485 89.7305 25.5957 89.7305 25.375 89.7144 cv
25.3237 90.02 25.3076 90.2754 25.3076 90.5303 cv
25.3076 91.3955 25.6128 91.8545 26.2065 91.8545 cv
26.751 91.8545 27.4297 91.5659 28.4326 90.9375 cv
28.6201 91.5156 li
27.3623 92.2964 26.4111 92.6528 25.5449 92.6528 cv
24.4917 92.6528 23.9136 92.0249 23.9136 90.8867 cv
23.9136 88.083 25.8164 85.6543 28.0078 85.6543 cv
29.0791 85.6543 29.7065 86.1465 29.7065 86.9956 cv
29.7065 88.5586 28.0425 89.7305 25.8687 89.7305 cv
cp
f
36.5195 87.8452 mo
35.959 87.7949 li
35.9922 87.5903 36.0098 87.3525 36.0098 87.1323 cv
36.0098 86.8257 35.7373 86.6055 35.313 86.6055 cv
35.0576 86.6055 34.8032 86.7583 34.583 87.0137 cv
33.9375 87.7432 33.6816 88.8984 33.3091 90.7842 cv
32.9854 92.4326 li
32.3403 92.4658 32.1699 92.4834 31.5078 92.5684 cv
31.6768 91.9224 31.7964 91.4121 31.9316 90.8354 cv
32.3057 89.2559 li
32.561 88.1855 32.6807 87.5225 32.6807 87.166 cv
32.6807 86.7412 32.5781 86.5542 32.375 86.5542 cv
32.2725 86.5542 32.1201 86.5879 31.9487 86.6392 cv
31.5254 86.7754 li
31.4736 86.2656 li
32.3057 85.9263 33.2573 85.6543 33.6816 85.6543 cv
33.8516 85.6543 33.9541 85.7217 33.9883 85.8926 cv
34.0396 86.0957 34.0737 86.3325 34.0898 86.6221 cv
34.8545 85.9937 35.5342 85.6367 36.0098 85.6367 cv
36.332 85.6367 36.7402 85.8076 37.1318 86.0957 cv
36.8589 86.707 36.6553 87.2686 36.5195 87.8452 cv
cp
f
42.2773 86.6909 mo
40.8677 86.6563 li
40.1533 90.1382 li
39.9663 91.0396 39.9502 91.2944 39.9502 91.4292 cv
39.9502 91.667 40.0688 91.8037 40.29 91.8037 cv
40.4082 91.8037 40.6636 91.7358 41.0713 91.6162 cv
41.2402 91.5659 li
41.292 92.0586 li
40.4082 92.4155 39.4907 92.6528 38.999 92.6528 cv
38.6416 92.6528 38.4219 92.4834 38.4219 92.1606 cv
38.4219 91.8711 38.4888 91.4463 38.625 90.9204 cv
38.7783 90.3262 38.8965 89.833 39.0332 89.1709 cv
39.5591 86.6563 li
38.6582 86.6733 li
38.7783 86.1289 li
39.9331 85.9263 40.3232 85.0088 40.6465 84.0225 cv
41.4614 83.853 li
41.0366 85.8584 li
42.4468 85.8403 li
42.2773 86.6909 li
cp
f
47.3555 86.3325 mo
46.5405 86.3325 45.6738 87.4551 45.2495 89.1025 cv
45.4194 89.1025 li
47 89.1025 48.1885 88.2705 48.1885 87.1826 cv
48.1885 86.707 47.8145 86.3325 47.3555 86.3325 cv
cp
45.6074 89.7305 mo
45.4883 89.7305 45.335 89.7305 45.1143 89.7144 cv
45.0625 90.02 45.0459 90.2754 45.0459 90.5303 cv
45.0459 91.3955 45.3521 91.8545 45.9468 91.8545 cv
46.4893 91.8545 47.1689 91.5659 48.1719 90.9375 cv
48.3579 91.5156 li
47.1011 92.2964 46.1509 92.6528 45.2832 92.6528 cv
44.231 92.6528 43.6528 92.0249 43.6528 90.8867 cv
43.6528 88.083 45.5557 85.6543 47.7466 85.6543 cv
48.8174 85.6543 49.4458 86.1465 49.4458 86.9956 cv
49.4458 88.5586 47.7803 89.7305 45.6074 89.7305 cv
cp
47.4927 84.6016 mo
46.9482 84.1592 li
49.0205 81.8145 li
50.5493 82.1885 li
47.4927 84.6016 li
cp
f
79.9092 83.5981 mo
79.4165 83.5981 li
79.4336 83.4116 79.4492 83.3442 79.4492 83.2246 cv
79.4492 82.2905 78.8389 81.9678 77.1396 81.9678 cv
76.5791 81.9678 76.0361 81.9678 75.4751 82.0181 cv
75.1187 83.4287 74.8809 84.6519 74.5918 86.1641 cv
74.8633 86.1641 74.9482 86.1641 75.2197 86.1641 cv
76.3081 86.1641 76.7656 86.1465 77.1577 86.0791 cv
77.7856 85.9604 78.1597 85.5854 78.3467 84.9063 cv
78.8047 84.9063 li
78.5674 85.9087 78.2778 87.3359 78.1597 88.2021 cv
77.7002 88.2021 li
77.7173 88.083 77.7354 87.9819 77.7354 87.9131 cv
77.7354 87.1826 77.2764 86.9453 75.8828 86.9453 cv
75.0498 86.9453 74.7451 86.9619 74.4395 86.9785 cv
74.3545 87.4033 74.4395 87.0303 74.0479 88.9834 cv
73.8623 89.9346 73.793 90.5303 73.793 90.8354 cv
73.793 91.4292 74.0996 91.583 75.2373 91.583 cv
77.3779 91.583 78.04 91.2432 78.7026 89.7822 cv
79.1274 89.9521 li
78.7534 91.0728 78.3467 91.9736 78.1089 92.2627 cv
77.9385 92.4492 77.7173 92.5 77.0049 92.5 cv
76.4102 92.5 75.7988 92.4834 75.2041 92.4658 cv
74.4224 92.4492 73.6235 92.4326 72.8418 92.4326 cv
72.0439 92.4326 71.2617 92.4492 70.4634 92.4492 cv
70.5313 92.0918 li
71.0415 92.0415 71.3477 91.8887 71.585 91.5659 cv
71.8564 91.2256 72.0269 90.751 72.2637 89.7993 cv
72.4844 88.8477 72.5537 88.457 72.9434 86.5542 cv
73.2158 85.2134 li
73.4883 83.8872 73.5898 83.0547 73.5898 82.6299 cv
73.5898 81.8818 73.3184 81.5771 72.5874 81.4922 cv
72.6553 81.1182 li
80.3848 81.1182 li
80.1982 81.8818 80.0283 82.8003 79.9092 83.5981 cv
cp
76.6816 79.98 mo
76.1377 79.5386 li
78.21 77.1948 li
79.7559 77.5679 li
76.6816 79.98 li
cp
f
85.3115 93.1797 mo
84.7334 92.959 84.0371 92.7202 83.3237 92.5166 cv
82.1514 92.8066 81.3359 93.6724 81.3359 94.6572 cv
81.3359 95.5757 82.1177 96.1865 83.3398 96.1865 cv
84.8184 96.1865 86.1777 95.1841 86.1777 94.0972 cv
86.1777 93.6895 85.9229 93.4175 85.3115 93.1797 cv
cp
85.0557 86.2988 mo
84.1392 86.2988 83.3921 87.2686 83.3921 88.4233 cv
83.3921 89.2217 83.8506 89.7656 84.5112 89.7656 cv
85.4126 89.7656 86.1436 88.8311 86.1436 87.6753 cv
86.1436 86.8257 85.7188 86.2988 85.0557 86.2988 cv
cp
88.3008 86.6733 mo
87.1455 86.6563 li
87.3496 87.0137 87.418 87.2852 87.418 87.6753 cv
87.418 89.2383 86.1094 90.4443 84.4106 90.4443 cv
84.0879 90.4443 83.8506 90.4102 83.4932 90.3091 cv
83.0684 90.5625 82.9336 90.6821 82.9336 90.8354 cv
82.9336 91.0225 83.1191 91.1074 83.8672 91.3447 cv
85.2266 91.77 li
86.5854 92.1953 87.2485 92.6016 87.2485 93.5874 cv
87.2485 95.3877 85.4648 96.7988 83.1875 96.7988 cv
81.3188 96.7988 80.1816 95.9146 80.1816 94.4707 cv
80.1816 93.1455 81.0298 92.5166 82.4229 92.1606 cv
81.5732 91.8545 81.3857 91.7188 81.3857 91.4292 cv
81.3857 91.0566 81.8789 90.5967 82.8984 90.0376 cv
82.3721 89.6636 82.1177 89.1709 82.1177 88.4907 cv
82.1177 86.877 83.4092 85.6543 85.1074 85.6543 cv
85.5488 85.6543 85.8721 85.7046 86.2446 85.8403 cv
88.4883 85.8403 li
88.3008 86.6733 li
cp
f
93.9023 86.3667 mo
93.2236 86.3667 92.5439 86.877 91.9658 87.8281 cv
91.3203 88.8643 90.8618 90.2402 90.8618 91.1416 cv
90.8618 91.667 91.1167 91.9561 91.541 91.9561 cv
92.1699 91.9561 93.2734 91.3955 93.6987 90.9717 cv
93.9365 90.7334 94.0728 90.3936 94.2422 89.7485 cv
94.5137 88.7119 94.769 87.7432 94.9224 86.6221 cv
94.5479 86.4521 94.1914 86.3667 93.9023 86.3667 cv
cp
94.6836 92.6528 mo
94.3779 92.6528 94.2764 92.4658 94.123 91.6333 cv
92.8667 92.3477 91.9482 92.6694 91.0493 92.6694 cv
90.0283 92.6694 89.4346 92.1436 89.4346 91.209 cv
89.4346 90.3091 89.8765 89.0352 90.5566 87.9819 cv
91.4736 86.5542 92.6108 85.6543 94.3442 85.6543 cv
95.1084 85.6543 95.8052 85.79 96.5361 85.9766 cv
96.4507 86.2485 li
95.8389 88.2021 95.3979 90.3594 95.3979 91.0898 cv
95.3979 91.5498 95.5 91.8037 95.7031 91.8037 cv
95.8389 91.8037 96.1953 91.7021 96.6211 91.5498 cv
96.6719 92.0747 li
95.8052 92.3979 94.9727 92.6528 94.6836 92.6528 cv
cp
f
102.21 82.6641 mo
101.648 84.9229 101.088 87.4375 100.545 89.833 cv
100.375 90.6143 100.291 91.1245 100.291 91.3789 cv
100.291 91.6333 100.409 91.7529 100.663 91.7529 cv
100.833 91.7529 101.14 91.6846 101.599 91.5498 cv
101.632 92.0249 li
100.766 92.3638 99.7129 92.6528 99.2549 92.6528 cv
98.9307 92.6528 98.7441 92.4658 98.7441 92.1436 cv
98.7441 91.9053 98.7959 91.6006 99.0508 90.5303 cv
99.5762 88.2871 100.153 85.8926 100.613 83.752 cv
100.816 82.7666 100.918 82.2734 100.918 82.1206 cv
100.918 81.917 100.816 81.8145 100.63 81.8145 cv
100.46 81.8145 100.153 81.8818 99.8818 81.9854 cv
99.8486 81.4751 li
100.715 81.1689 101.666 80.9316 102.141 80.9316 cv
102.379 80.9316 102.498 81.0327 102.498 81.2202 cv
102.498 81.3901 102.431 81.7808 102.21 82.6641 cv
cp
f
104.569 92.6357 mo
104.229 92.6357 104.008 92.4492 104.008 92.1436 cv
104.008 91.9912 104.06 91.7188 104.145 91.3447 cv
104.365 90.4443 104.67 89.2217 104.841 88.5762 cv
105.079 87.6924 105.181 87.0801 105.181 86.8428 cv
105.181 86.6221 105.079 86.5215 104.893 86.5215 cv
104.739 86.5215 104.585 86.5713 104.229 86.6733 cv
104.11 86.707 li
104.06 86.2319 li
104.994 85.8755 105.91 85.6543 106.369 85.6543 cv
106.624 85.6543 106.726 85.7383 106.726 85.9429 cv
106.726 86.1465 106.641 86.6909 106.336 87.8794 cv
106.081 88.8809 li
105.656 90.5303 105.555 91.1074 105.555 91.3789 cv
105.555 91.6333 105.69 91.7871 105.945 91.7871 cv
106.099 91.7871 106.403 91.7188 106.88 91.5498 cv
106.914 92.0249 li
106.013 92.3809 105.044 92.6357 104.569 92.6357 cv
cp
106.421 83.9561 mo
105.894 83.9561 105.555 83.6323 105.555 83.1396 cv
105.555 82.5273 105.996 82.103 106.608 82.103 cv
107.117 82.103 107.44 82.4097 107.44 82.9028 cv
107.44 83.5142 107.015 83.9561 106.421 83.9561 cv
cp
f
113.11 86.6909 mo
111.7 86.6563 li
110.985 90.1382 li
110.799 91.0396 110.782 91.2944 110.782 91.4292 cv
110.782 91.667 110.901 91.8037 111.122 91.8037 cv
111.241 91.8037 111.496 91.7358 111.904 91.6162 cv
112.074 91.5659 li
112.125 92.0586 li
111.241 92.4155 110.323 92.6528 109.831 92.6528 cv
109.474 92.6528 109.254 92.4834 109.254 92.1606 cv
109.254 91.8711 109.322 91.4463 109.457 90.9204 cv
109.611 90.3262 109.729 89.833 109.866 89.1709 cv
110.391 86.6563 li
109.491 86.6733 li
109.611 86.1289 li
110.765 85.9263 111.155 85.0088 111.479 84.0225 cv
112.294 83.853 li
111.87 85.8584 li
113.279 85.8403 li
113.11 86.6909 li
cp
f
118.189 86.3325 mo
117.373 86.3325 116.507 87.4551 116.082 89.1025 cv
116.251 89.1025 li
117.832 89.1025 119.021 88.2705 119.021 87.1826 cv
119.021 86.707 118.646 86.3325 118.189 86.3325 cv
cp
116.438 89.7305 mo
116.319 89.7305 116.166 89.7305 115.946 89.7144 cv
115.896 90.02 115.879 90.2754 115.879 90.5303 cv
115.879 91.3955 116.183 91.8545 116.779 91.8545 cv
117.322 91.8545 118.002 91.5659 119.003 90.9375 cv
119.191 91.5156 li
117.935 92.2964 116.983 92.6528 116.116 92.6528 cv
115.062 92.6528 114.486 92.0249 114.486 90.8867 cv
114.486 88.083 116.388 85.6543 118.579 85.6543 cv
119.65 85.6543 120.277 86.1465 120.277 86.9956 cv
120.277 88.5586 118.613 89.7305 116.438 89.7305 cv
cp
118.325 84.6016 mo
117.78 84.1592 li
119.854 81.8145 li
121.381 82.1885 li
118.325 84.6016 li
cp
f
150.509 83.5811 mo
150.017 83.5811 li
150.035 83.4116 150.052 83.2749 150.052 83.1904 cv
150.052 82.8506 149.933 82.5786 149.729 82.375 cv
149.406 82.0698 148.811 81.9507 147.52 81.9507 cv
147.164 81.9507 146.687 81.9678 146.262 81.9854 cv
145.958 83.3779 145.686 84.7202 145.379 86.1641 cv
145.702 86.1641 146.025 86.1807 146.347 86.1807 cv
148.233 86.1807 148.608 86.0112 148.964 84.9063 cv
149.423 84.9063 li
149.149 86.0112 148.93 87.0981 148.776 88.2192 cv
148.302 88.2192 li
148.318 88.1006 148.336 87.999 148.336 87.9302 cv
148.336 87.6411 148.217 87.3691 148.012 87.2168 cv
147.723 86.9956 147.384 86.9453 146.363 86.9453 cv
145.822 86.9453 145.669 86.9619 145.226 86.9785 cv
145.005 88.1167 li
144.684 89.7485 144.563 90.5127 144.563 90.9883 cv
144.563 91.6846 144.87 92.0078 145.565 92.0918 cv
145.497 92.4492 li
145.226 92.4326 li
145.09 92.4326 144.344 92.4155 143.697 92.4155 cv
143.018 92.4155 141.761 92.4155 141.539 92.4326 cv
141.25 92.4492 li
141.318 92.0918 li
141.829 92.0415 142.135 91.8887 142.372 91.5659 cv
142.644 91.2256 142.83 90.751 143.052 89.7993 cv
143.291 88.8311 143.375 88.3213 143.73 86.5542 cv
144.003 85.2134 li
144.274 83.8701 144.378 83.0547 144.378 82.6299 cv
144.378 81.8818 144.104 81.5771 143.375 81.4922 cv
143.443 81.1182 li
150.985 81.1182 li
150.816 81.8818 150.645 82.7666 150.509 83.5811 cv
cp
f
156.298 87.8452 mo
155.736 87.7949 li
155.77 87.5903 155.788 87.3525 155.788 87.1323 cv
155.788 86.8257 155.515 86.6055 155.092 86.6055 cv
154.837 86.6055 154.582 86.7583 154.359 87.0137 cv
153.715 87.7432 153.46 88.8984 153.086 90.7842 cv
152.764 92.4326 li
152.119 92.4658 151.949 92.4834 151.286 92.5684 cv
151.456 91.9224 151.574 91.4121 151.71 90.8354 cv
152.085 89.2559 li
152.341 88.1855 152.458 87.5225 152.458 87.166 cv
152.458 86.7412 152.357 86.5542 152.153 86.5542 cv
152.051 86.5542 151.896 86.5879 151.727 86.6392 cv
151.303 86.7754 li
151.252 86.2656 li
152.085 85.9263 153.034 85.6543 153.46 85.6543 cv
153.631 85.6543 153.731 85.7217 153.767 85.8926 cv
153.816 86.0957 153.851 86.3325 153.868 86.6221 cv
154.633 85.9937 155.312 85.6367 155.788 85.6367 cv
156.111 85.6367 156.518 85.8076 156.908 86.0957 cv
156.637 86.707 156.433 87.2686 156.298 87.8452 cv
cp
f
162.219 86.3667 mo
161.537 86.3667 160.859 86.877 160.28 87.8281 cv
159.637 88.8643 159.177 90.2402 159.177 91.1416 cv
159.177 91.667 159.432 91.9561 159.856 91.9561 cv
160.484 91.9561 161.59 91.3955 162.014 90.9717 cv
162.252 90.7334 162.388 90.3936 162.558 89.7485 cv
162.829 88.7119 163.084 87.7432 163.236 86.6221 cv
162.862 86.4521 162.507 86.3667 162.219 86.3667 cv
cp
162.999 92.6528 mo
162.695 92.6528 162.592 92.4658 162.44 91.6333 cv
161.184 92.3477 160.264 92.6694 159.363 92.6694 cv
158.346 92.6694 157.75 92.1436 157.75 91.209 cv
157.75 90.3091 158.191 89.0352 158.871 87.9819 cv
159.789 86.5542 160.928 85.6543 162.659 85.6543 cv
163.425 85.6543 164.121 85.79 164.852 85.9766 cv
164.767 86.2485 li
164.154 88.2021 163.713 90.3594 163.713 91.0898 cv
163.713 91.5498 163.813 91.8037 164.018 91.8037 cv
164.154 91.8037 164.511 91.7021 164.937 91.5498 cv
164.987 92.0747 li
164.121 92.3979 163.288 92.6528 162.999 92.6528 cv
cp
f
171.104 86.6909 mo
169.693 86.6563 li
168.979 90.1382 li
168.793 91.0396 168.776 91.2944 168.776 91.4292 cv
168.776 91.667 168.894 91.8037 169.115 91.8037 cv
169.235 91.8037 169.488 91.7358 169.896 91.6162 cv
170.067 91.5659 li
170.118 92.0586 li
169.235 92.4155 168.315 92.6528 167.822 92.6528 cv
167.468 92.6528 167.247 92.4834 167.247 92.1606 cv
167.247 91.8711 167.315 91.4463 167.451 90.9204 cv
167.604 90.3262 167.724 89.833 167.857 89.1709 cv
168.384 86.6563 li
167.484 86.6733 li
167.604 86.1289 li
168.759 85.9263 169.149 85.0088 169.472 84.0225 cv
170.287 83.853 li
169.863 85.8584 li
171.272 85.8403 li
171.104 86.6909 li
cp
f
176.183 86.3325 mo
175.367 86.3325 174.5 87.4551 174.075 89.1025 cv
174.245 89.1025 li
175.824 89.1025 177.014 88.2705 177.014 87.1826 cv
177.014 86.707 176.642 86.3325 176.183 86.3325 cv
cp
174.433 89.7305 mo
174.313 89.7305 174.16 89.7305 173.94 89.7144 cv
173.889 90.02 173.872 90.2754 173.872 90.5303 cv
173.872 91.3955 174.177 91.8545 174.772 91.8545 cv
175.314 91.8545 175.994 91.5659 176.997 90.9375 cv
177.183 91.5156 li
175.926 92.2964 174.977 92.6528 174.109 92.6528 cv
173.056 92.6528 172.479 92.0249 172.479 90.8867 cv
172.479 88.083 174.38 85.6543 176.573 85.6543 cv
177.643 85.6543 178.272 86.1465 178.272 86.9956 cv
178.272 88.5586 176.605 89.7305 174.433 89.7305 cv
cp
f
185.083 87.8452 mo
184.523 87.7949 li
184.558 87.5903 184.575 87.3525 184.575 87.1323 cv
184.575 86.8257 184.303 86.6055 183.879 86.6055 cv
183.623 86.6055 183.368 86.7583 183.147 87.0137 cv
182.503 87.7432 182.246 88.8984 181.873 90.7842 cv
181.55 92.4326 li
180.904 92.4658 180.735 92.4834 180.072 92.5684 cv
180.242 91.9224 180.361 91.4121 180.497 90.8354 cv
180.87 89.2559 li
181.125 88.1855 181.245 87.5225 181.245 87.166 cv
181.245 86.7412 181.142 86.5542 180.938 86.5542 cv
180.836 86.5542 180.684 86.5879 180.514 86.6392 cv
180.089 86.7754 li
180.038 86.2656 li
180.87 85.9263 181.822 85.6543 182.246 85.6543 cv
182.416 85.6543 182.52 85.7217 182.554 85.8926 cv
182.604 86.0957 182.638 86.3325 182.654 86.6221 cv
183.419 85.9937 184.099 85.6367 184.575 85.6367 cv
184.897 85.6367 185.305 85.8076 185.695 86.0957 cv
185.423 86.707 185.219 87.2686 185.083 87.8452 cv
cp
f
191.859 92.6528 mo
191.519 92.6528 191.315 92.4492 191.315 92.1436 cv
191.315 91.9395 191.383 91.5659 191.587 90.7163 cv
191.756 90.0029 li
192.265 87.8794 192.384 87.166 192.384 86.877 cv
192.384 86.6221 192.265 86.4868 192.028 86.4868 cv
191.738 86.4868 191.264 86.6563 190.753 86.9619 cv
190.211 87.2686 189.802 87.624 189.598 87.9302 cv
189.444 88.1855 189.327 88.627 189.123 89.5273 cv
188.852 90.7666 188.681 91.6162 188.545 92.4155 cv
187.883 92.4658 187.713 92.4834 187.051 92.5684 cv
187.391 91.2944 187.646 90.2402 187.898 89.0684 cv
188.154 87.9131 188.257 87.3691 188.257 87.0645 cv
188.257 86.6733 188.137 86.4868 187.883 86.4868 cv
187.746 86.4868 187.459 86.5542 187.051 86.6909 cv
187.016 86.2148 li
187.833 85.8926 188.716 85.6543 189.123 85.6543 cv
189.496 85.6543 189.614 85.8755 189.614 86.6733 cv
189.614 86.8086 li
190.905 86.0791 192.23 85.6543 193.149 85.6543 cv
193.709 85.6543 193.931 85.79 193.931 86.1289 cv
193.931 86.4868 193.829 87.0474 193.471 88.4233 cv
193.268 89.2051 193.081 90.0376 193.013 90.4102 cv
192.911 90.9033 192.86 91.209 192.86 91.3955 cv
192.86 91.6504 192.996 91.7871 193.233 91.7871 cv
193.386 91.7871 193.709 91.7188 194.118 91.5659 cv
194.169 92.0586 li
193.268 92.3809 192.248 92.6528 191.859 92.6528 cv
cp
f
197.157 92.6357 mo
196.816 92.6357 196.597 92.4492 196.597 92.1436 cv
196.597 91.9912 196.646 91.7188 196.733 91.3447 cv
196.953 90.4443 197.259 89.2217 197.428 88.5762 cv
197.666 87.6924 197.769 87.0801 197.769 86.8428 cv
197.769 86.6221 197.666 86.5215 197.479 86.5215 cv
197.327 86.5215 197.174 86.5713 196.816 86.6733 cv
196.697 86.707 li
196.646 86.2319 li
197.583 85.8755 198.499 85.6543 198.956 85.6543 cv
199.212 85.6543 199.313 85.7383 199.313 85.9429 cv
199.313 86.1465 199.229 86.6909 198.923 87.8794 cv
198.669 88.8809 li
198.243 90.5303 198.142 91.1074 198.142 91.3789 cv
198.142 91.6333 198.278 91.7871 198.533 91.7871 cv
198.685 91.7871 198.992 91.7188 199.467 91.5498 cv
199.501 92.0249 li
198.601 92.3809 197.633 92.6357 197.157 92.6357 cv
cp
199.009 83.9561 mo
198.481 83.9561 198.142 83.6323 198.142 83.1396 cv
198.142 82.5273 198.584 82.103 199.195 82.103 cv
199.705 82.103 200.026 82.4097 200.026 82.9028 cv
200.026 83.5142 199.603 83.9561 199.009 83.9561 cv
cp
f
205.698 86.6909 mo
204.287 86.6563 li
203.573 90.1382 li
203.388 91.0396 203.37 91.2944 203.37 91.4292 cv
203.37 91.667 203.488 91.8037 203.709 91.8037 cv
203.828 91.8037 204.084 91.7358 204.491 91.6162 cv
204.659 91.5659 li
204.711 92.0586 li
203.828 92.4155 202.912 92.6528 202.418 92.6528 cv
202.063 92.6528 201.843 92.4834 201.843 92.1606 cv
201.843 91.8711 201.909 91.4463 202.045 90.9204 cv
202.196 90.3262 202.316 89.833 202.452 89.1709 cv
202.979 86.6563 li
202.078 86.6733 li
202.196 86.1289 li
203.352 85.9263 203.743 85.0088 204.067 84.0225 cv
204.881 83.853 li
204.457 85.8584 li
205.866 85.8403 li
205.698 86.6909 li
cp
f
210.775 86.3325 mo
209.96 86.3325 209.096 87.4551 208.669 89.1025 cv
208.839 89.1025 li
210.421 89.1025 211.609 88.2705 211.609 87.1826 cv
211.609 86.707 211.233 86.3325 210.775 86.3325 cv
cp
209.027 89.7305 mo
208.907 89.7305 208.754 89.7305 208.533 89.7144 cv
208.481 90.02 208.465 90.2754 208.465 90.5303 cv
208.465 91.3955 208.771 91.8545 209.367 91.8545 cv
209.909 91.8545 210.591 91.5659 211.592 90.9375 cv
211.779 91.5156 li
210.522 92.2964 209.57 92.6528 208.703 92.6528 cv
207.651 92.6528 207.073 92.0249 207.073 90.8867 cv
207.073 88.083 208.976 85.6543 211.166 85.6543 cv
212.236 85.6543 212.867 86.1465 212.867 86.9956 cv
212.867 88.5586 211.2 89.7305 209.027 89.7305 cv
cp
210.913 84.6016 mo
210.369 84.1592 li
212.441 81.8145 li
213.969 82.1885 li
210.913 84.6016 li
cp
f
131.26 89.4893 mo
132.397 89.4893 133.322 88.5659 133.322 87.4277 cv
133.322 86.2896 132.397 85.3662 131.26 85.3662 cv
130.122 85.3662 129.199 86.2896 129.199 87.4277 cv
129.199 88.5659 130.122 89.4893 131.26 89.4893 cv
cp
f
60.4736 89.4893 mo
61.6113 89.4893 62.5342 88.5659 62.5342 87.4277 cv
62.5342 86.2896 61.6113 85.3662 60.4736 85.3662 cv
59.335 85.3662 58.4106 86.2896 58.4106 87.4277 cv
58.4106 88.5659 59.335 89.4893 60.4736 89.4893 cv
cp
f
.3256 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
1.10547 100.143 mo
212.983 100.143 li
@
64.6846 44.3398 mo
62.7622 44.9043 60.7969 44.9883 59.0156 45.959 cv
63.2266 45.7979 67.4375 46.4453 71.4873 47.7412 cv
72.9453 48.2275 74.2422 48.8755 75.5371 49.6855 cv
76.1846 50.1704 76.5093 50.6572 77.1577 50.9814 cv
77.9668 51.4668 79.1006 51.4668 79.9111 51.1436 cv
80.0723 51.1436 80.5586 51.1436 80.7197 51.1436 cv
83.1504 50.4951 85.7422 49.8467 87.3623 48.0654 cv
87.3623 48.2275 87.5234 48.2275 87.6865 48.2275 cv
87.2012 49.5234 87.2012 50.9814 86.229 52.1143 cv
86.229 52.2773 86.0664 52.6006 86.3901 52.7627 cv
86.5527 52.7627 86.5527 52.7627 86.7148 52.7627 cv
86.5527 52.7627 86.3901 52.7627 86.3901 52.9248 cv
86.3901 53.249 86.8765 52.9248 87.0381 53.249 cv
86.229 53.4102 85.4189 53.5732 84.9331 54.2207 cv
84.9331 54.3828 85.2563 54.3828 85.4189 54.3828 cv
85.0947 54.707 84.6094 54.5454 84.4468 54.8682 cv
84.4468 54.8682 84.6094 55.0303 84.77 55.0303 cv
84.6094 55.0303 84.4468 55.0303 84.4468 55.1924 cv
84.4468 55.3555 84.4468 55.5166 84.4468 55.6782 cv
83.9614 55.6782 83.7988 56.0029 83.4751 56.1646 cv
84.1221 56.6499 84.6094 56.1646 85.2563 56.1646 cv
83.4751 56.8125 82.0166 57.7842 80.2354 58.27 cv
79.9111 58.27 80.2354 58.7563 79.9111 58.7563 cv
80.3975 59.0801 80.7197 58.5952 81.2061 58.5952 cv
78.9395 59.8896 76.6719 61.0239 74.2422 62.4819 cv
74.2422 62.4819 73.917 62.8057 73.917 63.1309 cv
73.7544 63.1309 73.4316 63.1309 73.27 63.1309 cv
72.9453 63.292 73.1074 63.7778 72.7837 64.1025 cv
73.5938 64.5879 74.5659 63.4536 75.0508 64.1025 cv
75.2134 64.1025 74.7275 64.2642 74.4033 64.2642 cv
74.2422 64.2642 74.2422 64.5879 74.0801 64.5879 cv
73.917 64.5879 73.7544 64.5879 73.5938 64.5879 cv
73.27 64.9116 72.9453 65.0737 72.9453 65.5605 cv
72.6226 65.5605 72.2974 65.5605 72.1357 65.8838 cv
75.6997 65.3975 79.4248 65.7217 82.8267 63.9395 cv
85.4189 62.6436 87.8491 60.8623 89.9541 58.5952 cv
89.9541 58.5952 90.1162 58.7563 90.1162 58.918 cv
89.6299 60.5381 88.6582 61.6719 87.3623 62.6436 cv
86.3901 63.1309 85.7422 63.9395 84.9331 64.2642 cv
84.4468 64.5879 83.9614 64.9116 83.4751 65.2354 cv
77.4814 67.3413 70.3535 66.3701 65.1704 70.4194 cv
65.1704 70.2568 65.0088 70.2568 64.8462 70.2568 cv
64.5225 70.5811 64.0366 70.7432 63.875 71.0674 cv
63.875 71.3916 64.3613 71.2295 64.5225 71.2295 cv
65.4941 70.5811 66.4663 70.0952 67.6001 69.771 cv
66.3052 70.4194 65.0254 71.5435 63.7295 71.8667 cv
55.3696 71.8667 li
56.9902 70.895 58.853 69.6099 60.6348 68.6372 cv
60.1489 68.314 59.6626 68.314 59.1763 68.314 cv
58.3667 68.4751 57.3955 67.9893 56.585 68.314 cv
54.1558 69.4473 50.915 69.2754 49.6196 71.8667 cv
.823242 71.8667 li
.823242 0 li
98.9604 0 li
97.0161 .972168 94.0039 1.5752 92.5459 3.35742 cv
91.25 4.97754 89.9541 6.59668 89.4678 8.54102 cv
87.3623 9.8374 86.0664 11.7803 84.9331 13.7246 cv
83.4751 16.4785 81.3691 18.9077 81.6934 21.9863 cv
82.0166 24.5771 82.665 27.0073 83.1504 29.7612 cv
83.313 30.7329 83.4751 31.543 83.7988 32.5142 cv
84.1221 33.4863 83.7988 34.6211 84.2842 35.4307 cv
84.6094 35.917 84.4468 36.5645 85.0947 36.8877 cv
85.0947 37.0508 85.0947 37.3745 85.0947 37.5361 cv
85.2563 37.6982 85.2563 37.8604 85.5801 37.8604 cv
85.5801 38.0225 85.5801 38.3457 85.5801 38.5083 cv
86.8765 40.1284 88.4971 41.5859 89.3062 43.3687 cv
89.6299 44.3398 87.6865 43.8535 86.8765 43.5298 cv
85.2563 42.7202 84.2842 41.4238 82.9893 40.29 cv
82.9893 40.29 82.8267 40.4521 82.8267 40.6143 cv
83.4751 41.7485 85.9043 43.2051 84.6094 44.0161 cv
83.9614 44.3398 83.1504 43.5298 82.502 44.1782 cv
82.3408 44.501 82.502 44.8262 82.502 45.1494 cv
81.5313 44.501 80.5586 44.8262 79.5869 44.501 cv
78.9395 44.3398 78.7773 43.043 77.9668 43.043 cv
75.8618 42.5576 73.917 42.0713 71.812 41.9102 cv
68.896 41.5859 66.1416 41.1001 63.2266 41.5859 cv
60.6348 41.7485 58.6914 43.6919 57.0703 45.6357 cv
57.0703 45.7979 57.0703 46.1211 57.0703 46.1211 cv
58.2056 46.2837 58.6914 45.3105 59.6626 44.9883 cv
61.2827 44.6631 62.7402 44.0161 64.3613 43.6919 cv
66.79 43.2051 69.0586 42.5576 71.3262 42.7202 cv
71.812 42.7202 72.4595 42.5576 72.9453 42.7202 cv
70.0303 42.5576 67.4375 43.5298 64.6846 44.3398 cv
cp
.9647 .7961 .0314 .00779998 cmyk
f
55.6128 52.1143 mo
55.1162 52.2393 54.6416 52.6006 54.8027 52.9248 cv
55.29 53.5732 56.2617 52.7627 57.0703 52.7627 cv
56.0991 53.0869 54.9658 52.9248 54.1558 53.7354 cv
54.8027 54.2207 55.4512 53.8965 56.0991 53.8965 cv
56.0991 54.2207 56.4229 54.2207 56.585 54.3828 cv
55.7759 54.707 55.127 55.3555 54.9658 55.8408 cv
54.6416 56.6499 53.8311 56.9746 53.3457 57.6221 cv
53.3457 57.7842 53.3457 57.9463 53.3457 58.1084 cv
51.7266 59.5664 49.9443 60.5381 48.6484 62.3198 cv
48.8096 62.3198 48.8096 62.4819 48.8096 62.6436 cv
48.4863 63.1309 47.8384 63.292 47.6758 63.7778 cv
47.6758 63.9395 47.6758 64.1025 47.8384 64.1025 cv
49.7822 63.4536 51.2402 61.9961 53.022 61.3481 cv
54.3174 61.0239 55.29 60.2139 56.4229 59.8896 cv
57.2334 59.7275 58.2056 59.4043 59.0156 59.2422 cv
59.0156 59.4043 59.0156 59.5664 59.1763 59.5664 cv
59.6626 59.5664 59.9868 59.5664 60.4736 59.5664 cv
60.3115 59.8896 59.6626 59.7275 59.8252 59.8896 cv
60.3115 60.376 61.2827 60.2139 61.9307 59.8896 cv
62.4165 59.5664 62.9023 59.5664 63.5508 59.5664 cv
63.7129 59.5664 63.7129 59.2422 63.7129 59.0801 cv
64.1982 59.2422 64.5225 59.2422 65.0088 59.2422 cv
68.896 58.4321 72.6226 57.6221 76.1846 55.8408 cv
71.9741 52.6006 66.6279 51.4668 61.6064 50.0088 cv
62.0938 50.0088 62.5791 50.4951 63.0654 50.0088 cv
62.2549 49.3604 61.2827 49.6855 60.4736 49.1997 cv
60.6348 49.1997 60.959 49.3604 61.1206 49.0371 cv
59.8252 48.3887 58.5293 48.3887 57.2334 48.0654 cv
58.0439 47.9038 58.5293 47.2559 58.5293 46.4453 cv
58.5293 46.2837 58.2056 46.2837 58.0439 46.2837 cv
56.0991 47.2559 54.8027 49.0371 53.9932 51.1436 cv
55.127 51.791 56.4229 51.3057 57.5576 51.4668 cv
57.0703 51.9531 56.2617 51.9531 55.6128 52.1143 cv
cp
0 0 0 0 cmyk
f
48.9727 45.7979 mo
47.3184 47.5488 45.5713 49.1997 43.4648 50.333 cv
42.0068 53.249 40.3867 55.8408 38.2803 58.5952 cv
38.2803 58.7563 38.4434 58.918 38.4434 58.918 cv
42.3311 54.5454 45.8936 50.8184 50.915 47.7412 cv
51.2402 47.5791 50.4307 48.2275 51.0786 48.0654 cv
53.1836 47.5791 53.8311 45.4741 54.8027 43.8535 cv
56.0991 41.7485 58.3667 40.9385 59.9868 39.1567 cv
59.9868 39.3184 59.9868 39.48 59.8252 39.6426 cv
59.9868 39.8042 60.1489 39.8042 60.3115 39.8042 cv
60.959 39.3184 61.7676 39.48 62.2549 38.832 cv
60.959 38.3457 59.3394 38.1841 58.0439 38.6704 cv
54.6416 40.29 51.7266 42.8818 48.9727 45.7979 cv
cp
f
51.4014 48.8755 mo
51.5459 48.5859 51.7266 48.5518 51.8882 48.2275 cv
51.8882 48.0654 51.8882 47.9038 51.7266 47.9038 cv
51.0786 48.0654 50.5923 48.7129 50.4307 49.3604 cv
50.4307 49.5234 50.5923 49.5234 50.7534 49.5234 cv
51.0786 49.3604 51.2402 49.1997 51.4014 48.8755 cv
cp
f
64.3613 61.1855 mo
63.7129 61.5107 62.5791 61.5107 62.4165 62.3198 cv
62.2549 62.6436 62.9023 62.4819 63.2266 62.4819 cv
64.3613 61.9961 65.6572 62.4819 66.6279 61.5107 cv
66.3052 61.1855 65.8184 61.3481 65.4941 60.8623 cv
65.1704 60.7002 64.6846 61.0239 64.3613 61.1855 cv
cp
f
82.0166 69.9336 mo
83.0166 69.7109 83.9614 69.1235 84.9331 68.7993 cv
84.9331 68.9614 84.9331 68.9614 84.9331 69.1235 cv
87.3623 68.1523 89.145 66.0449 91.5737 65.2354 cv
91.7363 65.2354 92.0591 65.5605 92.3838 65.3975 cv
93.8413 64.1025 95.4624 62.6436 97.5674 62.9673 cv
97.5674 63.1309 97.5674 63.292 97.7295 63.292 cv
97.8911 63.292 98.0532 63.292 98.0532 63.1309 cv
97.4058 63.6157 96.7578 64.1025 96.1094 64.5879 cv
95.9482 64.75 96.1094 64.9116 96.2715 64.9116 cv
97.0811 64.5879 97.5674 63.9395 98.377 63.6157 cv
98.2158 63.7778 98.2158 64.1025 98.0532 64.2642 cv
94.9756 66.5317 92.7075 69.1235 90.2783 71.877 cv
88.6582 71.877 86.8765 71.877 85.2563 71.877 cv
85.2563 71.7148 85.2563 71.5527 85.0947 71.5527 cv
82.9189 71.7397 80.7666 71.8311 78.6201 71.8726 cv
68.248 71.877 li
71.4873 71.3916 74.7275 70.4194 77.9668 70.0952 cv
79.2632 70.0952 80.5586 70.2568 82.0166 69.9336 cv
cp
.9647 .7961 .0314 .00779998 cmyk
f
145.839 61.6719 mo
146.229 60.502 146.647 59.2422 146.001 58.1084 cv
145.028 56.6499 146.974 56.1646 147.621 55.1924 cv
148.106 54.3828 147.297 53.8965 147.135 53.0869 cv
146.974 52.7627 146.325 52.9248 146.001 52.4385 cv
147.135 51.9531 148.916 50.9814 148.106 49.5234 cv
147.621 48.7129 146.811 47.4175 147.783 46.6079 cv
148.916 45.959 150.698 46.1211 151.184 44.9883 cv
151.995 43.043 150.212 41.4238 149.239 39.8042 cv
148.755 38.832 148.106 38.1841 147.459 37.2129 cv
146.811 36.0786 146.001 35.1064 145.677 33.8105 cv
145.19 32.5142 145.839 31.3818 145.839 30.0845 cv
146.001 27.6563 145.352 25.2251 144.706 22.7959 cv
144.219 21.6611 144.058 20.3657 143.571 19.2324 cv
143.409 18.584 143.247 17.9355 142.76 17.2881 cv
142.6 16.9648 142.6 16.4785 142.76 16.1543 cv
143.409 15.6689 144.058 15.1826 144.706 14.5352 cv
145.19 13.7246 144.866 12.5908 144.058 12.105 cv
142.923 11.6182 143.086 13.2383 142.275 13.563 cv
142.113 13.563 141.951 13.563 141.79 13.563 cv
141.627 13.0776 141.951 12.915 142.275 12.5908 cv
142.275 12.4292 142.275 12.105 142.113 12.105 cv
141.464 12.105 140.818 11.9424 140.655 11.6182 cv
139.035 9.35156 136.768 8.21777 134.339 7.24561 cv
134.986 7.40771 135.635 7.56934 136.283 7.56934 cv
137.416 7.73145 138.712 7.73145 139.684 7.24561 cv
140.493 6.92139 140.655 5.62549 140.979 4.81543 cv
141.304 4.16797 140.818 3.1958 140.493 2.70996 cv
139.684 1.41357 138.388 .647461 137.092 0 cv
213.823 0 li
213.774 .00439453 213.817 71.8564 213.823 71.8667 cv
213.823 71.8667 122.667 71.8667 122.675 71.877 cv
123.647 68.6372 125.43 65.5605 128.345 63.4536 cv
128.991 63.1309 129.801 62.9673 130.612 62.8057 cv
133.366 62.8057 136.119 63.6157 138.872 63.9395 cv
139.196 63.9395 139.522 64.1025 139.846 64.2642 cv
140.818 64.4253 141.951 64.4253 142.923 64.1025 cv
144.058 63.7778 145.352 63.1309 145.839 61.6719 cv
cp
.0118 .9608 .9137 0 cmyk
f
139.684 29.7612 mo
138.727 29.5225 137.902 29.7612 136.93 29.7612 cv
135.635 30.0845 134.5 30.2471 133.366 30.7329 cv
134.339 30.0845 135.309 29.437 136.443 29.1133 cv
137.254 28.9512 138.063 28.4648 138.872 28.4648 cv
139.846 28.3032 140.818 27.9785 141.627 28.3032 cv
142.438 28.627 143.733 28.627 143.896 29.1133 cv
144.219 30.0845 143.409 31.0566 142.438 31.7051 cv
142.275 32.0288 142.923 32.1909 142.923 32.5142 cv
142.76 32.8389 142.275 33.001 141.951 33.001 cv
141.627 33.1626 141.304 33.6489 140.979 33.9736 cv
141.304 33.9736 140.979 34.459 141.304 34.459 cv
140.655 35.2686 141.627 36.8877 140.655 37.2129 cv
139.522 37.5361 138.227 37.5361 136.93 37.2129 cv
137.576 37.0508 138.388 37.3745 138.872 36.7266 cv
138.872 36.5645 138.872 36.2402 138.872 36.0786 cv
138.872 35.917 138.712 35.917 138.55 35.917 cv
138.388 36.0786 138.227 36.0786 138.227 36.0786 cv
138.227 35.7539 137.902 35.4307 137.739 35.4307 cv
136.768 35.5923 135.958 35.1064 135.309 34.459 cv
135.796 34.2969 136.283 34.1343 136.768 34.2969 cv
137.254 34.2969 137.092 33.4863 137.576 33.1626 cv
137.739 33.1626 137.902 33.1626 138.063 33.1626 cv
139.035 31.8667 140.979 31.543 141.304 30.2471 cv
141.304 29.9229 140.331 29.9229 139.684 29.7612 cv
cp
0 0 0 .5 cmyk
f
11.6543 260.439 mo
11.6602 264.617 14.6968 266.759 18.6172 266.754 cv
22.5371 266.75 25.5679 264.646 25.5615 260.167 cv
25.5562 256.363 22.8926 253.822 18.5757 253.828 cv
14.4453 253.833 11.6484 256.192 11.6543 260.439 cv
cp
18.6504 257.094 mo
19.9102 257.022 20.7056 258.375 20.708 260.171 cv
20.7114 262.482 19.9194 263.487 18.6123 263.488 cv
17.3755 263.49 16.5107 262.488 16.5078 260.176 cv
16.5059 258.8 16.9937 257.096 18.6504 257.094 cv
cp
0 0 0 0 cmyk
f
27.4434 254.167 mo
31.9004 254.162 li
31.9028 255.982 li
32.5083 255.047 34.0234 253.809 35.7734 253.807 cv
37.9668 253.804 39.1816 254.736 39.7666 256.042 cv
40.8149 254.571 42.1904 253.799 43.9873 253.796 cv
47.5576 253.792 48.6802 255.797 48.6851 259.134 cv
48.6953 266.369 li
43.8413 266.375 li
43.833 260.144 li
43.8301 258.347 43.479 257.625 42.1958 257.625 cv
40.7725 257.628 40.4941 258.865 40.4961 260.334 cv
40.5044 266.378 li
35.6509 266.384 li
35.6421 260.154 li
35.6396 258.358 35.2886 257.634 34.0054 257.636 cv
32.582 257.637 32.3037 258.875 32.3057 260.345 cv
32.314 266.388 li
27.4604 266.395 li
27.4434 254.167 li
cp
f
50.7783 254.138 mo
55.2354 254.133 li
55.2378 255.954 li
55.8433 255.02 57.3584 253.781 59.1084 253.779 cv
61.3018 253.776 62.5166 254.708 63.1016 256.014 cv
64.1499 254.542 65.5254 253.771 67.3223 253.769 cv
70.8926 253.765 72.0156 255.77 72.02 259.107 cv
72.0303 266.341 li
67.1768 266.346 li
67.168 260.117 li
67.165 258.32 66.8145 257.596 65.5308 257.598 cv
64.1074 257.6 63.8291 258.837 63.8311 260.307 cv
63.8398 266.35 li
58.9858 266.357 li
58.9771 260.125 li
58.9746 258.33 58.6235 257.607 57.3403 257.608 cv
55.917 257.609 55.6387 258.846 55.6406 260.317 cv
55.6489 266.36 li
50.7954 266.367 li
50.7783 254.138 li
cp
f
87.5015 266.322 mo
82.9976 266.328 li
82.9951 264.531 li
81.7842 266.212 80.5947 266.68 78.5879 266.683 cv
75.9277 266.686 74.1987 265.054 74.1938 261.554 cv
74.1831 254.111 li
79.0371 254.105 li
79.0464 260.708 li
79.0483 262.388 79.6328 262.925 80.7993 262.923 cv
82.1997 262.921 82.6416 261.871 82.6387 259.981 cv
82.6304 254.1 li
87.4844 254.095 li
87.5015 266.322 li
cp
f
89.7476 254.091 mo
94.1812 254.087 li
94.1836 256 li
95.2783 254.529 96.4673 253.734 98.311 253.732 cv
101.531 253.728 103.051 255.617 103.055 258.976 cv
103.065 266.304 li
98.2119 266.309 li
98.2026 259.846 li
98.2012 258.632 97.873 257.559 96.4961 257.561 cv
95.0029 257.563 94.6074 258.52 94.6094 260.083 cv
94.6182 266.314 li
89.7646 266.32 li
89.7476 254.091 li
cp
f
105.631 249.056 mo
110.485 249.05 li
110.49 252.504 li
105.636 252.509 li
105.631 249.056 li
cp
105.656 266.3 mo
105.639 254.073 li
110.492 254.067 li
110.509 266.294 li
105.656 266.3 li
cp
f
121.466 258.721 mo
121.442 258.184 121.255 257.765 120.95 257.461 cv
120.646 257.135 120.227 256.972 119.69 256.973 cv
117.87 256.975 117.569 258.866 117.571 260.313 cv
117.574 262.156 118.275 263.369 119.699 263.367 cv
120.959 263.366 121.447 262.501 121.587 261.544 cv
126.487 261.539 li
126.072 265.25 123.087 266.629 119.704 266.633 cv
115.76 266.638 112.723 264.425 112.717 260.295 cv
112.711 256.118 115.648 253.711 119.686 253.706 cv
122.952 253.703 126.034 255.099 126.39 258.715 cv
121.466 258.721 li
cp
f
142.338 266.256 mo
142.338 266.023 li
141.706 265.51 141.684 265.161 141.683 264.46 cv
141.674 258.743 li
141.67 255.827 141.317 253.68 135.529 253.687 cv
130.699 253.693 128.858 255.212 128.862 257.802 cv
133.529 257.796 li
133.644 256.746 134.554 256.605 135.23 256.604 cv
135.743 256.604 136.817 256.719 136.818 257.606 cv
136.821 259.892 128.114 257.383 128.122 262.937 cv
128.125 265.48 130.181 266.621 132.491 266.618 cv
134.312 266.617 135.71 266.242 137.085 264.956 cv
137.321 266.262 li
142.338 266.256 li
cp
134.681 263.863 mo
133.724 263.863 133.14 263.444 133.139 262.837 cv
133.137 261.25 135.237 261.621 136.823 260.849 cv
136.942 262.529 136.384 263.86 134.681 263.863 cv
cp
f
152.302 266.245 mo
145.932 266.602 145.161 266.16 145.155 261.936 cv
145.147 256.826 li
143.421 256.828 li
143.417 254.028 li
145.214 254.025 li
145.209 250.221 li
149.992 250.216 li
149.997 254.02 li
152.331 254.017 li
152.335 256.817 li
150.001 256.82 li
150.008 261.253 li
150.009 262.374 150.173 262.77 151.526 262.768 cv
152.297 262.767 li
152.302 266.245 li
cp
f
154.891 248.997 mo
159.745 248.992 li
159.749 252.445 li
154.896 252.45 li
154.891 248.997 li
cp
154.915 266.242 mo
154.897 254.013 li
159.751 254.008 li
159.769 266.235 li
154.915 266.242 li
cp
f
162.047 260.259 mo
162.053 264.436 165.089 266.58 169.01 266.575 cv
172.93 266.57 175.96 264.466 175.954 259.986 cv
175.948 256.182 173.285 253.642 168.968 253.647 cv
164.838 253.652 162.041 256.012 162.047 260.259 cv
cp
169.042 256.914 mo
170.303 256.842 171.099 258.195 171.101 259.992 cv
171.104 262.301 170.312 263.306 169.005 263.308 cv
167.768 263.309 166.903 262.307 166.9 259.997 cv
166.898 258.62 167.386 256.916 169.042 256.914 cv
cp
f
177.905 253.987 mo
182.339 253.981 li
182.342 255.895 li
183.437 254.422 184.625 253.628 186.47 253.625 cv
189.689 253.622 191.209 255.51 191.213 258.871 cv
191.224 266.198 li
186.37 266.204 li
186.36 259.74 li
186.359 258.526 186.031 257.454 184.654 257.455 cv
183.161 257.458 182.766 258.414 182.768 259.978 cv
182.776 266.208 li
177.923 266.213 li
177.905 253.987 li
cp
f
139.388 226.904 mo
139.226 225.154 138.13 224.15 136.403 224.148 cv
134.467 224.146 133.298 225.802 133.295 229.045 cv
133.292 231.403 133.804 233.621 136.604 233.622 cv
138.378 233.624 139.219 232.387 139.43 230.778 cv
144.727 230.782 li
144.233 235.122 141.126 237.733 136.692 237.729 cv
131.139 237.725 127.782 234.315 127.788 228.855 cv
127.793 223.417 131.483 220.038 136.174 220.042 cv
141.308 220.045 144.176 222.591 144.614 226.909 cv
139.388 226.904 li
cp
f
159.842 237.304 mo
155.338 237.3 li
155.34 235.504 li
154.125 237.183 152.934 237.649 150.927 237.647 cv
148.267 237.645 146.542 236.01 146.546 232.51 cv
146.554 225.067 li
151.407 225.071 li
151.4 231.674 li
151.398 233.354 151.981 233.891 153.147 233.892 cv
154.548 233.893 154.992 232.843 154.995 230.954 cv
155 225.073 li
159.854 225.077 li
159.842 237.304 li
cp
f
162.432 237.307 mo
162.449 220.505 li
167.302 220.509 li
167.286 237.311 li
162.432 237.307 li
cp
f
177.949 237.319 mo
171.579 237.664 170.809 237.22 170.813 232.996 cv
170.818 227.886 li
169.092 227.884 li
169.095 225.084 li
170.892 225.085 li
170.896 221.283 li
175.679 221.287 li
175.675 225.089 li
178.009 225.091 li
178.005 227.892 li
175.672 227.89 li
175.667 232.324 li
175.667 233.443 175.829 233.84 177.183 233.841 cv
177.952 233.841 li
177.949 237.319 li
cp
f
193.537 237.332 mo
189.033 237.328 li
189.035 235.531 li
187.82 237.209 186.63 237.675 184.622 237.674 cv
181.963 237.671 180.237 236.038 180.241 232.538 cv
180.248 225.093 li
185.102 225.097 li
185.096 231.701 li
185.093 233.38 185.676 233.917 186.843 233.919 cv
188.243 233.92 188.688 232.871 188.689 230.98 cv
188.695 225.1 li
193.549 225.104 li
193.537 237.332 li
cp
f
195.905 225.105 mo
200.316 225.109 li
200.313 227.583 li
200.36 227.583 li
201.038 225.67 202.229 224.761 204.12 224.762 cv
204.33 224.762 204.54 224.809 204.75 224.833 cv
204.745 229.687 li
204.418 229.64 204.068 229.545 203.742 229.545 cv
201.759 229.544 200.754 230.476 200.751 233.113 cv
200.747 237.337 li
195.894 237.333 li
195.905 225.105 li
cp
f
27.2847 191.029 mo
27.2847 180.628 li
28.7866 180.628 li
32.1958 189.8 li
32.2246 189.8 li
35.5762 180.628 li
37.064 180.628 li
37.064 191.029 li
36.0815 191.029 li
36.0815 181.754 li
36.0527 181.754 li
32.6436 191.029 li
31.7192 191.029 li
28.2954 181.754 li
28.2666 181.754 li
28.2666 191.029 li
27.2847 191.029 li
cp
f
.0278 lw
27.2847 191.029 mo
27.2847 180.628 li
28.7866 180.628 li
32.1958 189.8 li
32.2246 189.8 li
35.5762 180.628 li
37.064 180.628 li
37.064 191.029 li
36.0815 191.029 li
36.0815 181.754 li
36.0527 181.754 li
32.6436 191.029 li
31.7192 191.029 li
28.2954 181.754 li
28.2666 181.754 li
28.2666 191.029 li
27.2847 191.029 li
cp
@
40.2275 191.029 mo
40.2275 183.545 li
39.3608 183.545 li
39.3608 191.029 li
40.2275 191.029 li
cp
40.2705 181.913 mo
40.2705 180.628 li
39.3174 180.628 li
39.3174 181.913 li
40.2705 181.913 li
cp
f
40.2275 191.029 mo
40.2275 183.545 li
39.3608 183.545 li
39.3608 191.029 li
40.2275 191.029 li
cp
40.2705 181.913 mo
40.2705 180.628 li
39.3174 180.628 li
39.3174 181.913 li
40.2705 181.913 li
cp
@
43.3042 191.029 mo
42.4375 191.029 li
42.4375 183.545 li
43.3042 183.545 li
43.3042 184.586 li
43.9976 183.849 44.6763 183.343 45.7163 183.343 cv
46.6265 183.343 47.4644 183.632 47.999 184.413 cv
48.3599 184.947 48.3745 185.51 48.3745 186.131 cv
48.3745 191.029 li
47.5078 191.029 li
47.5078 186.146 li
47.5078 184.802 46.9585 184.124 45.5718 184.124 cv
44.5029 184.124 43.7661 184.817 43.4917 185.583 cv
43.3184 186.059 43.3042 186.478 43.3042 186.999 cv
43.3042 191.029 li
cp
f
43.3042 191.029 mo
42.4375 191.029 li
42.4375 183.545 li
43.3042 183.545 li
43.3042 184.586 li
43.9976 183.849 44.6763 183.343 45.7163 183.343 cv
46.6265 183.343 47.4644 183.632 47.999 184.413 cv
48.3599 184.947 48.3745 185.51 48.3745 186.131 cv
48.3745 191.029 li
47.5078 191.029 li
47.5078 186.146 li
47.5078 184.802 46.9585 184.124 45.5718 184.124 cv
44.5029 184.124 43.7661 184.817 43.4917 185.583 cv
43.3184 186.059 43.3042 186.478 43.3042 186.999 cv
43.3042 191.029 li
cp
@
50.5557 181.913 mo
50.5557 180.628 li
51.5093 180.628 li
51.5093 181.913 li
50.5557 181.913 li
cp
50.5991 191.029 mo
50.5991 183.545 li
51.4658 183.545 li
51.4658 191.029 li
50.5991 191.029 li
cp
f
50.5557 181.913 mo
50.5557 180.628 li
51.5093 180.628 li
51.5093 181.913 li
50.5557 181.913 li
cp
50.5991 191.029 mo
50.5991 183.545 li
51.4658 183.545 li
51.4658 191.029 li
50.5991 191.029 li
cp
@
54.1812 188.688 mo
54.4556 189.974 55.1201 190.451 56.4204 190.451 cv
57.6768 190.451 58.269 189.787 58.269 189.064 cv
58.269 186.897 53.4736 188.428 53.4736 185.482 cv
53.4736 184.239 54.4414 183.343 56.1025 183.343 cv
57.7202 183.343 58.7749 184.008 58.9917 185.699 cv
58.1104 185.699 li
57.9517 184.542 57.1714 184.124 56.0879 184.124 cv
54.9902 184.124 54.3979 184.644 54.3979 185.409 cv
54.3979 187.446 59.1938 186.175 59.1938 189.049 cv
59.1938 190.479 57.9082 191.23 56.146 191.23 cv
54.3833 191.23 53.3721 190.104 53.2998 188.688 cv
54.1812 188.688 li
cp
f
54.1812 188.688 mo
54.4556 189.974 55.1201 190.451 56.4204 190.451 cv
57.6768 190.451 58.269 189.787 58.269 189.064 cv
58.269 186.897 53.4736 188.428 53.4736 185.482 cv
53.4736 184.239 54.4414 183.343 56.1025 183.343 cv
57.7202 183.343 58.7749 184.008 58.9917 185.699 cv
58.1104 185.699 li
57.9517 184.542 57.1714 184.124 56.0879 184.124 cv
54.9902 184.124 54.3979 184.644 54.3979 185.409 cv
54.3979 187.446 59.1938 186.175 59.1938 189.049 cv
59.1938 190.479 57.9082 191.23 56.146 191.23 cv
54.3833 191.23 53.3721 190.104 53.2998 188.688 cv
54.1812 188.688 li
cp
@
63.5273 191.057 mo
63.3252 191.1 62.9497 191.23 62.5308 191.23 cv
61.6782 191.23 61.2017 190.855 61.2017 189.743 cv
61.2017 184.268 li
60.147 184.268 li
60.147 183.545 li
61.2017 183.545 li
61.2017 181.465 li
62.0684 181.465 li
62.0684 183.545 li
63.4697 183.545 li
63.4697 184.268 li
62.0684 184.268 li
62.0684 189.396 li
62.0684 190.133 62.0972 190.451 62.8193 190.451 cv
63.0508 190.451 63.2964 190.408 63.5273 190.35 cv
63.5273 191.057 li
cp
f
63.5273 191.057 mo
63.3252 191.1 62.9497 191.23 62.5308 191.23 cv
61.6782 191.23 61.2017 190.855 61.2017 189.743 cv
61.2017 184.268 li
60.147 184.268 li
60.147 183.545 li
61.2017 183.545 li
61.2017 181.465 li
62.0684 181.465 li
62.0684 183.545 li
63.4697 183.545 li
63.4697 184.268 li
62.0684 184.268 li
62.0684 189.396 li
62.0684 190.133 62.0972 190.451 62.8193 190.451 cv
63.0508 190.451 63.2964 190.408 63.5273 190.35 cv
63.5273 191.057 li
cp
@
71.2559 187.489 mo
71.27 184.802 70.0132 183.343 67.9619 183.343 cv
65.8242 183.343 64.5239 185.134 64.5239 187.316 cv
64.5239 189.526 65.564 191.23 67.9619 191.23 cv
69.8691 191.23 70.7646 190.147 71.1978 188.732 cv
70.23 188.732 li
69.9702 189.83 69.0889 190.451 67.9619 190.451 cv
66.3008 190.451 65.4341 189.107 65.4487 187.489 cv
71.2559 187.489 li
cp
68.1353 182.737 mo
68.8721 182.737 li
67.2686 180.729 li
66.1421 180.729 li
68.1353 182.737 li
cp
65.4487 186.767 mo
65.6221 185.351 66.4307 184.124 67.9619 184.124 cv
69.522 184.124 70.3311 185.308 70.3311 186.767 cv
65.4487 186.767 li
cp
f
71.2559 187.489 mo
71.27 184.802 70.0132 183.343 67.9619 183.343 cv
65.8242 183.343 64.5239 185.134 64.5239 187.316 cv
64.5239 189.526 65.564 191.23 67.9619 191.23 cv
69.8691 191.23 70.7646 190.147 71.1978 188.732 cv
70.23 188.732 li
69.9702 189.83 69.0889 190.451 67.9619 190.451 cv
66.3008 190.451 65.4341 189.107 65.4487 187.489 cv
71.2559 187.489 li
cp
68.1353 182.737 mo
68.8721 182.737 li
67.2686 180.729 li
66.1421 180.729 li
68.1353 182.737 li
cp
65.4487 186.767 mo
65.6221 185.351 66.4307 184.124 67.9619 184.124 cv
69.522 184.124 70.3311 185.308 70.3311 186.767 cv
65.4487 186.767 li
cp
@
73.856 191.029 mo
72.9893 191.029 li
72.9893 183.545 li
73.856 183.545 li
73.856 184.947 li
73.8848 184.947 li
74.3613 183.749 75.0693 183.343 76.3262 183.343 cv
76.3262 184.283 li
74.376 184.239 73.856 185.683 73.856 187.359 cv
73.856 191.029 li
cp
f
73.856 191.029 mo
72.9893 191.029 li
72.9893 183.545 li
73.856 183.545 li
73.856 184.947 li
73.8848 184.947 li
74.3613 183.749 75.0693 183.343 76.3262 183.343 cv
76.3262 184.283 li
74.376 184.239 73.856 185.683 73.856 187.359 cv
73.856 191.029 li
cp
@
84.0977 187.489 mo
84.1118 184.802 82.855 183.343 80.8037 183.343 cv
78.666 183.343 77.3662 185.134 77.3662 187.316 cv
77.3662 189.526 78.4063 191.23 80.8037 191.23 cv
82.7109 191.23 83.6064 190.147 84.0396 188.732 cv
83.0718 188.732 li
82.812 189.83 81.9307 190.451 80.8037 190.451 cv
79.1426 190.451 78.2759 189.107 78.2905 187.489 cv
84.0977 187.489 li
cp
78.2905 186.767 mo
78.4639 185.351 79.2729 184.124 80.8037 184.124 cv
82.3643 184.124 83.1729 185.308 83.1729 186.767 cv
78.2905 186.767 li
cp
f
84.0977 187.489 mo
84.1118 184.802 82.855 183.343 80.8037 183.343 cv
78.666 183.343 77.3662 185.134 77.3662 187.316 cv
77.3662 189.526 78.4063 191.23 80.8037 191.23 cv
82.7109 191.23 83.6064 190.147 84.0396 188.732 cv
83.0718 188.732 li
82.812 189.83 81.9307 190.451 80.8037 190.451 cv
79.1426 190.451 78.2759 189.107 78.2905 187.489 cv
84.0977 187.489 li
cp
78.2905 186.767 mo
78.4639 185.351 79.2729 184.124 80.8037 184.124 cv
82.3643 184.124 83.1729 185.308 83.1729 186.767 cv
78.2905 186.767 li
cp
@
4.5542 256.038 mo
9.78125 256.031 li
9.33203 251.715 6.45801 249.175 1.32471 249.18 cv
1.15088 249.181 .980957 249.196 .810059 249.205 cv
.810059 253.39 li
1.04688 253.328 1.2959 253.288 1.56348 253.288 cv
3.29053 253.286 4.38867 254.288 4.5542 256.038 cv
cp
4.60645 259.912 mo
4.39844 261.521 3.56055 262.759 1.78662 262.761 cv
1.42285 262.762 1.10059 262.721 .810059 262.651 cv
.810059 266.822 li
1.15918 266.851 1.51709 266.869 1.88574 266.868 cv
6.31982 266.863 9.41943 264.246 9.90332 259.905 cv
4.60645 259.912 li
cp
f
213.837 229.857 mo
210.843 229.854 li
210.845 228.548 211.662 227.732 213.108 227.733 cv
213.362 227.733 213.606 227.79 213.837 227.878 cv
213.837 224.817 li
213.541 224.788 213.238 224.769 212.926 224.769 cv
209.005 224.766 205.992 227.331 205.988 231.344 cv
205.983 235.451 209.015 237.693 212.936 237.697 cv
213.234 237.697 213.535 237.679 213.837 237.656 cv
213.837 234.654 li
213.646 234.705 213.447 234.733 213.242 234.733 cv
211.959 234.733 210.839 233.775 210.841 232.329 cv
213.837 232.331 li
213.837 229.857 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Alice Nu\616) ()%%Title: (ministere_culture.eps)%%CreationDate: 26/03/10 14:06%%Canvassize: 16383%AI9_DataStream%Gb"-6CQ]sROX@RSYWMWPR]5"P72Z(]Ql0PJ7JmbS6[#b;;T7el#e,L#bk*I+0HN6:OmM5#TLJPWH\=Ba0=LZJJVUeHLO"PS<H`S`%8VXjn!JNk6:oGiD`FkgFmQ]L?\\@riFoO*Z?[QQ'otm/0@=(q$p=Xr-rc\%MbYV[=f%J&@5'Pu>*gu>P_:MC0Z+5A_iHBG>ps$_T%leVI4lhd1KL\F#?XT*<`\+nM(pYhI>`IHe$gt_r$@WcbbqG5XSb?qWkhd54,[eC<A=-!_f?dqV'p@kTuf/IW^rc%aih8@PTc?Dg&%^F,-Cn34Vp@.BeOIrY5Zk/3\E2Z`.1bqEtPcgUBkpNuc9h<sef1a-7YB!$RUhuA0(iVhg8/HPYB,,!i#U$3@NrGA*HGcA<(nbMbP%q[^:lDm(4bmri&k_Z*][h:=rSI(!f>],MNXYASM*1g=nP%R53m7G''@iq<!4-:2PIJ.I4`gBJa3n<3P5rS?eSri>1!RLZQ,CJi0a%_'8X#(s2aT_tAB$laS[Cf@j2bD4?'pYHAofmdDtWitn`6a'aZL@f,JHQj4JIq?I(]hllI^O2NbXFKd>skSn8!WrN"Oq[_Rs6j+j^%pR^lKVDr?XMgr?cGgot=,:kYkqDt=(Cl<KJ=4[u7&L_j^P**#7gt29Z3s(?.chT@NKfl"-mb?R0^]*\W^bPl]Ks9=LrO^GPIsR0l%d@6&;nYI6-htI.n'*^_R[EYF_qMU[2s(6KPmcNeS8#+%jDIEV+ngQR#ZccbJ6YO5W!G$`91p't=Ff8d5\jbr=Md^9.QV#)0pZLku%5Q<j)V:X=CO8&,CaQ)6Kldn7^Q4K&6?2q)^1ecBJ2?2cF^AW#WHh`B.lc7?bO/.>brp'L-mcN[?)p</<XtW[eH;+1Y)1HZ"nGVc0%LkY_q&!,?:G<]I,>!j.,YHIl1Hf.bU$@_qkGP@U(h\*q9)J90FS.4Lj@Db(.qh=e#_KmF)Q[MC,%nMCDs"\CU!Z\<bd.4M]69"l>%iVNH;]:XRe3`*)(4Qc\3iVH7enss(Yr.j!Gd:`IarQbb)[QctDm\BkL#-EB?i7.G=YJ0$(Ie1T&QL:oY"5s[0D#6XC0O!iF17P>b%X$G!mDAW=ipFhHT?QLAKlL<+[r:M+\LB2nVCJDc-`F&Q.*.E$jJ),!>RS.pe>i+McHfX`=\\-g;($71mcS-Kf&H8Bq0Het$+;_cN%0642HaL,?LjEcemena@"DXm%9lTIjY\+kB`jYDcLj3.4:NVk;!lL-@t#Q>n`g4[5^Kf3X<q)>YdIussf_I'ZS.D]TC-N(h%>(jY@%`,oJ0BG(6<h=sAfg4VMTRTr'tTj@GO4PMI9["!Tde!R,U<5MupaXq/l)0a)[CBs"U8",)1+W&jf^OX6caK=U^\B")q>\Kc'0N3\K%U4)fp2meVB++G/LUu3nHTmc^Z]uXHqFQN?rU[eC==8pT2A,M_ZaMi7"\o>h1HXP-DEP2c`qhoOZ5NG,rPV^]JPic$<Y@o$W+rBi0%g;c&/ZM9>?BO1;!EjguKVB"4'goW]?]V=0cbaDCs(N`nqT/,4?4/P'jbB*jKg*><0`Z;UsG)"<(q02hYR.JC0DWX,qg+\13rF>h$%URfS-TBU#`,>79cGb;NNq*+<j8gb\.Oe-l%WLWec(b$b.3`/7a<ID2\L<Cm&WTbKg=Xk?cB.a.H55?;_0`4S9r3,suD)injo"V?f%p[lT-qOZUA?L.%@hf?iRUeh!!>4Ht9jF>]mRgl9k:]>Q`am\JXs4-W]bB*:rrc5dE]>!fJBV0.m:"q:Qp+r685La[08);_0D3k-D%@r1?FgM[;JDcSH><hJWc;a1*'Z>Nt(Tl.ZtH;=?:bk#32T5\YVgXWlBLUmunY<G&AC\kdU3q,=5Wm=G<FC#l1G*`5*N#N"ZKYM;r%d1`.fI/HXP$$a&.r^_`1s1.Qcs3]pIdqlM:IdOY[k>CV+c.?ijVGC.XBTDJ#@!W"u?*ENJf7ge3j3q0\RX4=GI&`QT$?9\h/-j3Y%2j\9Ch"`3A:ZKqI!]L.pA\`4E\5b+[S&q)[-SSoYFutI0kAmR+oi@G+St[/XIr]'APaG6<`Mrl1_/5a(d$*O"i`)2)Vt8Xd:6!mX%?UhH@1@]Wh"*O^O%;D&gK[8X8QAY:1i(U,k14%2#j^iMTiK<uL\V)Y@JndqLP9H^VM7g8Mm9[qN$n'ub@HPASD7WI"]P$`f+W<P"%f-WJBB8rR*G+4#[R5YdTc+p@24>$"3n_/*QAY`gO3uTF2=gQ,QnU4+%*?1u5BHCcF9>qNcKN>Zf]jq?(Q[eU=i%RN7]1XU;F.+nf%4SLUciNkU?Dj`*\O,r`pX)71l*Ieabr-Ra3i[em-`C%:]lncc"g"N$k).LeaKjMF1"5/9%gP7m<@,%_EA4c_nWm/uk19+cADF#`0%dQ3>C0P:M,d[YK;3GluW-eK^YP4+K<&nfWE3%WF1k[jYB0eU7V#tp[u>*:5Y*22ug6p*gT3[dsU#4>Y!8qhBP<H+2nHba]jB`WR%%m9EteQ?/8&(:Y^@];uH$#i&>`>XL.s"&FVXU!Y<e''IThm>gel>j3"LC6NlOQ;5\FenL2/]NC@DH%^t"A#IGSC"o<K^dk%(;i[g,%F3emlrocFl%aF+dYrNN#:R'eKM8+E,]h7?N7Io'W8/tU@SAR^im603a%<WVTn_e<S4/bYi[:=)A$M/\T+l3R[dS$O9A+C>Y"1"/f%K_016*QBXi"d0lo6V+\J[K.,pDHVb09?)ISd2K!-\kO>'DTZHErCNb?f1h3KCIjmZ$I`6F=GQT)Y@?)Je>@qBS(kD:*mO;=QKp+Z%ImD1%Bt,.=;b4Y)k-0&0]!;9#3I.&lkK6@6ha54.56L(PSo_C9%a:.7%_*&*L4<WY'ARW\ch.ohc.ZVZ_&0K4H2f*R:`5j]R&fUT%a!Q6Y]ItGk=6oY=Q(O`FoIj!fY1@$W#Fa6qP;%T]3H$j9UfbOGI_]A@Em(GI'#'PoeTRY)<`?,Zb19Ii!U4`dH%OnH%9V\(bnlu>%W!>t5gB@moeLq4>9AKq;q9(fJ1bSV>Ed"L&j=a(4K%Y16&m+9Ef*tqWi"8FV\s:^F.s*d&/k%q3WE7mC+=ip`GH?j=)=jLja9A%9%ctLh<kL=YT]hqS(-**0-KYOH+'Yu0T;V`;QVt)aRD&^X^GEh%@gcp&$-eGK^n/LPd]U,,jE07.PcqjRpk.rY62OqX$7Xh0qe\o$,%jW\Q!C*4OB_^1[.qFr(R-r4ms7`bjVk2'"'MBfhCbffW?J"fXcc)p!td/#rb^qFP;F2$a`9P^^K-rl[-JC?H*_t?X4-.>Z[d@N_]%1cDe8pep=tI%m_Z$p*Y!d/KkD?ef-P`Y'(<0.&mLAE3piZI'6j5#;"MIi?`*]oCpYqR:Ck.*9XZ/5S.O!E?q*[ldRD3ak3)49,=N%<I2"1&[5u9bUr$-*H0_ZZ:(r%:kNNXPrVWA"o+;%,Kf>N<*iQWi:3q^.ai:j%Of/9F5JB!ni&1P*b.`4T49Di2FC3%O)uih5O:*r%E-5tQ%'Bi>1^?Za_FccuZN6+M9/6RZGs!d&Hk2ih(804qihrBE"2eUeabZ%`')Ab5.1>?;J&oUpIoLb7f:6&V4(p7P")g";WI7Zg%Cl_+$QCU'oR;rXc>9j*YAXYE0g99437'.WS8YH.mlio.?Rdgd#p,[9INo_+^jk1qO=R?D9ThKNm41<bpWL)DK:L&uS7BR/kW_s\+%;qNm[6iLI-E%NQIJ@YN\\8QK%JC[tck:l1`9C?M@a\ZFCZ]s(s>X.sZ`\6*F;8]`VZHqd<dZ=3d\OYgYk(L[4/C.m.FZN/$5A^-i%UaGVecF2M[6oF*QKr_U:jd7*'VU?O90ue=r=\7e'V5EGV/raq+'Df?(1+FS:a^4-M`\Wr/b^%n\:eg$[F#7J_SJcRGE0"rfCN]QG%kATiGV(*9Nko_j$X:tCU1BF=04;6]N(4-pjpe1U?62n2YQ>b+F'RB[O#j85b#?]+HM+Y[\8%sa'p)2W#ZRiYDccg1pN6bGg%]sGo%GcL^eV58BJH8%tGs-+/lkP9>#aQKLG5$",uq[_"RmLN?u4n&D@:`@%=N"rXZZc>J:*Ul:kFs#_n6R@58;)7rm9WkeHDM*=M0hI9u%\5USg(V<Dk88Au*<KG+%B7_(r.j6RJ(\[2a"9)CYJ_'t;2#OX!fXHUMZL[TcNNj^K%D"<6K]W;R+hsfF]\:HanJh;T#-@^LkE,Ga%O#tA(3@Euhp?'7KdgkaX\AQ4C't3UuI/D@#:"t=B,MsQU\`\s;Hk4opT>]n_qhE_Id1Z<E\F!]e>mf_\q0sGo=;cRVL1f5>1&=,+%F0biFBReLbQ).Iu?JhL-D(fD'J994Gah@_PmBdkZ39,0He\bt4>U#f$k4;4fT6$Ube7\=HR7><Z02HA!589`^^\%Mao-<i%%oIY-%0)\_tr05WNm$s,XPY?Jmp!(NKo=:]YbW6jC.%0pCQC[VGdsQ'$rAj&ubU>JJpV/)dG0J8-O[dIF7lD7nia:a%6Vl8*PKPgc7SC#a%p.M_4`>/dK0n$(ikBY\)1J2ol0^X]FGOG$n_-dMjB<QYm7Qkq5n+gJa3Etj_#DVtp_%u*[U9kGcG,0];lp#-pSp"$Ag]M^r$S0$Y%nB(RJI`,*HrT>1`C**I<?9Le38aE08])Kk0BGWK'T(]\YWl+F'.4Veh[j3qlenTr(;U]nin;=:b'9:"hoVl]#oRV1Ba?DcSjnUg[%H+hR-hk2j6[`83J0SVBbHfX3E.c-"doF82odqOO'#<:s-YBLg&i$0bEK<-g;SAMrQYiX`8I:S;EX=ZLO9nTm4]bWCLq18Q!ooNV&%.BRBLImHR1Xblf#2l9kMC!ij6]SDGi!c,>FoRM#W(g>EIid7IX]7lRZSeSe21CX0S3#?sP7?1^O)/"d:bqqYJ+5)^&gA1$&c6dO3%.8".+V!1"rI%6f.dn?<Jhn3Wep`Fm[7s[]&l\?N-Vj0HB"R"B83Quh7gaLSKa2^[u4K&*K>078D`c\>hLKr^i;iJ)d4=N#b5L1U:%9N*Xo43oQ@J)jkPFcT0:l5cIOC=/F..4h*ni#):/TJfW/[671U#A?9(=4(XkRZeF#4V<cd&%J-PZZ8)00NB@Vh&1SaM#HrXUF#S3%cP!me1I`&<h69%m)48al/4GmM9(D=ARBpUFc?9gF&'r[;2sn;hUsh1QpG?S&0$S[;ZcK=r6HBWl$T@jNXK!t5M=H_qh&oo&V601@%&tM:22I=Q*2piMQ*NITYg^MD@02g<m\1H#NlAD<W%B?i-hB#KfX;5`0S/te3@kL\#Ks</=.f(tBO$m(]]!%]?D&<qgK.5#J.`N=g%<]Y"KJ[+<A$q\dN0a+$N_3)oIHWP:;>*%;e!in!EBcZZDh&d_dZ:Qn(D3!#,@'[3mH7EF9OnK(;9R#kE`jh<*4fh/);p4#(<8VNP%\V-+YI%HGG'f*6pn+;`3]i'2Dk*RF'87$*6eQUM6[:b_*ZtHlil5/Bg9Oig!`GI*Nk8e8i7/Mh\O&(%#Ij_dmO,tsXQdR+6A<^7L%fO;oO/A6TLS]G">q9ne:19W2UBh!:(2JRSuNID(<S'H$`Hj5L>'QJiJ/!2l7ILM\+<n9ul_-pa9bNCANHt>>d>L!H&(,I8aO3\-Q%:3]N*qD(jW%X`ZTg.sr?2YRf.aNdrb-hi^n]C\n`+aYhpK6>N2P5Y#0TD*imCABeE8u>6#B_e9+hRu4:8H-'3^I;\ZpDQ6dRtpm1%qsX?ipmlm0DYNqb*J_P.pYUIK+*(`G+Zs?/2>tu'rgTAfiMXG;\Gu'd(O'fdX3[,Nmf0LqCi?HtFpn<>MoFlOWh1)/fC-F5>'dN%%HiJ&SMZ;u@c%heE@eVO:]8+#SJhp]hrHWU.s6^ocb4j`OlL)pVs1Wf(pN.G5gg&Z@4Y/"0^PZrQTq*8l'AiZKmcsNBIsq[\r\G8t%H!akW3TR[W3M*D92\1_7qYfF*J+t+tf8j8]MX9ZLqhOM3=,:H,hDs=DDJhYNIsea55@%O-HOBGHa$21W2nQ[\n+SQor'/d-miS^h%i,eF#[f@k$mh\"T>kVmm^O(t0U^rC6_h[u9>l<a`roR$i+I[<ndIl8'+5Wb..7j\?mc1>5)_,h$lT;!)g_tBpg\]%W\*12Sa,d^@%OF'Gs>fkO6j7W:>ibrCiO1;Lge]l?]i9b`<]RE#=^=Of\?7/*#Kf/mNqhP'<lh@kr2Z96*I=l^V^=dr/QhQQQgLK/,Vmk9%DZZDX%pYkt2,U-`EJ,A[54[s5tp@42Jb5>Oug&=0+l!+^Jq;i1hD<t_SQi6o-5q6+Eg&LY/pXe$/LG(.Q>gs.j=M:\_=8g`#./]ERc=F=g%DMN)DmC%JuDO[a9#)1a]QeT^,bK]/FEcnq**%q,]o_Zi*ZFP(Dp<m3sS*f?YZe;E=X3GZ@D#.nqD>^9e1`Np/)hTs;lc\s5]j@nn%bOr+-fA5/agNBiGCV)LjHF7$aXu<?RC:.6JL/l"R<drT%R[%+1Q!)YfEkAthDO0VMC:U.JbAQR2mBTm+V-TO$4`#ns@5G!?<A8fT%Tc^k^&+.^P/h$a3W;CF]8Z1$=_,)*I^?W>epMJg[/m+5_fT7ed2r2&LFj"[dqQB.3f60mO3np&V[r2/@htXTdq5#0\mlTudlPo<*%ou>T`]594U9tP:EA;0YmfD;p%hm[Gs)bdO!ZIq)#B%8H%U$8&LnP.apNGE??RbDW7V;&Mf>Ic&3+&oCa51hQKF3Zi,l<rm^g5TCm%Q!KRMXL$cl[^"+]CM[jrk0e(ig8rNH%&PtSnYS1'EQ/o,lDb=7=bj_i=*5Wfbu#A\@Wd3,,?!ga<qYIYhle(&7j)>W89NnCQ?8$K%PZW['lN#nLhASd][/k@_Wpl^^5#f'$<NcK3QY(%!J<H`WrbXp,X5JpDGcq2JS'[1tX$`@mBNl/(kX/SOd-,%Sr&PDJdVYI7&B+k5%1kA1]&??=0>6a)h!td2UD:R3gWYX/nTX#*XmV+?A.eLM'oY`X9F=)*h$XM8:Y3J??%AE)gTaNfQ/%8e)]%)Q'D*g2YY,am]&#&Gn%JHn)a(Ue`4pqd77BEFh$^b:+DS7Q(NKK-L.[mM/Q$\9.a^h>nc>TXf$)&R<5)"DY!<m*OCV@=O!"A\V_S:DOimPStR-?/R"<<q*`%J]4+ol9;G"+'="1L;5hYL!/"i?&,+^_[pP!;"<kS$KG_(j(B+Hd3af"6l%IbI(:rVg+_AE`-_moE"rT:-4Iu_AK:uQ%>2"oK@P`C%gP<VW%"idF#4ps<[b?Ir$mRl24,ikuOtcH^+9=gZ5oRPF&NSip'o,KWMmfL%j<=3.lEfB/;HN<;P>\uZX\9/6Z>rmJ.*lWA`Lfc-%"+oq!op<;&0DVc'i[k0$;95:oYiTo-3eq+dj]Zd:_3W9Pl5YC-QYY,3"C!M1WcJHS>cq(:_$1[h#^!<_C@-9g#3aD-<9FBb!pn5(%<9F<>%Bt?X;sbn//\9f/p\D9#n8/-)o7?bC!/@X8WmLt.Sj1,TB6iQ@ku4F^nuRm7Rj4!lX"O/HD%Aj>mQU7[IOb:o4SHkV%R(>n%MEgg+p;l8)5%.p#n7V=VO$#f/d-.(%L!E[bX1;Et>U?bGX+ei!6E@Y#kZfF@R]D.f<C3as>3KB@PU6(nJnNC,E:sV$VjLtD)R\QN%\eF]kgmXL"k[O\dpbN])#:/pLT/",ko>I`.3k<>:Be)<r;]/>Y(h!C!LS_==n+0BYD"(F%EPCUG"%`Ce''"8[G-5.\4AXYUeOtka%.GMCZM=E]>4'+'iSu6Dfl6XGkc.Z,NS'UrT"_d'_eblKj+i'_e4Nn8.Qb%4X8p'`(=701IY$UD9*@oOf93o)<-+\E%.sJ'_=3l*P%nrV\ZYb"bPSlA"J<dgUg^6e)`nsB-QSp8hAT1Zh6Sp2l[GbWSj*OM]9)I*OH<UlQ,in7C(BR65MUn(N=I"=>+MEbYB3G&:3F.aM#%WoG.ee,Q!&UWFT!Vs"!P6[B2Kp3aMooaB95WM93qH>;^,pes>@iQ5_Q[Gn:2+$\Cm`L0aYT(\tMmd$QdI',=p21qoMXWa\^<1Re6%;9bd!>\f.1#$'hi6W>k?3nG:E/g49TV&G:#S>7D.GN?6uk[O"p\%);uW6TFIptkT:N3$+j^DK#hB%aI_j^[.2K/tYI6^E)a]:NoJ%%oh<,l>t%QZ86%G[Zn0C>XG%o/uDEIRiM"#li``uV!S6^F/%?X]MIX"Gc2qdm-B*E<t=YTN2Q#7=P[6<]jCW7`OGR`^>CN(IYI.q%PKBbukD]h-7)_^`ESp:nIjj(MURAiW!;so;TE>2?nukk75Ku^uJ``_:ZQ>Nj;r'Oen%.,ge\Nl0l['ZFEcnUUkPJV!HXQ#\G34L\%Nct0P%aR8BeIu4P\'kk2H^+6$fWKMNJ%YgQ#EjXN"o.U`9Tqs/oB5+DH@FSEq]BaCm]gZ%g[TVr?QIo@1UlsGh-V2X+#BMi$5TS#%\G,/B6,j,Z;&B7;7`\]*HG[okP8Oup<&m2(@fMVuE!YCB5?m),gB='R5+)DC9Ronc^aBfRSGtd@!9XL[aTVBL!dla(5+)DC9Rn3c%dXM,#'qVa+d-9YU$1Q%>pgaGR1',\rmun&s:4Ss1J57N--PPF%$1Q%>pgGK9a$3ee3SO\-?9XbWT1jc2-GUuBi10g2R/lCQprN[6%A-.-6!BunOk:m!dGNP(u:M.2:lh7CkNP0"[DDo_#^")&'p%X<r[Ws";^#(1Fg?)kc&_QuoS^S#%#0PTOc'SacFXPQ`A=m``IQ0fd%K*@b'3,RAP?/4!Yd:OFrIi@5>6f%4'i1#?&]-mBNS(5L6Bm_]IBR^rXoS:#mItDSK(*(+K8&f"$:GgS-KpP%eiF(7)_p9*JhE<tR%rc[hdnF8:;f)J!JZ_i3Y[93q`3t*rQ@)c<rXKeXj@j@oA[kr`e1lG`_Yr%e,RSS/t_46*[V5'HT8(?.A-C?)R172\)1t?F'9`>e<%"[k':=IOUW9gG(t>+11.9grJGWan<1N3oB`$1lT6e<CEA.UdqG6NIl04dIEF7h\ojP8:#I:K&&Y1-Nli"3k:JL*gupL?>frUZ%?6%$\me%9Cj*7\;"TUb]A"iKEoPNLFI/7BlD+l0so2[VSLA7%G!?N@PY<d+$%c30IsRg1]$C"D^%f)*E+YE'L!X$Y+LD>PdlJeq50;4%)>h!Ed\_&5.VVkm1+bOe'pP^42'pkTVDYEM>:&Ydf<8Eo's(ZX:-)G(Z>qfakugU,&m_O^ALj`aRDtf^ge$PKFfqNbB3JB%.:,U=%RT@.C/Ni<*R0H,A==#G!;SmH3/1G%"-dT2@d`'ipG"/YPS0lcH]jbrI<9Nn2_,XC(djkV]8Tde3fGk^L$jXoM_eR]m,LcYa?B60;%i(r<$8`;O7l3sd8_X-1M8)6/2OQ6#_9#JmNUl5":;DK[#U^_H'f-qWZqMu0]\%A;PaHo"_]ii<e\b?N-Vr)j4nP^=?pU#:n35XR%%@)EhaW/=sVs,ECX,+R)1"K"o$(URm@hU=G>e:&sJ/F\nDN85$&nT<F5rAZ/<Yup^JEb!t^+$`E-5[k>U)*A.$-A@13-!%jTgGPc`%"pmAQPjM&jFsLof8_d@:dnL#5JAeW;&WDKBjT*T-2/Pl4Y=UFO82r7o5S#-9HP4gK$#<n1`,8.]2^GpS8T-+sDF:Pg\C%CFZ,T;6%Ua7%HQ!_5&[NZ0ZUW:j4d_dIhA4t>m%hk(*1t)?D?+"*XQ%qk0N/=)%F!a],SF^RBS\g*)LH2j*I$N>3B9Si)np]1s5%et2W#=,G%ULP?PQ?brA9W/iZ3MU(n=B+IBNX=:;?Fp!A\+k,ejJ3k[o$al:JhoMRFAT._>b*lT*R)BJ4bFc9hVV:,0dEr'(bZ^\*SG'WN>mfr%8&>oPNWmgr7aWM"GAA*i/+PG(1nsiVbXq-S/PR+C"rN)^@FJn>Q@:<Rh31_,p1*Wd->@mCJ("0,$.=XZ0ptLB)OFZ/*S)F7LFAbK%+t?epe+4lq1.5:eCFkN_R0T^UBToHsAAKLEWU`lH=X`L4@I^/CM9DP>[m>7\(0cV#@4`uc)k$CP`Cj'd=2Bu2_:"4#UK&7V0sp"R%n;qRZ4MCM0#4ai,anN"`s2/#f&0%%Kp%eojNY/IJ--q7Fa?@q4MkUqFKbm1OQ\SRsV)U).jLeTY"(NQNN(^]O+qVF3g,"!kItlk%%qGBm<%PM^[:)'<d*`e-=od,LD-4J%-#&75;N\7qG]/OkM$6q$KW]aNSDi](>G%BmXJ\44jkQ/hQYO&afY8VPO-dPU*]gI'0Q$oIA%PPPL`RO\#(fdC?LBMZQq(j/)5r(:Xp.'GI'']5"a$-tLjSI@NM/9+3*m\cAI%^5Qud1`ouO!P)_p.4/qP$b4)$cS9Qaq5GsoWXOZ%o6l^YT9d.i""ef]%\@Bi7';tP8&*ge-om<+4;kL#5To(.fYUe`i'Psbs/*^4-Assp`WKRI`Is@L)fb/)-[>qtfs?\LbG.ds9dt'c%a[B)l_5'XLT5'PUU8O/W-dFjFFJB-j9g\YTPbt38.0])]:#4KoVXrY"!%pG#/H]E$SbJENN:aI51(\!DH#FRN[!_Br`]ZEKL`b[\%:IoMZ<)7a*B)=pE'iH(DKq.97@:r+g_]NoN8&QsZR3%JHqa=3NMG3gGT6t7(Jq#8=r05fPdYiAJcDd_Z"ODlkr,adV-UKK4n0:Uf%.M"Kk?ZoksPf<Q-J$R/QB6"WTh<XP4!hA`%37[cn"Lr9%-G/;^YS.iQL.#3\0m/BX).tu;fkZ?[^c1W^)UbA']^,b]E-(fVObh2?%_->9ZgL>M,"?\2YH(f469XLi<`js;m/gEZG_p!\o8=8MI)>7+-nhmL/\PH@RqW67_]A;I2/UmY;FdGTESk]f=`-j;:L.\'M9)U<e%$,PKE*^)^5/=p6VfV53"3b=?nZ:LUp8Y9RZ<i92+3QEbS::dh'aL*Ad/sP\qT5$%$5P_\,Sk?^R:Hn3gLK))^2D.]eB)M"4n3%EB%gb)8I.%e`*]C'KjnEZe:YoMWpp.4ED-aQ!,npGNYiSiV1K]j<P0TnSkY,qKoF(Nno]rr/'IcUq^kBH?qCON5s\p)`E^=<N14R6b>%l@^d]Fh)F567:*jhR>P>RqH$r>K%P1agK"2'm6^aK8!S^jCF+Zin2SoSeh%-W4+&o-`kB]gX;%sDARK/Yj4`K0C4-2#L)CZ+hM0-%6(<&CV+#6Aa,!*;>r(]0)<,+2/$9b0cA6i01+pn,VH(V*__s-hRCKfq;VW?EEI7?*C"%rtK7+^*e[V^!RB[AP7P?qFp#>%f'@iG5%0?'37E=OK67f5=/@E#'&(-6F`1ss@-XicKu7t!O@G`c(iI_*dM5;g6+%sI)L!6b=fWh0E&)*U/g"-]\tc+YNG0^%4AF3=H3oCANT%e,4%Pg["a+h;ci"G`&C*Nr9k7e3r]d%'*J*'Ngo9odZR6X)k@KjjRRZNn(1XnuL'@HBh9SeN$[6d_s2tS=U'Z-U[I2+mF@[T+EGH%M9#nrr2@]Biq"12?A)+5N)#AR\WLuW`5m7_b>+/;;^@VJ,N48#SXaNGdj072KMRhk:R,bU]oUoi\tk2g9_aE83bFNs1eEHskdUqA%7"4-+cj$XS<BPMh%\IRuMTBXS"Jsu=_H/dSOq+8VEKnhLQ(CR0VjAbO9M("<oQU]b:t`dX/R*\^a(>_R`%VVKHi;A*<V>E&ePkd5%UOra#hFc>g[Ap-JrB7\tp!elLhO7G%3b.[/Wmt&6<\Fm$Yd\rO+'+O"2kbGc&R;c0N(f<*K]u?%17<'+<13!U.85e/NpQ8.dUC)s%MhdT.Y'bKiW\?QZPi6W/m\hN"NhMV5QQ%!Y]tBB#0->[2@<FE47[dI#)@:&!aQsaH*U=$4UWmua<cN-T;Uu-FLab#>80G*MqnS)t%&1hN7_,***F0AtlmH#BMY(7ntAOU'X6Sa'aEd^B^I7a!X+;s(#SF:!7iRrru*hJ-<aaV.u^S3/b9@L[&9a."'QY/aN_NH7#JL6/D%-A[[/#qtltc_`h2"qk"E[/j&t;ob3$O%Yp.2DgDpBe!95FL%/,]pJLX*DJ/X-CC)GRALUF_9-SHLJ9n^1G3D0g!KZ'(5%&^H4$/7%4j?NgR.h:"WYI$kV^T"H%GUb2@UJKe/+qicjfZ>\H\,l)JU1\:gsoKk_:?_7IAIui4f&GM;;/?n2a:mDp["s&Ze(On_R]#<qEV<,%3h:OkCKE.VJ^ot1Banj[]3^=d7YYJrdoNb#9XfQ:%bF>kV<KP<Md'@H)6W3lFET"BP!,nXJ$gk'7dHpOp#o^o>?,g8C0SWN)(O=0%\eYtR1>@tlgJM/mj#kK5M.n$s4PFS>XM]jtAC0L0V[&B9l1f?]5g;WG`;gjqknH!JK69TaJOMn"]6l/H=DCA7nYD<>=b$P\9u+[:%ChkCL:oj2iSZkA]cF7u6!jt)Hg'J/:l?m@p/5WD1GSXDT3P5UfK[XI@@61=pVsT+!Eh\L5o[VenaOBlM(5LMB=h>iLEN\[#*K^U#%6rlh'YTL5'cYl>QZkLjGk=fscR4%TY9#n:1Qgo?DO52k1gn`5Rl(u-T$^3A&]<'sQr9-/eJ:1*obb@5lcP%2lm(6uD7Co)(mJFSD%fj+f'??X>P2@dgMqgnH\AXf_U1lpf]`?YEUrUn';pUHl#f"\.Qms,nFm<3goXLWI-NL&=-gMa]3>e_D-DKUQPS[Iq!RWF#RP^V`F%S--F%loVE5#hi5NSQBkBn=HrS]UH+q]T,?;mFKGsNlojlX'\#pe*jXi,[D/EBN)QE'_li,3Il:q^*@R9EIW^)ma&[IM,X:_*fX;d%NSLQhmF.HpC/hQf&A8tqIZ:U6isEIi-#4TdSrLstESRm_q)0^FDER%8TWu,*nU&Bi)Ya;c*lgpn9HU\*<FNt9Fr]^;*>;SSVlG^K%'_U^1Ybt3-\E$jpHtK^H`DWsm*IS^30N\+LB<.o3]!cA.9jsk$dT*#`X4giIIZbGM?IlcpcqdL@*s[;\.oF6CpeTQa(KJOV-!-pJ%eT1>)W+I*a*NG]l_fMi@52Q12WqrWt;ua#;:@\=j\@.bFZdWPEHCbW+1K60ipm`&:Vj\:>B5S8&CA*j2I--sOac>@[F5lu=%,sXP%BrWP@cQ"qa;g>u>mD\kp[21(U]I;rI=j#cqKY3r_Of++`4tc1Zd<f;5Zj,ZkJh5]sFhS;V7:#:b`YH6PY53E-s"8):0((hY_U.%0%2B_9Wi&Z0LGUoMk$$L;oOB2W*R]W^Y9[pb4iMg@?i[/P@>fiS#6'_pXClpKa8;]'pRhocRZ-#ClPX.cn(hA<:N5R+h.F*_i7D#:*%`[W&"9F!]'_k$%*B5t!d@SQT"N1Ysu!IN//dfibL3djDiI$RPme`H)<B0G9H0i[kaWl4)bIhQg,Wc>n).%#k3*.Fn=Wp3ND)aC/X%m&1/'_KRf%n&8/G1($8Y$QqXnH"K/PaUD2:70hJ+&Q$IRfS^N,K#cfK-K56nU.bK(4EHQrp<iLsedf^r_cXenCES=_;?e&l%l[=>%*%1n"'OJ$^m\=7Ck03b9,LdXul*Ph3:?"JV*/'_B!&uY/diPuEVShdXa+,.bq:Xc^q[`0!cu.8bWWVLrCZ*1j_p0<alj!`>p&J_I%0u-SoI/SE,jbnG0PM)>_=XtRQnMCmiqrug,^LV?:a%nYaoFhc"c^"8/LXB/Unl\[Ll\R"e;[6k02l5YQVk3j3'!MS?rPOna7kgi:%DGH_rX=j7mMK8Lf=__WQB`;jt;r^N'Jr[ldp!TM+j0;e$1aqR4XB$t`$9B6/eOtOHNlPo-S7"8(7`dHG&[at9SX4fZ"?Bk0<3m!o%_fj%kX\m=t1hKr/R11nDS7kcU>p3RDUJG)XClD%ns,_/N3dR@JSi^UkbrE^-FpdWKKeg\F<GZ==H`I.g3OJ5r)EWaccVj0Ug>>sf%Fqa7)MFObCMVK\8[qK6+c(;gdcXdf]7b+)O5P^;YHYqb[S"D)ObtkRkil;<!U4:MCrA$E9a<CBF0LLuMKifeE0+p=/<N[ZXUQb-c%lKP8*ZjlhA:4h(rp_GUi[I/Yj?Y8@^`Jj`grk05,]UBg6aSiK_I/K+4i$WF\XIek\LZV$PCI1,CA2i(/a8]2ZZQ),S7W#)]`U*5=%`T'Ha4*m@f<,q:e4a-IVSM&oK.Q,F15/!^m1lS$*#]?P1FN^9H#)FLthMs_!WTBtCL4`]jSUST\_jqJkDCYS3.FF"G!li=`(eo+!%>8kpeNH.+5DIq13$shZ%ct!@d9tl.`aj*1HSV0%G(2>G%,IB4(A`jEp"#1cW%HZ*$.&&DsWkG`nC/V!-Oj".i/<X_pN1qtAYWSTp%`\7b5:nE/?B84F"?)#<4F(oXTrdiKb0K)!b_ZP@>r$^Q(\FOW-lP.RS&NO08j%f]WKDh"k@qI%VCFde<FVFe"$btBDC87<&-LNZ_%!^DP>9^!:%J+#G)8k&bNplEDorX.l=Y42r`9N/!ba4EV<Y(TiNdl9!e$a"[Npc(SSLM)bZUYY-?U-ea&12$%@Q>A_'a3/Xc2LF<K%_`;9E./E3kd:c^M13J<>r-5qc8l&"QrR^dfh`P0$4^R#os5fT8/sQB4IJjYj3<&$/X2i9:_d-*%QERKpDf0aeK5MC<0$K#V$l:P#%bG+5Sl@<-o?M(C;"1B:bA"\sr/cY>oo_Qc#om_Y5IpOsi?S-a$:\E]VV>oSbfH?QSh9)dK>J(=3AIWpJ'REcr_!<",s#'1-r;MJN%i[n1#/cGW0NgdKQB4U<\lCff1ZU+Q_<g2U>`J3MMhZ/'Fns2N.kE2r`6--PD#kF(^%\n'\Q,ih#p)83*?a!%YU_Y$q%I!8uIqLFg%+E6q\f`!'#h,oAJ0)ERV7.jPa1]H'4">Sq/r5ppW&@;$uR&q:G42OcFZbo3C`%d%AX8k^ad$BsQMhX)A%+@W1-M42T#/shS[:,i&%SI_?8Url*%H[,>okTl%/KV'161`,$@.0j@aji[jAZ]ohGc5#-4Bo6CcfnUIRP\n]uR\M!V,803aAOFJf-lWe>>uSh#n<u/-VF?FI%_RKd0Q8&W3U1Kdj4?:AlH,DI+_6eq8VVedi`*K(kUgZll&^g0(Bj*o,+H.6n*b0K5FHC4*ZFqGG)@$".Mckq=B!V7fME9Cs#mrJ,%V@GOZMs(P-EH=SO/oRSH3).jVTW!pk6pBroMiKk&0ie)lL,/>,"U[&(V2i6V8$Ed@UW/8)1*:quQ'rJ&.YDM1j1I$TSq8)&Ef>st%OnPW31PM6X7I<`BMtd[=EI10'R5\(A;UZgeV$UWUkFJStZniH:<:tSd8nVlP'P?2qmECqfckd7ger0cm.L!Aud57Dqm=k.GIb/o:%l!/8mZnCH]4[^TVa$pFL:*ahl]4cO-k=C$G-'"iO`X6/0Jh`bW/Q4RXZoE%5ia_[2-?m_0@T?Vk;?%J'AQ*Gu_T^c6CoV3,^VUhs%B>gZm1R1Zl/Pb?SKJE?<;n_6h2H:SmeaK1[CoU3+R!CKQ9k,56?U9WSUQ,2,lB:i6T]h<b5,lT+Y3t05hCfolY3t/]]6XbV!U96?%abr@86]6Ii?(47nj(QhcH@(s,T0p6@G6(77FAYJmdUWZZpUd5LCZ'9fSeT)-P6(COk__'krg=n]"odC7pl8Y\l9"ghg'gD\d"FNF%$iF5\)&,fd1UZA>8NGuds4N/[/1T)$4HjK#)"^iO4,dQ\6CoWF</)j8'km<9#&?PsWH4g=CP$/ec%$>Vs76?aS9uROL]<p/5L3dl%Kqa;B5m)9BCjIo.@^>IE<idr*S*dnu@&71)RUX7p:M6UTR>e""),V:[-3T`fdHce=R-')VpXDRQ+n)V?/3u2h4H$l8=b7?%l98dA%pEGO+YXK=Vca1+c$SNre]]WG!LY!b^OnUtr)(m$F@hs>CZIj\6SqZ'[7L/:c*;lfSR#Do"ko30+D58f*P\9!"aeY"`Kfg$`O#!Dk%Gp[t^AO7@,9`.)s`'4K#g<O;tL[K2242O,'`<h^.6p8`4$):aaCR0kl7_'Ah//K[mEXB&6_@0_)4kR]3OO#\%!bX!&cSBK,R7T),%R5gna,`&<kS5<g,4AjnrA-ZbY1"im<S05@7e?`DM0ZqA5B"9m0P`'P+EcJrEQQU(C0,!t127Z+=b9TbLR7c8@9Ys.c-G_NM&f)rP%$)/l4E);ZG0Rl$'P'EH/<,`IBJ]3L/P*"jHmU@U884&mqd&\hi84&o'InX#?)fj_u(eY+p.#6qBh&,H/T;IkK'[`.@;p'KFCs&Y)%ANmpiAWm8B2/3;UJZKI#BVS%mCm$Kp-CCTFOtb%uR&"!b/t#1rM-S/!P6!d4/^(%@ANlf"Q;:H%I"HC):K,D`N-(@[&kk%2"D<ka%=Xu2gE`'Y4BDIeHbC"n_Q;9NTbU5A_q3:3gI#N059c1Vs`1>g+VUr9DLV+Ld0AR\Aj;BhSbU?TV))\D;-tqc]26"g@M!+RZKsTU"%'dr.-KFs-feS3XILY"K$I(Hoblb?ahhHrL/IQNf5C_u8eXVe.o!>^4mAo`+C5B"@`LNOQn#p(rIK:fhur`>lc@guO@XQ4,qL(8`q%nuKpu\LZ"W;(c\REMo"5om:Wuh@):R_3/Sc&S0!XA375Z6;#SToe;'04_Q-/%uY8&ah8A3AJb-f3jl.c!$>*"3&99C%45Y2CJZhr%!OrZPMb]g4R&8NKK3'XlJt=GIDEq>@5dqQ>&kbK"^JmaDKLTf^]X0(i+H=V6"da+/fRU!plBsmKFrO+/)#F?+VT2m_fK$SJ&r%3I%J6qh`gi,k[qRQ,:@$-qo>dUS/1cAqeY]LN)"^*DE^VO+VIn*>'l)!jC'>gI&J1epk"H#6j[S5'WBl-IUB/%+uDf*$dd.0GPOOCCc%KjFcqE1f;b$BXVa=$ct7"c[3;HTW/9,$GZiF@NHe&T8W5h/TXk245JVHSc9P`2ESUKLkUCTMpT,:*&92Kj%F;$u'PcS7"LQ=rY.a%h9[9UBIq5ai=O0*/WkTd-?Ukc^beUP4cp:[hSNKLZ@Vkcc$:Y33);X=e&ao_URHeN(5c#%6g%!E!pCP&#H!4;)1')F]X9/V@i]p8%E*r:;=));#oEs@Wb[BWLGh@hCZrb%YS:Y(`#BL`."kf9\Zr[6]3=NS6J-h")=))0JfIKE/N-`GkK2Jfd8B7V&cj>8TJJgl:T_AGO%;o5"EfR;6An]d/GH-NlGV2"(SASWnKYka9!G8EFi"E)A?p3WJ0U1u=G$HOhd-DrUOMk\KP\i(O]Ce#N'_m:FGM7<\GFVs2P#bW1W%Zo?I^\su:W.n<MW(`OdW7FMo[/'im5JW6h+j`NqT%1L8Qpu#gBH5XjK,trhs0W\Q6:9#>k)AFcbN_KgcB5$H"WpYQamYEqFf"4>'%F`?iEqDPQ/L594RppG;oh??n(]OB+i3!_r?9nrGbBM5q*<l&#h&cd,=/Ypa=7#T5BnCG%2><&^X5n`$Jbp!X/$`%924:P%V<KY:u%UVR>S$V,M="1thVZf)>q*s,.c4cj'%<$O%#A4@+e&EIGr_)XoG)+rB1*Cuu\\!m,/i)P#aGHU6k[qDrGR%`+oM2\;Y8R>jHAXK=i%'snSk('O!N84%Rc4ahihp!$sKIa*-a!W9)H%@%X;oKmgjCLt2a`H]K4eml44;6?(!Ek%+GIF%LGo]e%X)5/iJ',$6K[q=I-78V[A%W.R+ILL6QHgYN@t[?D(.!\I*F-j@'<jaA22ci@H+j#.YCNg`eki&XT4Jeq^sjnL]Ce@&IWDYaQYH8c6?9KV()^btgP0YBG56St'i%?p/NrRt/Ee*6ORs#6EMs0cjF1d^,\l%R0RT<'ukb*7/2X4.C.,g?\k%7jN8nh`;M9!I`@D7,/=6luR,[Jh58r$;@cd]kpj[W5rfW%7@g<;'X9Lg`#6I2;(bHJpU?H*<*U+'-AgNnem83a.uJLsTY$q5/nta7Ah7tZSkTj-/Jaj/\s>rT%16%%+ea_Va/?0\WeClohuP"M%cjE*46Dq0g,3^$8D]%hbn,jmhJC=]m_@uQ9.a1.F4nMO0eB[gh`h6:cB4RdaRl/<2m0?<R=O$#nnCH,X=W2JR9o5\qXc>Imlaa+4%p5rO?<S/t@.7#e%Ab@Xk:+8&I[A^/W@$d'!(:_4(Do5+Em2a'IKf71C/sL(&hAle-`d!R!)(>W]$s2W6G4LY=1UcY(2r%OMhJ-AQ%oW%KY_"iLsa=-LS1<__<KL-'f!LY2=0\a!;EHSW^!`rGga,jDZ3+iRicTY.0+e`\,X<"\N>St&\JZL%1'l$!Ye*.0K",kOQiEFZb%/Sun$4.sMX8KFTI:iHNK[<0GB5n52F/=DYQ!o5*6R;?Q0k.jujS`($/!<CgB<W^6#'2mcJd'c^A?!#L&f<RI[63H'E7lom"K**B"%S[><"'2h4G`NT\fUm#t4"M.j>J^m*pC!rRW!GK]G1knPoJ!=ckqn]ls0Y"t=C!m19\ROY6CI,"9]Wr<m?k@It=r?l(OL#],IMhXm%>0s=s&nW`53`'@hnD4DP93@+=i0C^C<RjI^>(A^PAZ\cb=t$J;Tc@8KLtjoP_;mlA]i&N5(f_#`@fU.E6Y!4^,A2^pJ[VQe4SbG=%B*;%E"U%+abi1L\$c4@"&Zl%@>."K?6%?^a0TiQ3Z2i@Bp^6&Q:o$![#\tZ@E+G]"B.Sk0:cBbPQ$]t'N4cqOj,T@J=94'oMIH"_%g_o[REWuPL&,N'EMn'EnQWM8I"I0DA*-Z!,'tEK&+\mE8L>R:M8T-'m22,Zr/^#r>_G1adRL"Y3hs7"Q]a)/%lB\`QJ6bou(sX-n%o%$8f"@ce_2R2>9'c:UAA4IR'r`Y;sN`Ct05II<._[$Z3.bTk')1gGc@A>^^,7q1O9e$Y&(k[5IUgqbqS_ICD$BXf=h?\$OmqO&A%^-Fa%.RPrmp7aIaO@J=_2h`E02`-6dhK[GF(e,ke7oRd/ckKU#]SHX&$<iQk#_Kj`*OmOUgVO%MKtLRI]/GAE6'>)Y$5?n7>cQHi%/s)+,&dSZ35-W0Pb#KQ2R9,.@"`5qm*8G(@$1]W%1qd)!"q;%8PbW%sS9E8*f`bj+N:)I7qf^J*fdl/';ZDJ*3'sJ&Ll2VR_Zgds%g]`=i*+qZ9hihP$_`@=TO;FaQ:'UIti;..4PJHk?ZBN,R(iGP$_6`I*ALBjgY+LIGP?f;>C5u$n:Tbda`bJD+iVLB$m_o80cW1kV%"N0n"IQEq/aS""Mc:gc!a_T!m#OJ68(h[N>-[`eP,)DidMZoB,r&$/d/[<nmT#4AFBJ?ZqfHfUZamhno#FhV>kq;b--`if5<jpcn%0Ghh4a,1K_KdVg8*NPl%YBEk#;'SUDE^]0]ehZV2W!#9kH?ed-2$8FOL1NmBkXC>;O.]?;$huZT]O@\8Amf@g^olI<Be+6tm2/s7%)sW.u[&!FF``ZsL;Js<4OlVg1p`d0U\X5._`Vq4s>6>=WO]o!^8uVt_+\=9'IT;\;L:j[We.Rgs81gbH8SXM=B2XYPVITn:'@)g+%A_8F&jGu30Z2*Uc2Jg^IjNBIJJ8<6S1[KU,U:+Ubr<@!M*0PE;_au=E%ORem'<WK3[Un?#b9gq`Bp;RZ<8-PSG<ENB_Sbp-p1/,'%)Vf0d3$"(IQ46S,g=0jbcHTITj+/5lfoj)j,745ual.ub4"?AQLUAA]fZC'=gUP$UNWo,g(tI*OKgWcHYhD6W;3X@7DdMf9Gm??c%6`D'\;$p6-;]*$IPM^1Rb)Tl`U.-T`B/'3\M)&`a%qA<36-SAsiMeCc[u]DM'm^5iV'AD>"_`Ao5r+$\GT0gM`W5BOk-m>rI7##Q%TS\c!CnS5&QW+AB]V=b84:aML.V$f:ZFs[F`R$5IUL'54LBC7QnE</rCh`<J`O5C2(8Xsfm#Il%p07^l^g#DnQ\1pSWo8WERZ?QQ%_a[5Ln\dpi@"rd+q%4U5ZrU56*,D\K=#I=M']>dpd^uMjZF>QGbZ;G.?+XEmFEoT"K'Dh5\X9%Qi>EN(b/%A]g]CVHn#\Y>)QOEc%`XD.ElT2B!68]UCiRNdiC2;q/4t@j2$;Y!=/hQ,s4I>Xu/IFrdTcnU@G?U.BKq5q*AY*73dH;]_!>&`fl[W-(hL/GCQdC+\&Jl%s%+Q8W[CJ(oUb](rZJ<Ml@k4(n5G"E7QT$)u1cVTfk!2"MC#@(T\NM3qr:+9grW21riOMW4$">^3S'2'Y`%<VCqVBfJM1iR'\(^Lt@%H%P]<E[9a`Eu8bGc']N);2>dPjt[6p8M1@3L/i;\+0_jSnI^qR-p7XdWU.Fe;2>]U+]395frp6a,Np76QQ%chWn>)kcmUbl4>XFe%6j@76IAa3'[<>h6ZK4f,/InL5N\+[IX)c(T!ks3G;\cElC4T?A#BWKN%ZVl.*gU16)6F]=)oib$8%@X"a<rBYj:?>k]pb2?jA8O%%0"IN>aTV\ZO"e,Q_(aCQL&i-.HZ.gW%F#?WeAM#G)P7>96?mQ0l96KH#4fE7$LMP;o74,4>7"4rGdD+X#5dB;N$D^u[>mBK:mDsQ%a3`N#,Cp18@+$5)[NU<MTV[lDkNYr4WE,GhIE<(A")T(QL72QlSO2Uodal9*+8$as?ju+fK$NGU.3J_p?@0OAX_r?I:q++.Ln\!K%+>N-cC5S:R"<hE&;hh3h,R9B2:\nOWFKU(C)LYlG'-F$G5hBCYOY%=*9V$8;UgS2tWW/-i,FaD(DW;WTFH!AZ^Y>Ka*Q(W$V".+1%^4>#Ul[')i,;mKgb)IZKmKa"5?aM^_?t?&Qj!dg2AmF8YMRF]^f8cQ5H(@j9c_6X6R(XU+rpK1AnaW&k+iWm]E[6c6+*8R]47"lh%Worb4MQh!kQ,3"IG<_MRid4V<NXols)>q<<g2M^k#_1O"9WE]@GMObRT4T0"nZ5FF)*0245%WuWEo3.MW*npi<OC3-@[>;[%BNo,%:d2R*OBfupPhEcsCk4'Uo'A6V!0K(:!+^?A2o:.&k"CZ[3+MPR4_l9F-;QF^BbH\Y.[=#Sq`o2/jZV@-fFukPgH=<g"^q^56JT;q%fnKb?SumRh6GUF6fp[qK'qp+m0;`*<e6)?qWL7o3G#/m)C_)[cSsj&0V$k0riYG!t#Go:!53j$uBV*2%'/PcV$*TS$#,0B??^e%s%/[k"&?jEc@Mk.[9ccH2P2>.+TBck%8fV-iKKX:t%<[nk$aOIudG2(BdNi&::ZS4gm;P%u.C<:o7$B<4fKc<fO8?>9XNF@u,1pau2%f6isTajjc<fr^:2'A=n+J72"\HXR#YAVW/:372cGDmSEQ_1-kfkb0]?Dg2po7%Ja$lnQ07ribW'leu,m3$t;KI@ea)g,t+$3L4q&%:UumJ>@0(s+l5PN$A\@'N,k%1e>:;=%8'Q0Jh)&mRE3U4/Wm?"*K?U@=(<*9I&NcHniSM)KL8UB9Dn#.PcLV`;indnF1dR4HQpT<%X3P7=0[!HSd)lqHbs_"F_.Q?X-:q_^bIi7h7Abo4=[IPd2;#Rjk-41pD95YqXs$tD'.Oia]VAeVA/shnL#\1/\][\5SLZ_:QDd1#%%4)=bi9^n9n?`b.HskLr<(K4!/(@F6o^!UD!?%3gMR95Ub5!fVcc!?[fl4=)VI2KOj%[ghZEpLQAObN7X>uB?]&[kepClM]KIES9%DrfApDRkgc4Iu7)PR!X(9?864V_!iD7gfcOiu4B.Yba2,[l;nq::q0&%6Qus`6.@MX*c(P*-q.51"DE(P=TrA@k>>a4om7WJrRG/%fha9s[uWS$FBuYZ,[aU[mYf/,+JpZ#!Af/D.V?a7ZE\+CZ3d=uf"5su>0B+S328@Dq5GMn--J_i^h^6U-!r;XYY:>f^;c9iN),j2%gHiE]OC^;;j`&_mO_nnYE7e?HR5nlsMAEa.i<5B]QkTr^Gf4tpK!!*Xf%Mt9OZ&^/*-Y;FTJ^qV/*YI%i?V$LkDd(k7o2tk#nXI7%;t`,-<**a-IQX'Ia%BOZK/%%V.2P@43*P-8@U[BE2lPif_Id^V#Eb9T&0SUcT2UYZ;3Fules9?mg+4%]<$iZ'/OQ:@0ij*n?t7;r%D(1H*3Q[^Z2/@9.M:0gmPu4<F#$IQ?a'rA\3D"L/5YcRQaQ+,7#Um7A_a7AmZmM[(l3/bc'p?<aQ$'/bZ#`!j+';Mf[A6U@fe>6B%U=*T+)%[l<oLUR5C7'RG`&4W+AOQ"sg"i[p3Gn>#VF7iMDTTn>V\r+4'>l-%dmW:iJa5th`_P/Ec,d8s;jL-LX(L7lnYO4Qll.Li%1e#WA-.8#9L=mC?U?i-VCS^?Ah3>M.2'[OalO&>Q<:nIqFnB)0j@["^hn`hDl/)MJVLXS6*O:s!Fk7A.2(Qp:4P-#`?`;5FUZS:<%e:>C?`("ZKJ$PVH^;DY2`S;b,D%Oa-Qm(1peW%q<p,&Nj<b]qDXt/.T>]u.RaPX;%Tm*+>@a8K+/5;F?^)uFpc0jTa?iRm]^]#ao%6F,2H4$I(UP,"GR1^qp@+qI)&\ktHJFVqqIdMe)Q&AMeM//EW.mbcL^^C9$!#>RXK`rb#K!@uh_/\-tJ=rO3(KiR1=/8gYlf@1gp%#a*N+'nmQaFa`VGVOadm@Gr?n"!b$WTH.KElmBou@a,YeEbs$sJ2<b^Bb!O-cNSU>]eqDXV\B2OS$bNodSCO',9^o/;%s@:Md;<E%8p7j?e+9/:7(#\g_D(;(KG&(E5n0J-+!+nSAP\fRYf[`'"bh&SME**OX(XQ?#F.Dg&*pi^GF[/&re4`#+DMAn.t.p\Dq$olW3ZS,%%nmNCFTSs@@4-JUm1/KK0\F$h',+K9Z8K'!N9N*A+Dn9!YBLLc#g!m?3f/]F2B;5L1P_"<JKrMq'Ln1B1aBoX9H72WD%'R-SH`D\%//kJqrqCupH;s]Sp&.na%bjfqeM:';>4-6^S\hm"cjK`".SW-79u,5([-kSuLnf>5D4*r<@?0:mB.9$<R]W3k:QQj*/s`&#bK@QD%HH>MQ&QI&\_u&5(`iYu@=]=gm]r:2UpDh_rr1"hMHWeNdV9S7e*5C5J^Tmqg3HX&b[j*s)#V7BK[,'b+GWW`]q$>0e`c4,+p&kUN%hO8q$EgT!r)8G@F$bVBPCC7_o&n4XGA;hN*7oG1EnQY@BU+]E7i2/m>@4Qq&9AC;%7Qj!$gUrh$ShGHA9U7c[kHTF=a-Dl+dqME`%:5YA-(``/;Pit+M;K<cJSlJlkHoT*Kj0fZ3B=pDL'4VqUiAi3r[*K));G)cDH:I@YArW>3a4a]fJgo)2d1:.Co&b<tZsZMo:!)p^%\duoO.2aluMb_NKLLeZZHo*.ia)YbH#D_H:0eRad'N/d_5+/)0<816qCc1Yl2nsXJ\pb'rQVD)@<%9DKfITjGrN'>(!"(RJ\.WhE%G$"bb3:`]X2HT87V'$CmT1pB:K&P)UcPe1*DmM8?[)?QWWWDYWbZ'akHo1pV.YO7N:!TmlC,&i4l?iVQ,"YD@RXk++NnsZWj1&0Q%KJ#^<Y3ad'`HmKIZG&3n?!AXIO]Qi(Qh5:D#A5>t+aJs(M.s0!1oa6h&5I_`b$OTIh4+"E5F%IcI[at=n+LMnH?bo)kuF=nDnI]%%^/2<5AbAu9$0\_+j8*YS4-5[9q"=q3nEjc?EsFgoVm$RJAO2NYh^+X5FkTee`f2a`a%88[_nbkK#EruT/=U:qH%ie;;"m]m\"]b5%b0k<86n7OL;7mM(V3Y6$<*E>?.BIUdG^k-o4.#%:?Uo[b+O-X9MtNo?_E\C1!c4HKKL&d+,aUcU/TtN`0PkfEnWMTkXT+J&W$.A+%gmlAaLCP3?#sj.Lk8JY+d'41DoL=(t)luM::DmjWLl4M.F?"LnV5(O2fOriW*ZWFA4Qg.]JiCC1(_5T\nmO,M9CcIj/Pcqn?$"D,%jZ'8K'u<su-qDh/o;5,L.4u[1*$q,B_l<Kc&fpumEX_/.Bj7Aej:!ES#cYEU"!#=#GljPT+*&jjCfZ`5Z,AW%@#Q>]Eb&`XE3q36%(=$mC;]$:e482I0,P'nDVK]k<.V^^IYudS`&1<=G7V<g)'Nq6k'&=rtH4&iuGUG3P3_p\]klAB[U^0[[MhFQth1cFOALWp3&7>st%8r!jt)P?S&`Mj?;SYtra0@f0,g)Bb5]9PJ[)/FCbUjI[![R@VblOMn5N;1W9=b:U4ef2KFM>G*-.7&\oef?O4;L\u)X?U7FAc5Kc%)[4)C<7.V?<5,Sb+*W3RF9i#(ab_"C$jDVh!jRJ[[mWK_mr`*hNhm(hNGFK+jcE=J;Wui^_=i<1VCr6CniF5t63T?NUYukJb]>%+%c%WF*i%S=haq@CnD'im,Na%V87fbfZI_k6We\;8Wh]JA6%rm$'BqXQ4QWbK>%bj1N:\lQA:K"L,C%%maP]`8if4/`.0.Vc/2H=C2%TGbEcU;E"7(\X*%:"ESO/W*aZ(hILSiK-><Jn:U.?l:L6!hi=+2DdnW!^Z').Q?E/-M9m1MQ,q8hn[aL5M<cQ`gXe^p!II`F-N6)%@hG?@j5U^@1T$tWeQ?[uXZe5B@?-ZF<WmT<9cGFO(/tSE##0286g39@C</]Z%VA!RA,J6AX\95kCZ%$^[Df'\)4?>9'!t\aRR*.-%?fa@R_%&A8Vk;KIX^H]LPU[gmBh-`;l-@.ReDN\H_2)\._@-#N6*+tBfnCPq3#*CbA,sg.+H9h7dGDVJL[qDsS?$R`+s4Yc>_I==%lo*3^GiUfrs+K>"j]@8p;Ii.R^V2A:!DCC"C.4p%`7W5;_mXO-gH_\LF^&C?[cYBpCZgR9!Mh/AMqKM]S!3ZL+Pb4uI'h^XTM#n6%DuT@YLWB;H3uH'QM8W9D6ki+3O'k"%2OK8u#o$e=Pe"FppKo7R.cK2)K(fBX]\q?37@Ra:qqgKN_*`dU(_hcoG->?'SCL`([`8b6%4oVnLh;]30^bcb-b'Ja-_g+M;rPXQFRWc/Jf)pW<;#!8F^W"3N)M-]_g7VmeGQAb_.&3K>'"o%V&nDot;Bg,tSVOVcPlpJsK[b$]%0#ZB.3/fH+KOE74Af]%Jdf-tr>9(!Rq_/8daoZ2Z+P&iH7e<)"1P8W9KXR]dZ(rYs('Vr*?kJOP:]s%(X:Bu*%UR!qOY2\(Tuc#N%Vi7D+EDYJB"+fIQ+<i=tS(Vpb6"?-%gf<`!%LiRRV7&DpP_GlbJoa`BV/&7m#R;fL_k>8CZr+;L\qkFJEA]]i'B0_dW2:s0)(p."%6.:aVHls;`R,65a8;_PI-lWl%<!#t*II*&a6?5mMn/cmlD/(L:cp0?WG/6.umgLIWhK8oj[(h],jI@UT0;;MRpIH866trKbM6n2Q%3!r`&#M'OmDPEpL2oe%7T@,u!Tp:?R@6-MFNfr-N-G4>S73u?hRnu917HdG;$==%cE9u)?!5$hEPfD9b8"E76O9U;)0cr!<-Dcg/%Oqlr/."E1%AR]"d9>!X*d84r6ct4FA`VJVoC+Y.!JcS-Abq+WrC,tQf]Hn!V:dJ78Pisf!;j54`7f0cS95h>UM#oh%2(![1*/t;u%Ka]_`Oq>Dm/VMD*C0f:sp6L`";`klQqcM$!Gr>!7["pJ*_*C/?qP!*1Quq2_O`pG?Fq`[:EId)aFRF`u\`?"BE'kit]AFo*Eu;V3%Bm'\HDSgqp3<Ih<8i1Z#gTrq)N9u83)Ff]2O"n#C29eMpn:iOELh4YX&4O23rHt3#hpDOJ9T9gB&KWD9j^fsob$BhIC<Y>TKj=S6%D/V"LRplp&?j+fYVf?D_>dZKmLNpaL6fR6ZNaOZ23hB@a5lj9g#25F4d6%\Hgg.m0noQ&ar.n!k8<l!p<J?iO+G\.98A?.XYMha1%d_WROU0#LfN2e7Z&E9mi4!QJo&-[UeIUOM)RD4^-`6s0$6s8a#*(/D!aNL/$49QR""aeD]dIKe%pQkZAo%H.]^kfc/F@:e:4/=](%br[3`3!\V!'TXq-4f(E>K8FAiZPqMb2U<Vr+lu0EB1bIjJV$;E211$+L\%KlX-eG7acXti+4A0SVW6lh'RSGV-8k`q.1P1/CO<@i%>0F`J4,Nu$,d]"h\\t"]*/W>]XndE=SOnC>F#m(W%F])c3s`-#Y(IgKfM^db\@.I9)O0#un-*-;mo][a34#En2@]OM>*@`EE^@q1%L4c:+@K(i;4(?4KK[<TC=,IJ_ES3A!]Ce5R=PdpF+lBQ>Q&=daNOc'sEVA_^6iph\@eqkpT;^p4,+,+0_7ttnFshi2YRMBe$-e[:%-C9eTHO-]X77m%IBkE$AK@<&*b@XNtq%4@06L0!CNU*bd%YI7m0b,UDkRF6s8$Y1tNMA?F[EB_"$A)CN<<k[XXC>8]+PI=bFBNKP%bngW'+E:q2dnrsqf<ht#a#'SgZn^pZ7l`qT#WrUKQL(`m@9pU$[?gt*geJ]+38EC&N=[Lr`"JfB&\/IA%**ZBi-s9T`#2'.-.3!;%10^eb90qb]#OeQ%B6>fBiYCL66Q(*!.@Q8l%\op^pdW:WNR1BtXN!T"S]M-`9MleASeP!OZ4+9(OqG\O#iOCmlKKuF$H]ZYUpHk^%G'qO`V@1H'Kr)Q"i22JsL_qFm,UYWVe<@JoZA<_fHHk8d<.@F)@-Lk'@Gocu*$sEaOcp4>(t;#kc)5mnC<q:QpC=QM?u]`.VPX>T%[(dT#af-N\MU#O-%:".nnZ!b[8.D?0/J+]QpfEk+>!g+]dk[\kiQ4]n!jGh+-o27X07:;b7Llk=]1rff2X!!G:b`C4L*fKs$uf1g%oO8cHLq@DCirI-;l8DfN"*Xg7#<:l+OugbUTA],P"+d2JHF4<?_4q>H'*45rpsol+#f)n4KeVL(oI`'8=usVS2?FdspM)"-U0_FY%O[1tB=#XkAi/hp0WL\QT7>H+>083`PWNSVT"Iq3T7dYl;a2FL9$&Gk'GFm1<oq"18blg)6*3nYtq[aHN-MX$b+r^l2Cd&^q*Q:[F%!6/h'GQ`:k42JB?a=sq64R7-!-Qk5&UB*HmP91u-'YGT5U_jI.Q$O[0!ofoPjiE_hnDsJLU&4pA2lNR''5XPh/HtpRC9*YPa)s>3%=pd73=8UcNn;[S%M5B,jDQ-_F#^nMIgkIP'Fg"+6-O`#TWp>B2d0bH,5[?1EZ%11\hPmcA;-St_[(@Bt>ehXL_k?,n]sYD]JESeK%;0)b(%;N*/!rT#bPM6HZ"M%NZJRU^A\U^<j"qYhViS>EUp&`JNc(YmU,DuR'.pA-@$seW<`*gB#X"^8(MkT/r/RgI0JH?IA`Sc*3%#;V2<8)a6_k9-sJ<_=q<@.GO1N2jb!(che[m)<K@0=Dn>A-ai*dq0po!(>52a^jm[Bj*5/1(;fG5XOBP2AnW9"Y1pPmq<+VPJMUo%,1pGqHp7n)#['oOQb`*$1O+r6aYj5RplZ:@Cbl?TZd%DW1a\V!L^]@_$ogQ\!g1G5+C^LDm2dq+Aep$^oCQiR+=\!p5SaII^l*SK%P<l^A9nnsd*AQ&;,dPYp05s.Sd=C^XcD],U-U!sSBYXrm>95I:]V2#G7Y;,lb\-uRj=1/Mpt%up"uK`O1TMZE^tCAA"5\u:X+;I^%6sUg6K/^_0@Pr\g?)(GQD^b%#Ai4fQr,'qun."X$@Po82Mt=L05VX@N=q)P#lE+5!JHM>a2]D1,B@U\2J^:K#X24OPL-)^[&8$R^%-Wgh,+F,J<6c[50PL\#gP.,0`!#PsF*p?%j=KrNMW9>2mUh3I6oo[eO2'dH']-3Dj";JJA@mr)X)^qSC;nE'#/\P#nU$JH8.s=9-%4t<u[&@%"oquT]Jh9kJ=/Vah1[8Y8B8">cLkOC`00g<&dH5pg&_kH6$#\;BO)\UekiQsYapVh+8/Hs]A_kB#2;bgpaoGk)B%#:FX%,7qbdLM1@A_kH7lA7@Oj3$mF]iQrfEG*<jT4U,H#L-siq5[62e!*Ym;@Q:#(7dL=%/THB!2SE4O@Q/t4l+Sm\*)P".[2]8+gA'HD%kYZ"ib9>r$:*>i)B\@R>jUeAG5dt2`oGgAO9SX*nV*6gYHIb^-FMJjX+uUI;s"iE')s@JDYoSX)"uRIkQC.gqELU4aJ=3bH+*;6[%FF:/G1EMXpEL[8_K8^K(!Cr4b-=ECIV>C\>!5O.rNm3MH".*5Y)\4nkbZDWsGj'*(U5NSg18icLkU[a!B'TKH(LQeBlbO+=<gd)$%S`*&$p!BrU,M#5K9e^BI?o5/4#kJ'2Z%La@*=Urk8r*?Fb`#Kt!VA*Y;+^nT&$qU?DZ9M4^Ad/qg]Tj(W*<_"R1;.$F,piE4(85E%fDQ&lH.(4-%H!Y2D5Ap'EUkj.,<]'/&c5H9&m(^q9epl8+1DQTUgTT`_SZep;r(qkBL[n#YFP47JL!_e#5^u/HhpI*3LP*ko(Wsg%7\34HeE7t$56Ucqj<Et;*C,:#_ZXP_IEH_[PkDp8BsEA9(qR@UTmM!2AV#"SFo[VN&AsC/]&U4qXN5STk:@/"ERa\2&%68,4F]Ar%1LFF9GduTnUd6h0=O74CfRcT<$*9"L)&V`3qGDh"VAFf]Rt:,kMDXQpKeQgJQ!7'h`,)>BFEVC<0g`u[lkt&3L3O&%hLoGO25f\]%bF+Jp2>_)j.:+^9]Xug+G<9d%oi'ZB5V&]4SXqsN:"O1IMjCG&\D:?rD[C9Gn#;sVZ%a(M\n9;.WG5B';A^ZA(4fXq$cMjbX@49X%,m@'Vj+Ys.8X%ClQuj6"Yt)kq*,Jqn-G"L6[r!6s\&8/;*,:_F@6Ql+/_X$;3a+6'Yutkl[WNjPiGIB[;l8Sj@Ull\0ha_WV[-lm%l]iU&@1DA*d";DDg4CC8)"E;16k<U9cH+t8fJ=C*]Pc"lC-_aWPuFC]Sbu:%5S-4k$<i+^[#Lls$61V`U.O[=]Rb26CC3DD0*7,n%.7#,(B[MQ*!A,C.:JM9je7p0^E3F*$X/^n;)@]g_))XCUaf.RMDKIL/"*"rX$KO_,TZ\:VbGeoY(aCDl",g+\Q=cL*A]s3kL6g!&%M@`/\Mc)r59-d(e>TuaM]L7q(JB;I;#>@UN3+*q-AABTjFMK;)nc9EG+sTSAU-iPB`)AN9Q.(+Y/:XE^@ZKLUM,D;Pr&!iP;_J6:%6`phiWKMled\P6j*5_;82R_Mj.)lE.H82(ikl>l41H]uIr3%GTbSAfcYTllXkk-:l;=XX<*m<X>M:N;J"'QV2D=-=5E<<M!VMT#s%Fd7=YYi%KYA])R5%((@m6;;3+J"W*JE_oc0_N(uU<\1GXULY<A(.7CZAC^9WCO,6;bCQbpj_pshkoB[HI:89.?*4e#OGgK`gSSS'%)\-(DPb#7D=%`etDIV>#4:RhBic/<X4-c+sS],j[aiYQ,#-Y,kYZa;TUi5<,!SKKb(qKF#hQ^e<o;&$n&:b5/&/p'/DC=T$HP($0%EW&S$+%(q7,h]iacpG+(TaPam#Z4od8i7'628"K2QL6KPN8&M2j5'a=X1RhELn#L#ZDdk[U8QiITmr\_.TTYHT]jDW*-.0bR,s^Q%>+C'^M![f8_bi\B-N^,s3G!BQ>k6DdXN4odVq]8n3Xr;lA+h'jFUSp\b8'?-p+#3GP%M$W?fZQ,l;3I2G<&2>eP20iP557<W*nE,%9RFoS*%A#SMnGS+(*LY/ds+6aVjabrMoPhXB#]'B3HjY(rW\-`1DFt,Z,#+QDC/d4F'Fs:3Ok;:-RQ:*V4L8J2]]l8bKIr]Z$n-)%r*[Z.Zg?0AhT9QnrP<ccIF1eX\>n;H'$t\\@Ce2'0i^(!m5-\t5YAJtjtX4Tl1.Fn82aIOZK7@1J0k&,VV=8N:)#DdbadZQR"E!,%rjXWVh*4%,7TF-P,?!A>.R#T:VM>)7Lm[D.\,5g24]$Gs&5C6%#tZo"JWV1G;V77OR-O:JL`-T*;l6RuYMW_4q&ae4;]b)%npSn^%"N@O@2%hHMoZpIaRi%!e&MT/k%QI6='$me=hhhm*11g!9Daun5q4L%Tn+IU2-h,20H]Y3=$i\h,8YZ%L1XR19/_Jk2k0`\NQH7p!%L3\WA9+-&#"]Z#m$^Yn;;AR<n+'qAa=TY`,ohAbkW!E^u'dpS\*;=iH3,+-b^:[A._X#3>i`5h<K=k9NPM:ObTi?`?Jh87F)3Y:E%%]n"@KB89MjO!.Sm3-DKjN6U/E3^28nBHE]<*@fYY7ZU:De*%S0_,]-lLX`;A%c4g@8rK6C+4If(?c_#b8rHAJaVV"YjdIE,W:g;%)&j/dB09Yo']Ggg<*@`W/Z`eHA#t@I)-0m!0NMHHeKj"q.TqA]Pff6`N&kiE.3`Jm;i80+jqS.hAW<#D,JpgeCUuVs(b.%9eht=F%,aDob8@?d]JlZWqABEcuf-j`u+d;(,;6.gZ(jZ$.^i21OH/Ob&:c"D:+r`oV+<Xg=7OdcZEIHr9\NM,op'")QoFD7\Z+qalg3Z93%kFD(uR-5-_4mnftc^]Cn1"8D9-+NEm]JC`Hm;3[YV<`!`k)@a:c"$QIO@B7^8`+6aG"d`&OTTHeOWrtjj6W,?>esrB7-AQ4bW=G@%4X@f96sRTa@ANWres3t[^\Q>Y:jDc!*C@XI?bTgZckSBNBL`5nh@A<"lsJ-g1N<4bfRM5H,`aRqetlf/L(DR@JRrdo%*JuY*JlXK%ZJ][Xr[uXFr!f53CeW;b&GK>udoYTu*dWAnI)3ARO7\--8NKFT8<c,7pKCb:.6+Ak+c$d6MBQ6n>_Kj<%/HHoO95@9`lf9G?)q!O%iN6`Dq--7N?_qWiOJ*CD%0akO-<;2&HG4IRe*4-%K>3RV$7FooDa@jb=GU=GSMKad*So.1.0k@!Hs@Kf`)+!<Wa/Is[(D<9gmLR7%]ToJn/T8ei"JuTo8`V*Qk`'mg8gN[l-K&Y6#HF?d8$klV,8\EOG:LMOE[3i1ME-5"P!\`6r?neu[G&?Z,B8?tKn&)#\P0#/;5RGJ%fH.4hbLnSGYAfcu>>MjEl(&2ag,#jbj$m$j*Tak,HpdAXfiCmZ[TZ;7S4*O.QTW21>VlMAI%8`\/g\Z.^']<*XTIIBLaYnd_-[G#%]^jH;DR/1`>\Ff%O\URH7NFde@IX'5i%+4FQdZMh8G/_gZ+2&$UKQlGg\<+t"gta*q/aed6td.2-k!_/8O=nX*)VQ*&L(]FcSVUT%,E?*8(L0$TbJ@Nn5#$",iR1laMZcM`U\m1$5#s)8S<LQ/lYld&m9uS+@K>Km6o%6kn13ZLd&H5bH./"%qdWBHZR0&d4l\=$Ir(f@%F09a<PiV1fP!@sU4ATIC,Ya[*<0PAXamBe/hesR=hqdX"fC*ob+4@TtWDm3,nZ3YX2f*t%[],k-[n;2,VAFf]'B-bah-6/X'^JlR%W.pBIQIK-/Q%40"b]):SKC(^Jh<Va!qA(Ts#q+N(eAYT\.<u4u(=1lKis>Mg%0o`b]Ukng6q?q+`\ug98;iJgZ(ZLn,uPDDF8bG9%`K<I_OJ)*Qf]5j*[7(3,>qOXCV6BPd,aCnp@/b=MJ!@_n%Wl=!8sCn`PqYO=$?O3P[d?$amV4b^.s8t+p1d7no3#tgVARHS8NB]G%GgGf2%!5q\^?&A4]UJ)\&Q2Q;5?f9"G+H;l%IDlgiQ7_<Na.f#.Ouq?Y2nN![!Y"sJ!hqs#a4Fdd%pOl%5tdjdOS%lH2ZI8gB`,"%nU;)R^gIeLVOpK'^s<Q*</L`gZrf414E5Pe(eo=A,nX&B53c]W97-4S::R6NPVV=8kO<KX(lZ41,IeX!=MdY5@Zi<^$CKiRa@$XI%PG.47M51RX*0J.X"s0[+/poK5moH^$^kuh<EB9Cc^6,Ya1N\B91oY8n:sqPc@3!1$fp8CL:tht;-G(d_KJm\)fhWg6<;,ln>#rNi%?-ffJqE>I(BOfJkPa(hscu7qCGBrH;]ZhK]^?G/.Xq6ir=jArKW+-X4c1Yg/kQ'<C(N83=38`%*4!ZMIAcl&QBjC:Bm^rTB*pCmE%Cr+TjJAWho&1<f%199.5hgfpW?gqZ>-a3l.%cX/hW&XCEZ8[TnEhg05;]2m:<)DnM4(J3^lMD+(pP[(IX1S,pXr_b1O0mSS17=lI%=Gia$)F"&`l$Q9DT"4$eJ9RJ\(af-Vo31]!.J7Edc?LCmYjapsE^t3#n%*$)>h4-]$#RGsIB<,scPN0WM4Gu_JS6:"X>u%MG\hB#%.diM%knO%IVt@[]'>AQZ(XYp(:U/*cqWUOea30GE#MI%h5rr_6;q7J71^2Oa#!q"d/T%)Pg)=M>=lfVb;)^S<&CN$(Si;qo9W"`J%lF,YmVk25U%Wn&;D;o-f5XZ*U%)0h&6\.F1@iCkKO,^u4Z_;&+_tO[6@h=!_dC.s=ROQt=pcq3ED8EWe2R]Hu%JG'O6<u:\Ub.UZ%VFauGPWE[(lRLa$gC?YN%,[p39aPhD4)guE`!&S.nG<cd!m/r+;m7^UC%J3("L55c'FK*IZmi45q]Tm9iTkfd/T@W?e<Z#9Y9eRd%RI42u<2/?%DI\:nm3lL78%m;A<.]j"e^q+7GbDrrLllHI<p5:@$6FHT5%8mBco?P,jt<ABKbQqD`IWH-m]YkS2o6!M$?RdW(1JeT%Vn8XB8fTqI#?n4'_dncp8Y@9247.$.&SF+T28Xrs%Il5`I.2:,f`(l=`?S,'\":M&@=,MXQiqe63hlt,&9I>$CnV)_^^3n/rCi-c%I7=`HdT`Q'"OIm0+O"9GjR`^blX<V9+B"$g8e4NN3C-gW6)t.)`K6Y=UVV+jQd__o3Vis/,J4&E&;6(Q\sslp+6s_p[%7c`1I8[I%@&lU*i6aPg3#7,(E2lq;k^&,UOm!D/,:T@haAN/Ki%$tFJ<U9NM!u*Q-")Uoco>r7R$%)se'O(%"L2/>-TQaALI[DWl1CD^CQf$k%K<PtO3?ncd@>H`62/V6M,p#fC:`p'LP1`_)j-Gh7/K_6AA@Q$r)2UFF<2[ke#`"0+1S05<cp<Rj4I*YC5T:1*:5^Ws.3R5--_PIk%-<!9l[,U_X:]lKkD57AA(7LEhd<f+D#Bn8_OW7K52E<c/ItXTNJ/lj3%gkH21r^:&5j/jpl%.mXIA@)OCFSIu+B(Y'#EGSV8.Pi+%WXF+q<g)d5*XJOi-p8+ZdBl6$f.:,FNf+3i+Hga!-p8,\2(+170ohe9*V$a$o<="NkMX;jSfBf,pFKRkDiRK979h$W"2`*`3lkVr%KKLocHkkDsZLsdK@nh'@"",[77c;'oIaE6\p`+-0+#n-WI_oE56V_r@K!KLFF1_`G\O6^.6eZ;2nmNP.cW_RS5_B<9S>Im.d-=f+%e!s6#-G\4+63Wee4/E!j9:HTGk#*K,VHJ)Kie+,e/gg]pdn0b3_'9P*L+e?JkI!U/VIhe]KHN@f^*#`EIWJ,7#3uG`&ttT$N/9fG%9g^;j5m5V'KF"BL1`6lrLJ]7WH4u-c\[UK"dZ0Ot:n3tF"B)<.,*:f\6m/$O&qP/5Jd<NR]NCEIqa^kn4`?+G$4,tG7OiL"6<0t7%\.PU_=lIGNL_fHos8)`_Rtp=Aa6UA+^\j7Y8^l"8W4m`TX9&M(Z@$opmdVqh]D'iWIt)\BcZf#epj)Q.n%Q>Y=M4Iqs*f=fiUNPS%=FBf7ea78EZg+U[Y&E4Rlnf[2nQLm(5?1O=e&Bmlfe@8"ON@J)rZC#s?[Zu1&7#."C@ThdpGRC3P+bk^`@'F9c.1&kd#a@ajpqS4%cf`(?G5(F.s81d?qd!l-W:YL<,ZWa7Nd:Y(ID5\";qHq7dGJ<ZhllR:Z5rm@gJ0Ga$!HsXeGC-GQ5;%RQR<W]03hnQO?!`S?iH&2%TW)MNn=CBc^i4H5ZF9hj'tG^\<Y!f"a<(!>?iEc]djb;^2Quntpn`]c9LXP<$T&buV@@*?/]6a.aee-i90OI4C![-[WXD7c'U^ub%".VUu$i#.)P=DtBdodI&aM^VCKgIr;r0s>ZIJl*28ic+?E)6tb9gRr8R96,J"*#?M@Z2MNh?D4PW3hLG>?obkM?RkaQ`)SPe&i/m%,70&bODOt,>X<'fgdQ]sTc8[[kKE1!dXQOh'aDPcSGb*@R8fDhAb/f#l0#+:h$5B"?b(]kQ[1SMJp347\<Le!rPS=*X;&Ejd9cNR%1K>:R<7U"$p$O.[8ak(8got,;ORLaEccYFc\pAV2^QW^/,#(.Dq\R/"H[kc.94b(l8]c81nP44`L$kT9IK&!W_kRp@Y;/QW`Spjp%f+4$+I$'GTgVJP-qDr0l`5T?DX6YQ,>ujNjd]lQZbbR$!+qH0?M7$G']a43c4p,lt^g8r<eXq><rum]en']U=G-ubtg["_Z9,0I9%6(-7F._GKRlhg"'`U7`N]",D!rP_),Q]Y)C]D=]^[+2/pj\AY'Isec@h*"nGZDDU*a.Fs_%#Y#N!egI(6M^C)TL7fRA>\P9jMsZ@%UL5GW-(*TH^CNR.o'4,`jEVBrIYe3pS,3^,miFeVFee#D'&n#4"EjP0qTI^NQT@0g_TMI^&An=^dq'tpPg\6(ogeH"^`8:4`#(*J%Y23Dj4cRWqTh4b'ifK?cCG,PL;F`5K;P..1W)t7FZ2q5\cPFZ>ZP`[D=jgn/U[I1cq>";#s.:(qVT\?-e85O?_UCXY!4R9argt9U%mq9J`]MrikFW:/HM/ncE[Cc=J[m>YZSl]FEc#rG[W&gjM]o-%f5g]Z%WM!puGRr:1>r$\&1]XC/dkdYmZdpNc3kdMIr9+,#eXo>=%R"I^HB-7F5Q``cUN#]V>e/ZM#U9QIn<Qpu<13)[i^r]XQ)%^>"4Ycm&iAG"Kh>HqQY9(SD4gSLnb/jp8GdBJc1.;3FZ$^sg%@gE\%Au;;tX.3dd+'f)9J=KG>AC]5dS,MHV3J)%H+G&>*k:m(ordKtm:aaV&E]Y0>:9Q"iJ2k5')*iYWMAEoEnu&uO?<t<q*;_>]S-YAD%3W9Xio2"9Bjn95Z2ZWH!89+\e8j!)YnD2m7rbrf[]t&I%W]p=Y=8KZ+3PA_5I_<D0]6a7qjLb#AYJ/guh(1a>GP1+C(Q4p5HK8/.%qtlIsHhIA6USOq0b[j#6e\T4+^Bh5proW&0"Xg^@o(r@JJQ)P@:um)1=9c%9q"F"Oj6kn&J*f]:6TZ(PY28Oe(@SGF5MTKE43h:<%*-,:I4T===lJ]u3^qP;S+R&Rm_u74/_sV7W>4uS0s4-]!iJO-"H/]ju0G4:9^,3M0p+(Q0RpNif`a*[llb5Wh_(<=-"5Q0+S,S>b%=5Q.Fnpdk1MRB0&6.ig+7AR=5elR'F^3]fbD#%04po@J'hnRi=p.#,\s)[q+>B)LAU?E9_45`7rH%UeE_@(o[+<aEO6MPGcRIC&5%mrP,]^=WmYY,\P&X3Fslc<YeaDa\\JR`Go,&X!*=I!C78Vm"rb]^'bcK@H(`Vn;.Ys$j&Y5BdXI5aU7q*ZOo*ro`[@(P/*]Of-4\%^TQj]%iXD`VZ45RGaE7ZhT0F*FS/a7B2CFTqS+(5:X:H=>9`4gq<#D7>6ZmhAWI=5VsCq.Hb+ofg*P;SLZ>?,[RZ6h]frcFO1)er%9\>&d.(0&dX(tUG=t[SOY5[<Hkd1:=:$UC'^O2bqGrP1$d&6oUSEtan*6pIFnEL5.%Nr$^a74YL/rn;rp4(:crr56[NF2_b5?Jj(%QcYojE-Lo'4"m2FEdcID"$hMoOLNqnb3\R]s)$m[m5Ys%?eB7sp&(`;H2VZb-OQeG^)+4]cG/gchu8jCP%aVt?^=^WeGZB&rVf`M%X/hQdh1aP1[`r%'p%'+N#!95"Du92h0]C2+XneId"-`fFIRh`Qopa\+oD@#(IpEE^=nU[D_IN!#l5#VYDW_UU3KM!\iIE=t\r=W7%$%.,L3m[cQBD5]4E=>?tD>2.iqX0ukZ@%+Nlhat;IX`e_HImCj\9b2AT/EnU`A[LWj9mr"h-/j"nfa-ZW:+d:5((u],2^3T`OV1U%?n/QffsZ$;'t6SbdAq%/k.L`np&Z'ZT!`)#XaQQqs'QDVD-oZ@NEXV0Db8,$X2WbK*BC(M)R]FVC40H(s*<p7]=iR']"WO$Hi#2T%Dkjb`b6U`.qb,hle^O!]X5C>!KBF&]h.,W?0-!'8bO'Y(rhoJ^KHX:Z4D&`Drd]!(:UN70kH.Nan)e_o^0do!Mk'S6^M<EXFHSP>%5Ic!KHN@rUrUM&G`c%5NU\Tk;?bfNf\9k7K2;[WEpU-0DhoNi5'<qu4R8*!h32Z^U]6T%2\\>ogBM$&8DK42^cum+1[Jp0p+;&cp%X#FGKn>i?p3.*Z0s)H3p^_D*C1OIGdM4\X+5M$C*qXt<$kO^?CiIRkK*T\FfdHZWnI>`qQeBDS<2Y6\=\dHIm)+0kOV4506\J%7[%k-CGEiQA;E*f=/ZmdFJb@2&(L$`@%/!Nm=u>XQ3[Y`]7qf#D*%O.YiXJ.^tH97C<Nm=V-4N,ALbI(f4Fla[P24.b;,hMTgC[b-D@%o<!e'G<"S`GSjfWjo[&7`b]6]'_eOqI;1O^65iVr@!2G=9E"9upSrZq%o:aG--IiSrmaj3Z7mlbY5h9!1MA>ihce@f!"KJ_YXD.&%@BGPGq4^8rd0H:Z^Wfaoc5:fsnl8sP%>qBps6CIT`:`uu,HU@kch70H;@5M]o!?>KHQR]^0$iC\3Y^p$IV8AWO,Y;GbC$gHoq/TB%20=RN4kr2sHO0S%X\+(m6;2aZjOlt71]@+V#b`!!6(^^O[GQ[G[EO\9T=(3825;e$!>_t62tcA"X1+Y#IqnQ$'&JOBq!.IcT@dT)%U]<DD3)=t8oa!CdFT!cZq1;Y>8qm>`D;RM4-?ZIH?QHjfBbdRkTc7BXFh5lZ\*7H>9c1XhSSu>g]?d.E;^eF_=/3jEMH62=D0im%%+g/&)r:PB4`m3Aop:)!oe*?/[J%,>PX5155emP\`)_76.\uEg@M`-nLHrm,`aJNa6f<sA8Q'I!uo<5b2WR][Uqg\6eNHfi"HM`Y%%:$_U'7AMc(qI8)DAZ5=m"_M54.n.q?5i!AYb:eA%+0V<>mN+t+lBAj6^Ys[o.@-mn,!`:1>._dmas\hJ*bXsk^EnC,!n5Q%"bg_e%E0pdEPiXK.B83%DT9p<DL@0o,-V15%Wu&30mqV^9!'V"c;lQ?kmKG@ZROf&Gc-b(VC:ipFD]"PBPZ5qF1H=L\=dt\)G>Da-4u_o*%>uJtj-#L;jAP6l;3Tq.16/Q>(64L>:cV<*-0Z2U8?W%n!SLE9>"!`EFg:hmE'jd.>j%ahRpnJkJ+s;_+,4@enUU%m'DG*P`E8u=6%1q1`::JH4VZN>e+f?VWF00Y5)ri.iI40XTL)HFQhH4QTt,4jL7b=fOk\'N$1DJNY74UBd2j%NA[gDT_hOltf51;3-d94"lWM]Y'L%-=_+h2lWMB)jqp`Xd'feGHJ7FrD[IUhE9;gO77;>`9Oh^kPFX^iT*FsIi1R3]2dnRlCfR%C>&#^"Z*&G0+TuF@ZoL$4>i!m$>nXM%2bSX;jq7LhG[G;qS7IO9f;PjZBEMke9E(0*4hXj6*the@fqne=b?M\E!<i*mqcE0Y?nRH(oc;Is@?[VCmjfE<R+(7'oHt"0.VSE]%hiMSOBHe[*piCR^X4K1Db\WR**1=h7IpT/,XXmXhK-&P?M*lpYQ^\&s$8lK2/=d^7^+815s8G5cU8<BpTn?eeY2@e2+n(e:<e;Vo%l`6q]kI2XZ,dfBFD^KTi)Q]^QYgE)tp%&#:$Z46PV3L;C>jJ-`1Yd1WF)JWR87D&*^9CMaa3R/#]btCqH+??X4Zo"$eB;^nc?Xoh%(NurD]0iV5pjk:!kY^[*`c%#1q2p<K.1.$G[EsfdCr04iY78CQ5Zg46J_O(-VOD'WY&A*8]AHCcbr8Xj*q!f`rEIbr2)Gea@CrS[%p"eB_<<8<"VVJ&?d]E!b2DAC[enhu]^D0EW>:PX4qVg_:^kcS'NdBP^MrCAg0Ar7JT'QDLS<07AA6bLMjerVB_hY:Zf'7s&=.g1f%Gca,;aBCSR@X1XXUj'/h2m?k3GAh6rF.E9['F5Y#q5!kR4a"C;\h!F5;_u)L,Q"ccUNgWh>$ieXHo>gk`<E3^i"@=S^D/eWP&9M:%4A!ZGf<$Y.W;.ZE9dF@WU9U/0M73'mf*f^Of.FX=aYgdkC9,Z>jP_S]@TEbAlG&p_MMRhQ0]h4@npQ*V;,9!:Ck".Gr*>%'Tc1li%ag``OCtE@ZkU6<R6-5O`+KI]C$?%cl7jdn]]e_U.rtOuhh=17-:X)T5;:h(+ZFOs`q4ZL0eWj=$R8)<IB0;js/q9p`)p*c+/\Q85%ZF(GCX#8s-f^%V2s"g0M34YWcAgV^L-Pucp\bIhuqfk*dWZM`$^Z^F`m_Y="jjd`.`r5&XkIIYD?e3oCqUM"(q],Ou+*T[,qPRsq%5?EU:-g0q_p(,dAmJa(LIuj*For>V;_a!9iL:r='F@[X'$i<0OXj*K1(3!U-jErX9\6>pd^TUB"mX/<rhWd=g^TQEpB,^cHs)>[F%])$:"hZQ>`qQn)?$^6(cQ[eE`8)a1$_A)on1C_Sn4i2sZ.l<.@^G>d4<]YHenW]B4)ghK9Z-o14^$`#Z=YluMTl*aGegmh/>b-5G%N9G\1I\VD2CH.;Z3O<D:GsD1O%=`7X=LTMfX(Jg_)Q38sj/]fCN-@*j0)W#`!ae]OK2DiCfa7H#I_se+)hWT(%T[WUoafmUHJY;Z%lec(,NqK&!ME1%GFn#3Ag;t>A&Uh(Y#2Sq2iMHG<5sGj<</)?e6dIDgCTYAOX:C4q%t215)KbPFZ]hlH?uYVrgRbSRKp-?@gY"N$%I6#s+7.A"ghe;5qrG[iUW3uWjAi"YXb4(5ISZQJ,eN:CN2E'i5ft4ipHL._\\K6LO]]Z.T*IXFmK-#u3_S.:>eZGIfr1QFDM5BOG%jK>*+^TX4Ki1T,T8'1Yr]iC,kZNdN?f>#(:IaZ-2"qC:-%tf.[hUI$Cp1a5nHYX:IYJL)g%9aWE%GM_I=^KDnFE>9DZG0r]lA_E1%IX!j/b8M)Go)<]JHt)X3`)YAlXn?pU5%i5ME9QM]rZPq$ZgZKApW_#@.%[^9;/1Iq^7RDGarGM5l?t=0d*^S9`Vll(@4h/5rA4,d%bJ=`"44/`>_tAk?E3UJs*583Rh$KFo`1UblA#VbHURh8q)RM89Y?fqe-eA-2dFpTfo.pUlfR.OhpOe5ek+K="ot.:k/&O41ir.u]%'!J]Wd.;8CBXZL5*cuc*@f*Slop.W%dH/4M)AK#Mo31l@2EreV%D$#>N1NMlKC0/^+8rpfNDbDG-oC;4Nr>K+i8]fbNJG/4\#ki1%G;3aWL%1?K?[j\.L,7HXFl@WjGL4OVV73WgK3ifRp\cc*WBjr,*d2K%pYXHMNt[q6IXeC>jpq640KF0B2s@hqH2.4J7`ep$ro/2$%I&XB63U#2SkoaWcBX@a)T!cIg?4FPad%E?*bF8EaqYSlc%gSYA,+AJH&*#n2+"q'L\U&SKT+diP`1Zkp6t0!mc\T!@kEDdMn_fAO%O)63H>^s0<q#+n<#G#aE%m/>@MnrdA#$l%%ajc73Qj6n6>FV?QBbZ-Vrh];d;',B,g[(g`.m0F$YW;Fa#G#RpWQ4^S\23[l#$l^S%%pH_P!'V`aSNX&$f=H7?4?W1s#'C`BGBOTL*B\98fB4DnXCe=ONsqPm*H&]dc?POr;6MWY593N0]-$_7k-)tUkh5LO`M^pehlll@%>$Df,Dcsh!kJ%q+\$$\TK3>t,*ir01%keHqiia59mJ87;f8"2?[HZ$HD#S\dSjigKW&!]5Vg>lQIFHO<p$F?:kJ)`(^M]&'0CF<q%44M"loW`tL[h%4tT*?7f?Z00+G:"^9pRGTCbItmjpX-'L5p%&uhYqXO)kK`9IN@g(ZcC*%cG/DC;pCiT)H&ZMI,]@%OlNM6[<]bo%`pY"i:0'Q-?-N+eH/e-drGFXYf?L;<Q/Ki>r\]P;h50eZF5u\5p=FY`s86_=Y"e'VHM[B`D9OtB^EU\k*abP;mqYeof4WtOV!acC%lh?6WFh4&l]mMsdDO?3aX&EYK?n,F-rj?p\\,J:i?d&HAQhC='khiLn*/k>V4hNoqlebpfqRU"*]0(0O&')]Zf4so\cLTQciUS5m%RV"mb_^o(W2Yt1LY3Op-?cG=E(`!soRJD)KkV)HJ[a/!O-U%W.g'R@E:LRL'Ck&\*Y+/\or3_%>jMt-teE-(ariu(bGPp%n>*pi=%e(^5'@DC(54l=.nNYZ=k4n?g7oJ?oPi9<>oo.aX5^HSY`60FlNS%B^H/T"mt&KT(@H!c!8)4`jVB%7[a*/!4q&%\NHHBK+246KqV%>B<VZr.91!3NOt!_"s,Vgd0'-aVbdl>Hi0$9mnQIm+IGO5r\Z=r'A`U;1lH:5pNVP;?+Cm_eqR^&cCH)e2nR(d<iCufbj@)A7SLI%9%q$$'P1hW_5R=IA.RsrS`LACYl<D"*>GFbp&CPi#(rlQ?fqlE<A<Wk24Mt5P/EGXOZOuV'ZYL_S]Vreq:PPp88;5n.F8lEGl!cZ%LqWQ;;XO/_CT2Jb=_+o[fUqI_d:<.Rnp]6L(:`L[=%En*d$3JSWA2;7"92Oj*H$cH,<&S!r5S_K_"$iWps4Q"V2]W9p7^+-VEQAL%rqV0Y?u_t).q08qT9iu\Zd84rA%,gnX9jVgT(u;h*QJ*fWW=Hj!@086CsH,LM<2M<X=(Udmh;q=q>%F,j$1<s[DmSBHtKt[_8rZn%,*o8WCjkl0LLCnp+$:#>@mS=T?`d^YErOeK1_=>.IcL2'rZ"5qiI)nc9%jfnPA1e-C?BDQG)H::pgg!iarSPOhg*g%-_3I8l1CUo%VHoat^'/k1Vq(Y%5A2?KSZWasTY#16A[g4h:$mi0_DY+tI5D;5nA@XKZHDXn`mI`MHqM.b0!YgF4"5U19oCY4=k9e(f@(4*QGtIS%jg0@m1qM?LjqZ`cZLBL?V-V;P2qm7"_P`X;Hsk)q:MJCdG-UUI%\Qj0aElJHQe[QBC\HKV`eNcqbspX2p4uPf12s^GZ2^,cb,4tG%DkFoHS==EF-JY_s'tg*T[WABf4QiC9=EB6]D!uJP2"H]5%(8Xu#h)W,7',+mj`0^g.`6:4j!1q2Cu0V!og48)_Z`UAZZ`TW9q6;o%L5BtheIJT(8R:0-VYQ40f.=;E8T"nj^LkO#j[n](F_J.HSh)kCeutA(H2F.D;r+kQN;?Y>m]Hb;10<;7aM1n[9jHi&c$MIY2T>\.%Hc;<cc,\ht*@S1`6LG468<2mB9"l4r[<"F!q=?^/f0$7if0$TnmCYL'hr7Gb#Bjj-/40dqg62?sKf2>%Y:qF#qRBkQCWj#T%7JCN%?8GHT(/1iQ7Uppd2j.FR=Y*,q<eaiGmsXib[ItkZ+!uKn?]6O@hb;3B`<-:L;U;7o8dFDT)9eSuU8D),Iq0kelsL3dmdbe5m/C">%>H)^Ul17*=.oDT"W\W?qB=FX;CMh<hEQdLiOohJ\7A?k7GNMP?QE/PYJhbMcH[r@H7r*1._QTg60[B7RflYY]h*b.DlWQBAS:@#@%^-VD>dZhhMKAW/0ea(@sT!#;c[_t8)b28\=Z1%/)gMIeMHlni/SV?$-Xt!sn$1*m8qjMNBRM'N4_.-VX+`F7t\P/\P>[f1',3;P3%e3qq%kGbiJ!bE^Ae1KcMd^iutS?sL;P\#+,N[l+s.AE,(0>7'qEk[i5"<#=f5>.?uT+d[A_V"-XHNW=g27ClIh8n,TZIhYWJUeW(%.H@b3,]6$Y-IiJ.!$!?Bpq,'$"p!s.C"M4f?/NNciGKSS>K4Qk9PX5P='*I,[5j\go=a\7Y2lq!2@n?Xfh3r1W!m;U5']'^h_"/\%4`JsfZDa,4E#,b5,k1qHq/+3qAn32ZI-utbgmkGDa\^t#]l`Dgqii;p*"U0dM"$L:+#J=kW7Yc7X1s:Y4>_tVJlY?\$(("V[/R4o%7^R(dY&J)b*P+0<n*$YrZ.sofkOFa9CYXD6/P+Z"['?9"n*U#9R\Z<4'Yer7+sql,bBaP'?]#Rlk$t=)?XpACc,WLb6V<cd=C`q]%8oLV-l+@$RmH5nH^u,I0`SEG/_$'/'k>POtIb@JR_=WS_Zlo]f%spPpgM%Oma-@"Wq<VO>;Y[doh6NQoem16VG2$A#,!o;"S[/qm%p-JuQZCR/%VL3(c0hFZt_Z6L*_qg[5C^,("'%eY,bE?a'4uSgfhge^t*jnF\"XYe)i3ZRZ""-8nhkuCa>U_8nYd9`Qa",'^g;K2[%1TO`oZ3'f+HnWC$$dU<i>'Z6s]Wk*'P;FOHS^#h\A[iQTAD^AM?7I8u\ZE:#qbPBu/bc6Nj:,O%SYb-$)b3\-hc/ADTWOSN=Vi!"%PnZ/K5CZmt(S#?YV,,AW?_.mMqP>Ge:%^<ad?7K)F*o0aUE+R'dIb/C4SOB$2=<8gOD2Cok@fkPr(EY5N^btrfqoI,k&ekq^d'jt%kaqL/95q6n["$jg7jInbqWV1]TO)q`pIbBhk$FT1>.(j")0(BD\q%WmP?[asb&oWgXq$p`DJ!"LR)g]3]['BLK"<uOI)oFg$(91p%g3AH)H.^CT9XZ]]Nm0n'Kj&mZP>1UYkcF+6#E7,'RuHLcCM@fq]3(V?M^d_W1$GNh,$/eCeWdP@dsfGQJs?uIjASfhQ/'#HT[)mV%3_MN>`hu_?OSRP\T'>tcY?A089oBO!X;1jg9,:Qs1QFn:V9I!2d1k5uQh%t9FO7/pC.$fMZ*.HF[.Nd1YMXiSQ%eTsZ*,JGqlF,J%lrr(<-dj\]_fhRPIrbG7&4==4;R0+h^*q:aYr"QpE[m!o.?<UM!\n`I%l=+QT!p!P<,.$/]mW7XTnPs=>182.]Q0OW%!BmVq5q::%,oF,0fM`*!2q&gATB+IaFC''9$D`c(?)KedXi'DO;p$Icj$Zkh$DqQmO`jc+/6,l.d=Y"n@&0'D>YEfJBB`Op4B.UiY3".0JK@87%@V;kr7#N3qMJmF;ZaW[?EAPVWplc.%,B5N$grWObD4V8=FI&\2XAig>JoAmI0r$a&dA0[lTH2"ORX-^oKkH?Wk0&a4*XYp7Q(@p=%B_mm4k__1[.`8sATe"E]Wsn_LLTWUh/lfTYiuGYi%(\j8?l(hF`>Nd>Cr+D<k__1[db05Ck0OiUcrGgIP=&EA6'o_0lo9d'3.jue%^3,u6=.DRSF*P=?TpmUWTZd"i[$a9_S3^f_/d_]Do@)Q&8f57`)#4#&TZ,.=Za*M-f'C.C]iF"ah"=d+oY@OVQ_]UGertS;dNY!i%]VcS8FO3c6H1'7C%^_*l.Z:3HQ;'-AW$5c"\R_qd[d^*)C9h3NZ`,"J:Z]hMg2DkE/%`N1M(,,d/hs?dAPUuY1,9qU\A8OAe1tTq%r5gO<a5mftfi1,dln]lA>:!,-V^Jq\"\DjE5M!Dc)^gq0D8^f;7&dRr>!&E#H'.f5;_M:i+RLL&$@d%sT&-l\f/D&LasIkI:WqAc%93sRX=q%D^@u(hd+jaA0IMUaB[-T=]Jd"'u`ahu(=>.,)gYg1T"/i[nV%uO=3jr\7Cm&MU'[s+*c2JtambG6X0>,J?2b?K78qH#A%ZIqrm]29c'W8rrgI?^AV?Qok/Q,e+J<if&\cf7YX>;B[GgW0J4R6.eQCrX7,9^6KR;i[4rT3=c,GaMHZ%(t!k9C6(KPdQ"36kM8$%0O*sP;'')fS=%`[!V`G$%RS2`.jmd*\?fkHZ\#.Pp+_l(1XdMenukC6?=\4.K[L]13e"tm3j]qaI9L3&PuFo:Dmi>I'Z?U/[qqTg%Qd^ZV+ID'Nbf;@ps/-$C^F`toGO\['p8r"lCU_+3b>cHNjg0N#Ut<3V/l"(C==sAQUH)t_0NG:B%Q3.&jP)fm.;l8$5D>'?X>Hh,%FHjk/bD>I_kU=ka2HuM1)(b?<-hU$nHfM]+e0DG+A]:ORaS_8"^%'U4gS.\o>X?A+P3_1A7$U;=/uOcHUrm4qj^)gOoWdk'@j=.Q%dqEJg9bBd)nPnl38KE?`cP>Q][GtuBT+^L>McrTpk;$sJDL59_.)W2>O%aG5\k\1L"A_UMb_#emd8[`q*K"3-fQ:[e1(3f!\cPJ/%;/2`WpW2F8^d!;5O[fVA2VNQ^dAITuR7`l([&uPIQn9/iFr__'WRrG*A>HZVcg/Fm,<bOPR'tFanrn+p2aOF,>V8WXn\$@^FnW&S%Fkh3ZAbfoL(HI<[a*)I@5ZpHa>J#!_r%MtJF^DLL7*\h:VkM@pGF^pPZ(jaQ_oej;("WnqPTa>V*:#)(PV'W:%cd5No'16n8<TCX%XTLs>\LtWf<=\\j\n*?j%n7T[:#2THCofT?.oXf+fIn0KO1ihobP(Q%3ZkM(rNWNsiC"B%.O2+Jq/G^iW-4U?Q]CAnl:L\?3ZkMo%Cr,]<E'-a1Hsi$+iFG,m1*`sRq/F3GfW.*CS:%iJ.KLbWc\I^L>Dba!43E=oZGgjeFjQK'K9VCQV=d<9I'M*SOf9PBq7:.*R)l-Q%M9]f7\GPoEA3qRe+\VIV>h5Y:)d_kYANY/r)cYh/cK)ik>1Ol41%;:iSrX7"@P-"7(h5!Mbdbg5,doVP0L^X$b5sSrl_:U6WC"CB%f[CS5bELo=`CUBY8b0,k10hFN)sC=EStQ&14W0j)oV<BZp!X*_k!c7X5<U,Vm%rC$DR\1+pJW7t4JCEjEZ"-o=^n7.[Aa522#@(8%J]Ukr&].]WY]9q*Ag$aj,PC'(LDd)<=mn+D04'!eO_PE&PAWG(8A,qoSSF)?j^b/R5<[qod#2m"dT&MCbbpaEWTD;g(V$iJ:C.?'%TP/)P5t8p:VDJmb;.djPCd^iMbY3`>I&u.?ST[oiU^!=O+7)]OS:RqCrg_83iS*m-G+&ci_QN6&.NHl0^81-r.NEdM8n=B6PmXGe%A*(Sq:k!Ra&O'8??T4,K&fp&`ksZdrFrj)Al7=k@0NEJ(KEE)Rb:-uS^(,5?8/<*2oQ#L\fSk\K/N_,f%N'DO04a97</+&%#:$FT%gkeQ0#O*7?nK<3EL\tmlk&F//(`rZ;rtV\c><b,OS9\>q=f_Ri]:Ac(H>fu<c[>T#3`u9$[(7r:oVF<*p\](fJ:DJW5g.Q?p!\il%>A&&,@$S\C\U+d8nk!oZ=gYYGk$k0YM]4c=4%Mc<-<%_BB33C)nrhg(F-GGFmltIPe=^E.S[E?0m,e]p$k@u`a1pd`]+nr1]spKK%FrQ(kNcPFGh7BcgcHF0F:ZZ&^hW+2JA'e`n=CX0-d8.HQPMP_bbD2UhZgkm@]7KXUC@7bGqY%s^S3_eD@;g)WB7>TkAPobf:lmp*%`o5jbS3c[.^>]%&h5e0s]?^YkKR;H$q1GiP*NphQn1a2?(G([J'"N8U'6>tOh9TfuY#r[1j=AG=-YA];oJel.r3iIk-`m-f9.Qb%%!_8/I,9M3-.-A6TaDED#IU^D@f/H)KpK-)XE6:uDREH!i9A`m:Hh8hf$+HL(G0C[pC8F?]Buqp@7dHGBNa@mlR*orMXHU-T96+UW%E)cP4-[9r4MYYhCII0-@f?t&Yq'0okegK@'.iYPDC.^)8)CUU;ZFL$_8ss">'(<l+T+\_R$=B+C$?tn$!P0URDqEZaV>W)RA^b5P%dMWnf;)V_2dOIE+VTYa$hIb5ZS,(_427Agl]um4qP3^7LhQq%0EYUpPc),8D,'T/DQeY?]V(:N4DDRb7bKjWsT^#B4>uiR`IV_fX%flUAS@7G'/Qe?IMi3(5!/#]Mq@5_Cl/fiW14jBkIRZ\h$HB_-jPtRInP^8HdQ_g3%:N+Rbl*C#DFdQKIdq,M2S_ikuB@CF7eN1IN%h/'Z3N:eZi/h<9k)iV1&$sR,@X),AKCR!Tkpl;]FN"2(^:h$Nn/m:"M1RF+IE_j%+Z=Dg>SP>I$!V>AYB%(=fO3n?G4jBkI17g#8%0'NkOkq\@ZPcmE;MiJG0/\f/2VqH/p.]N4b?`OF\=rVu"A#o9e!U+oLr-k]24iG;G@f=8jYEVe0.\1pUiQX*%Ef](XS'Q>]Y4HiN%o%pFj3hL6%k2WH&bI.S!dTE5'fN*ku\Ke?TQMV/oc?_*#WHMBp0r=6gjgmHJM()`]>A<,/n^R.&fbB2jQrL1V\W&/+WU1kk0H#)\%O.VRZ+X?ubN+_QW0;>.45'&)dWYDMp>sECsG[7JrrGY9QgblcPfeS\mPFCF/puLdsmb1rCdkc2ngp/V.WU4?d1-LNZL[Nm?88*J7%Y4Y@=(PPuhb["QC>Ihp%GN!deYf'ruY&j9Ah6T5%L"XAk14.\Xl%Z%ZNcgo9o<MXO(8L\Q-F03ZNe^9@\'s=k_<.PfZs?feOfmNm%h[EYE)2@rQ*9H)F1Ql+g]oebY5]<"6-SfG9'u$npnCX7,FRWC5d'^A"_fW;$pCF.o1)fGVQdJW"m7Y(Xbf:3M0:?0,XtN,/?97JO%32]gO_KKKV5J>/$*3Tcp9nCei1%.$.nJ76me61O_[:Z"T3jCT<6nuL>MPYFjWdraT8ihBs/IaA\PuI75+[^G7U@N5>U)9.un%BLU%:kQ27Sk`er=Go\<d[#,q%/"Vn2l_cl;bip2UIfE+]mITbjLK(N6QthUmQ5Zk2BAe^Z1MJ!dXsK5R]7'GFB_K<FHt0$hm$oG;;CE9%P0)t1$AW1k))QoOQ,q>;L)5!9M5GZpdFT-Q;:Yh&hRMn>MHml7<u;NHRLEE6E7`+AeQoh,Qd1!FqH<I7([a>4.Bbo*aaYbC-i':5%4ip>Hq8-DThg"lKgninT9tt[,?fm'SZ;o.(8>XgWdB+%eZGSO\W&om-?'`Qc2:NVm/TVS@Y6M/Q\-r^=Q`h+`e:Yuc'#elpf"'dh%](BTsD]JW<6"2G>Oq[&DZGg#AP@#-/+Gi[$VPKj-lSuYmq'(-4>3p^$$r=J^6^=9U(%AK`1o;6l?Ik$5<`D1TWALL$%aF^kI6$[t%BliVJbkB?\Q:[#Mg[8q2Q'gdg@1nd_+2]qQPC1C*SmmLS9#iEg=d;4R(p6i9RhWc*W\NJFW_K>VZa1:j4W<uG>/*W&-auu@Mru-;%oWaZr$aZdRBe&>hDhYIe3Nam_FD\aPFdT'$NHQrkP&C_OTAtfij>Dk.m&]@_M4'&ThU997TE^OU?Ya9PE]RtuR:]K(WRhsQ@8>5I%Z4NV0ITo&6ZMJF?^::NfI/-_Z?<OGfXK3u!Ch"=Fd>J]%_[jlR$1CdW*Ob!pL\'k[\<$UO3cg1,(Q$q^_q>.`-meHC-9p;Pk9]*_%IjTn7p-31!=rG>5Xo-th`k_H<9^\S)qNp<]S3_cnSKfJ)5FEhkZXD.>l.?h0r=7TKA4$f@Uo%.H$,PK_T:HKQ\UO]k\Z'<9pRcVX%'&M]i&!(=6Y]Ldi_<ZF(fm-HWhd^90U!-,5J,]!bCTTGWaA2-KD;LqnU*RChdfd-RVr@$6Dr_<FD'g;W9FlI%[&8!n/g^Su<[W;R%X(=c4&#J!*(H]b:b5@Rc#M`(1adjPAl'-k5rr1::p/@ZWGVL_K]I7T:ZFRR%_8p]$?89V4Kus"LjQHQUFuZ>JrB<oTX\bD_Co`5d%gWdnmkGt`Eg5JY+/NcT0UFegZ8o,O$@csfZKiSq!V.Bm4Fcr$@.RLK;2!*73^oY/b_qE'+c<f4^*\:E#n^4GF1T=EYT&`WqH(0>0%GHKo4b"^!:dRq9CZ,lNN[WI]!WqtMhY0NnNEcp'DhG!aMf&?:5,4@CaDHtk!]HkMJ;W_n8Ku4N-n;jsuh"&8/0"U_:rE(;Z<k&&_%f^f_Weue4@pVaDN-N%B0,GoRs=A,[u4%n.^.p:q'EQ_>.aL1W0cC2EbfI:-J=UoN?]_BE8:-!suWr\Qsoj0;1R5<($A@uK6<s=MD%jVPNYiNcB]WLfBKaq0C0JrS>](L$#Ig.&g4-kMF+-'C]8.=EK%c'6YUJ3SqW*41u@eLE18iJl*M&pZu_\TJBSB]J6>;XR:;-.9if%9Ee,\q_G.@H(*00gsR#f]mhEYXY#J%S`T&4.(N^!Zcp&Sid'Xuaon9CI/LJO]^/s6/H:j7%PX4KaA3$Xo5Zp.8f,e)%Rgk8;SKN-%"dhYT9f[_mF\$PbB_t63PkEaB(1>f85f*7XoI$!M!A)SL94S'hblKBgMHLEab.jlVO=OKY$a=FW@$rR8r%,YS3EE]SBWhh<@1H[L%2KI[A>B(.Gar"mIjHTAfmA#'J0=(99;82b:E1K28=38qrng;oOUO3q4ZMb:rb*UAnHMo7!V%l5]aeO6Zp#-:'s.bYGjhI,3b=DAK%hllD+;81PEG.`aoXf**LEa1(O=MF+!kE,A:?UqMt1>_]i+;V,4GPuP9-=6B27;XH#f<>'bgG86o[>\&Lah*#@YPONe%FsHD^Tt8@%\pN%)V]uu.L?e>8^Z(>Dbi\-.]7.^+HWC8H-h$o.Q^`BQ0@QiK_7P08nP#5!%c(%Oq@tZc1>J@CrHdu88F(KuMAIP6=P*$<ab7:#%Woi-PlW5'GQCX5l@JZ*(HD6R`Yfno,V>GK8Z?"\VeTI.Bf((8QZ5'=\^?\j:l:OdMgNWTA[^0?6C]?Q3*ostXr2sDsX+&m;a&i7,%,sQ%<]m'D^_n[ZF[28<.M$oT==8e'thJUe@$=<Bu`*IKTY$^-fjCJ8([.g_1L25`o8X6u6f<=sL^YWLtXV\0dd(&-%l<V0aMlrp^%d15(,.t6$PMtd##GU0f_4he)"Gc4^BHL`+a9-q;?2FmANIO4S,18A]uHIjepn%gD$C5gTk]7+A9Eq?>\*G2.U)4s2B\HhU"(#CmQ%!:BOA?,'i)\t/Tj3e+1lnK)$Ja>!Kk^Wt]rCY+ltWnu,#Y$YC/nYNii=4HKo?,,B#r<b;%gNqJTCHbea?,'i+8"['ShXsOd.qM_)%;RIt>?,$ksI3#udQe+mPl4#&sokTgKd[PIZML-M=dVcd[^!3(FS6,[CW1BM,_o0093jU;OiV=Pip>5Jc;?KTAesgm^MG]6!MY?%8%5D?@9Dbb@Z\2$'?c0tM:kI9gM?,,BPac+B+*TT=ger*o.CFa_8i*F*,`R*OQ?+oQ*X;EkO,^/sc?OeR)X+#=Q,ON52=+"LV)=Gb]%I`:imRG"tg]^(oB1!12DI@!q$$,,=+S7He[kO86^$\rg>B;b4pAIF86Y=cYT3Qd@`0P-OX77Bnl[He=ApG48=DIkfn(:.i8I55Xo%mF'EH/=)PG$*kY"1gOG+R+6g3PU7MOTH_k<S[:d>+09tYI/L[-H=h8cEie7Dfk@9\Y<.`?re]P*_jTcJfb*uEY.s$&PDqe21XGMk%URSY>SldroqDQ^8oet[A[/P>_i9Wrf4*:+;E-:sTl"F_:p?-!J38/Yk%.A+YIP9RXh"t"fhQ@m<n_V7IlcG:fZMj+Qcf*]tn]&f@%qoRs>pt4]ib2i?T1]QqCj2'f3?S@W#(>nDp7q8=e\i\D+n6C=3)7G;!Hl2mlF)s)S:[X7f^CEEp=LZ1DX7c>+lp:ZipC14t^U(TQ%0_s\I>I;t`Km@J4bL^lPA+4cig=Y<[;m5(19\82%b`=YOVtR95iVatLErL2uE\?'-a"?PRZo;df,eU3;IX`9CB(g#[2OU.CYqM>K%3o>0drO0GIZTbiTGGCd\jEC_sQX;si,O<2>NrC"/^"+!lK"_/eHeXakd`QOk>2Og1LF,KF:Ci2S%hHk$#=f`*7XlIrc$Aj#DD8&Q%6XcH:eu$?UOhYid-J'1=lW_j:ot0ZKR)&M87*C$B@>ck*B^P*Jn3b(%MX#la[k@!CC$B-e@3HWhn87?&IcKDJoO;O`r<&fG9taYe%PHk.t^GtiYn^HJkj7^B:4LR>cp3$1IDlnKfnWMbXKKig>TZP,%Xk?i@Rp9G9Vh[+l2nk=2^W%U%VhX*\a#:E8m'RqA+'7m5Ao+90%rS#`Sc2DEoc(*Wd4-uGG;qB1ClSM62+cMDJ`ih[Mc9:'s$c`?Ll;hs$_,2tGX;Tn7V`t3+MpLnUlm2N9AGu<=8+@Cn)=Y=:S"bDC%6Q\Pl>e_7ChmS"4=T#l-@AgjMoA2AQ3b:JQ<'O'D5HG9#Wun5&LWZjrl.E^M5?5sHIa@sj5?Po9dmI>hj:?UtZr26\BAcCu-?WhF%@5`R6Dq%S37R%hFZPLDiKQ-GT/50>qZo<UX#QJnUn*;(5WpdhsDK>\b:ZJ(r"s4e9@l&im`>hphd7pisr>]!?5i06.go!A*[l<3i%D),4pRBuS.RGFWb(Ol<<7DCnD_5ouHQ`;%E)BXhfkM^*!D(6V,Z1u-r));`#9$APb1M+V(lqchgL07uke&lX=h-*:Wp<6q)j5f`c%H8'j8m4F%LDo[[N.`9R,\"eClP0_FEV8qbi`mXS4Y<V\GF2m*Umj/U\:?em%<]B2<48d7agfaTaAMX@ghX(.!?Ot0efBJ!=^RtNK%#2lSB?X8P=3PU"/_WNO(^F`oUhl;pMi`nZt5u6BE^4-oHru=7'kO+gLSh]EkLYKT/-Z=%mjE)'eEimp`c'5pj;iQ1\\X-`WodG9N%@QgO[AMYFEH@ghYaa.8/JBdG0>(+.HfV^'aX=*[qYLJee_m3tYJmt79%c$[inV]t1.OVF88>`Dsqd]-Y70A%1;%(,MERhcd7ZVuG%X.8Zl3$I^PTuSC=qF2Fi<La0L3gB,nHHeCq/l(\*+LQjk,;\gra0Xrs%N=7s(ZKhbs+pOgHYW3!%.]L"PI\VMk]u$V1grJ08CQ>B%9V9+MAl_-EI($,Eq=UaKTANLOH<>V5GZlIiK_2!`&KZ>R7V#%iB6F&ud[JikSAZH'V3dSR_qeEBr]3d_2lZI]8L`-CZeXWROKLeu%<?ROUTV8b85#C_22q3/:RI7-_9`lqmVoGB8N8-hUL0UN,qVT:2Wf)M,0"d%#WjfP2-rcJBk6Y(\UGMdeRbc0Znhe_:=FB7G'naX1%oFEScXi`867[gnjSh[g\f2">A9f0*Dl6AK-Me@&(C$'=4Qnn%+KBJZ7WS.)=XEQs,3k>rI<hHqWJ""jq#>C;oD2ihGAoIUad%dh@%JlJG`:Kb.H'Iq\OnXc^Y:a/*(1lJNf>UIb^mPQFF>eL09g&)PjHmY3S`EHUYp9RCJ9^[p6`:1ChHa62[D_%MagFm;-5Kj9k^UY8;%N)?+[O'XU)SLhe^p<o?[1U5Xn;O%SeY@CA/?)%mY;CsaU>VYEgDUD6if0c/`J15^^l&$7G5Ngn/k=pSdNAsRJ6fPfmPioMn2F:B$%jUPm>h*GUs@e&d&Q0b5+S_jTP]'O)?im'm#l'l<_ILbFHbisZGP$3&qFdY9\-2RIuB4j!3J6BN%V]T#_2TCp#&9Z1<<'.+ZP0r<p%c'.>e0`&'Kc]??^Ze`f^PrHT2]h#tJ1.`9-K.Vi3fNcup+eE#"FrSW.j)RbAmE+u&l+l4J)n3jQ0<hqLpB5t,)RCg[6S)ehp-Zur%h'XMM/sSj(#qG0A)$<f(63@#tlK?n=YN>=LaF1fa.fX(@O]2@M%A1!-#>3f=Gs99W!O./sPkHV-q:YVgqO4`06)U2Q65p/<I&XLL%PXJPUG$6FIrI*GMhktpV2>+j\Eg2n*D5#UZcG0:7@39inEO'RHVMp_P.J&>PT$kILWl36Nc(RR,$t5CFl#f*/HT!A_RgYkYcU5&-%ledms%#7bJk8t%D"d>M2I:c44ApOqGrbt=D%1?Br[R9Hs7_(NAVJ`Z7c,W,u_Q]\q:i47N4XAW4#%F+mKuFQ^ap3;Ej7Dh/p%QDQ%_9K0Sea9L<,HWSsB@p:EQbJ7HmYmL'n]g`fD0;?5[$&o*iQdtYG1h@,(ohG#rtbQ>3dMmZ>PiSjJ4A6/>G#HhqtlFCZA68:pu0AJ%p;JiT8nW8i<6+.e['12R=-2d`c:ATC$@Q928,;u2QE'=Rno-bP^KgFbO#pJ@n;&]QDcEj$b_@&t!oK4Oq9;h;1<uH^e+n!]$j>2[%@J,(?BYX:kI9qhRSG>c$_b`UQ1F)6(&-M8_$#84u:%2R.SNE8O,S"IP]E,M]QLG*+?+XPJ^34XUVfHj;NZ?oi2=@^Vm,eE]Kf*(g%nd6YF.!_7V/^ZRb&=b4M>F+a`ZHm\DqcahIVOS]bCL2;<$bE`)L71N\\fD`Z'tZLk9?S1$Se$?''!E/tN>_`NR^)eVm=geVJ8*o(%HMbFY=Q'cSTo@`c\I"qi^[peD0XUNq,lI@h$*`qT4!RMcdf5oB6rrMOrP$@\,P[n!cgMCPqL8D2pYAd*<96JYAnfGsO.U<^fB]iu%QeHrG<hF<e+)=YjIC">X91LL:>EQ[(]6V,m6$(hsT:s\r-H3oV$e*AlD).6Tre`Z&2[;Rn?*4+3cK<TIcZ+/M%R$F,48M74qq+,<%Za]h0rqnpr5M'%n@^@lP:1kLE$+h3O%'J1HbO951]/s@u'M^-fs)>[F])$7ap%bFYIs)Z&bWk:65PL\CE-lS5$N@]+An,lQkJ9d5%6]Bm&:q;ea&h.F'QFr4LO5E+EpJ4!o?M$T\LU`Xg@uL:QX3j*`itMFT6iSts)dM]8s)^)?ffsV)qZ[!^_-^:@-XI&DkT5WpFQ?-$%<=?7o#B@?+03Kb2R4aQud0l=m^ZX;.ARTjK:o1A3%"*H/XKh%!S$>4WA)^jFCFE[N`s"2W^7qU;3@Xrt*TL>,S'qGCj,#BR1O>7N%n<Tn&:8!i\=HYs0Y(&-,0L%L1r,=O#105?Z5HRWFT:G"]`s_HnXVoTjrU>/*rfA<De2;bg1e`shqT6b"PjoEI/c+/QWhT>D!>Ku;%aTh5.`nu"8iNl7.\dQRWnE7W^me`0!/HE4S"?uno=)D*kik(\lNl_#l%UNhU5D'qn$3k_qJj5<qgBl`,R=fQ^q:-f$n]BqQfoAPF%:H]&Urbp8d1KPYgAq*%)*j:&uoD\%@P"EBQA6u.cSE+h`dVL:c)*Y05o`l,0ZQ>s\L3aj>'HP3@`qn\.mE=eGm9IE!X0Y`o:+ra2%Mdraj&!qpsiHF=^V-fY2l[#3$&lV-S]0;eua8YqbZEJJ\`o1:f[ZET&59/bL>7U#Nop%'-FmDm@@VbEs;ifCL^BK+YcA8[mcRnsr%+8W?M4/30Fo3sWP[k@UZ*/8q=dI1DIBCP*PlS,H;K^V;O7WEuAL'&DBa`8*5\PN]I!L_-/ri+M9I;Y4iE"m66&DWOWMXF`c9iaWb%7!GflVO)[W-+\.$\#bbEWT\66GLX*^qPH$1GEBC39UA^(LXb,'?gWr\C'4H/_P?42U();p4^.O#j;fte`>4Jm0"*C0WlZmmbTC1e%X=;cUEJF4*:j_[-8%q!U&tU)GMtq@BXiLP<T'0X)ACDeBmq>\Cn3N.K;gT!.b'?*DS!2nfR'/"'$pjDjE,);2?I?!Y1W'5Jq9?^&%dN_`X&#p$sH\BB[g\1t"DO!^5;gn`;(c6R@?nE%dUhPD[D8KBdq*DrNB'mO<4h=cHo"^+H^!4<Xn\7pa!nDkm^O9aejFAkeMeluj%il%4.2.tc&W7VAtCjaQLbRmiQ,%_W1J\gT):0+Ce4+:A_`EA4*Zh,4ib^ITWobM[i=mspCN"r;'>K.cA$c^h[e1;61s.Y2l=LPhh%c#*db-2ah8#;nC7ZZ!FO[D)V0+OTVf5I\\77=qUW,2N*G)X>]eC30.9`b]jBTha1lKfQ!uS"H+bYn2=fR&"C#US9C4-`csL(_Q:P%8Rr+-X.dQA<^fL@cGZ".o'%G,\nUD8OOmr6mVe+XiuQ00W<*-K+t:<!Skk2-=/mP5X6MM$Nm1ihH!-FWef-D%V=,jiC`!@JZ##d2%L>%p&mP;I-o/i6uME-6I=h5^q2b2_,S2AFkA)rVlXa0pH"<I[@D!X^3E+@cleRt%SOALqo3-Iin2\f>s-qWqFMX&%/ZkTV1'1-j_%lr;Xr(nEaBo6KiY6C)?'Ir=f&;sk>UR_LsbKf<kI3\Km^[qIEB9cND7^Ik92bE3`lW;RS5[IP\Ihd:hg#,<_lJ\*\<)0!g!NfH0t%4O[`"=oBKc4$0lmO2:AAm)mcHaG6B<J&:T>V(YJ;?eLZG5+hTn0%k/<Q##ZCX5.USmU#AGUN/dXiFkJ^IqFHkQGad+IpEMRYQ:F4%=thql9t^*^K;8'YMuG"\pA28E[K0U"pW$:t@)I_)Mag:P$r01I94RlQ_lgYeEX[lBY\<KTHW'&*k)6X;>(\*HP)f-2l,CWXKR1Nm%G47$mip$E;,jZT^[f#Ru%Ru]EhiPj(Fd+MrK]23Cj*^*n@Va=lbUP+S[\@.(k/:`o`fN54P#*G.)g0hP9^LF]6(=22YDslK=t(Kt%onRW;%c:qIUMq&n9Xcn6^nei2c'=pq9=G3<_2b@6FZU2EZa'EH^u>4)cgLH$ZY)<-\Fb\*WN33r0oW:Dcl4*T6&kn-?hj\<ABVD7%f:HkSDcpXr(a)>V\+^\Ti*S+gIc!<U>l@U%=6r-M57@H$ru8t+[M/<o^5i7%_)p86Z'DAFfCrI@4l3[><#NE?=fT6=hVGj#4[36&%s66"Ad-9uDn^_I4CnGBg$&q1ANPU:L95"gMNMDj.&ghm,Z20dEs%iY(j"J*]^\00Y+915H`=gXNhuA6l5/BJ_!pJNi?JfYXq0/n.%(-hb&EGQG?HDE3<i4i#t<TCmci",`7od@3D<C)]_p0#p"%UbO$jk:dTNtk,<Ek4c1glhTKq/>\:iZ4A:Zi==9mAf>pd)qEL5ob[,%M/?7F^pQ$*!0/'g"GeUr79g9hT)`jG:i5s_<8oCO"@iQU+*_d4<-@$L%JoG,W^a/YpP%/M%^ELYY55lo_FJ%bNap*1OFuliqLY^T%rrX8H?Ia3cYKsBVD@g7b^Zp&0!$D#:hhlB^&``pIr2OD?O_k/)R'*UnplTEISteSX20L2_8Ta<!6U8;"NhesM2EM,aKgg[I:Zt6]%7n\Z5+A)Vrk`#BF/`3Fj4/!a+S(RE@2.73ZfWcO=N%<Kf6Cr.0$PW]o&/2crLB/XPEFQ_K_ZKqTo-55GK4(I+."hp(eM(q^hTRC*%*<J5d.5?B_gVVo4hmHbG`iXQ<'mgj<;h;p'56;;"&JMmRHa.#!E=eT]_*JDK2fR"J))*f6SI2%/Z3"@6D]r_37Y+9a^qrjITbUc/%;%u$8G\l$K(afV\Z[G*-;mde\F9I,t!s$uV'a987bAho5L)mlYK*)%nZ+Yt&bB!Qs!/O@iO!H-,anm\'P6?S))h8)L'`8t?!MUs%%C_'PZ_HOh'V?obq#Lm7=0U)f*gMkm6JGs`/39ntk!Jh\>D?>LlMg^s8U<AFBmO,H*:oh;N=T[N-#S<qsJ=DE(X,F&]KA<IG#%!r'%?8[Odhe)r5#1$Z[Uk8Q^f:M*AOn6Mc!!(ae^`l,k7Ig+H-)u9Ok;iq_=5fs3:*\Cpj<_aNBSi<R)[Rq!/Oi_W]$MH?`l/#uip)Xs%,p7a0!Tt=b;P:64H+<0Z$K;=?*+nHNnV^db]SJ"!Zsi4;V!)mTgE;5R_!-_n6l;#,&:$)qcaB/c!L<1?2P%V`3MfN8#pWn_E6N,D%CKLnf+3l4<!;OXOA';4sKYXR(A8m"!fq[rOF@4ZU?4@Ocnj*0#0`t89i>0>YM5.lEc"[0*!t=&S>6S>@_3AfRC@$I-Gsopq]:lDo%MA#t4o#"Qc0AHol@GW:QYZ_F[U#plU@*^bL-QkTr6Ma7D1B@5)D;`Kt6S)DW%e+VuganZn/eCckm[mm3Yer<'#(Y4nl0'N,bRPJj%$UVi@R9INAS'Z]\R5edr\68pdkTU8OT*(0<./mVa+D-3-llaohi>BUWc99,Hi;?_q80HNAM(I,(4hsl(d'f0s^`m_:*:29bda2"\%`QUmuB\2EtY`E6p"+UQ+?m%Ln+IH'f=@+A3\3QFV'Df;p)a,A(a?D3_n\lR^1@,!3_fms<4p%_p6_fJKS3qB2>G,EX*cPng*lrmH%.'C/*U-)rqbgAS/\383>TSP#UIQcId,U:ZP@NO7pRF5mq)Z;UWL%rhWS\Qu7_m2T>Ko:N_+,XQ<%$XUKS#R,)I"Im0%Cm"=6lgeE%2l,PhZ,aL(p2F9I3&kC`*]@NAOskKm;r%FLF=*pss6\Q'Z596O;?3(&a>Vg`"%:ms!8"!\D')TO3eRZlY"e'\:ug45Le]9Nm?!(.%&1mmd8G.P-4[^fZ(a(&e!'2QX6lLo"@kjm?M50+Y$2dU"/5f=Vj>]9Zcp>#?^qrGgdBENRZGb5-h_5>E-Lci$J:Rqnp]0l(\('%K%^unf$L`RO:W<<J,@Gp]HJ5.0e^eU8h"?7>eQA=2#!YM_7eKL"nJek*^5+Vl&!5O^d^$DP)K&@IWL:rZ_:='>"TNjXC>BO2ok8B3R%#ga'4CnF]:`rYFW<)0_-!+(1,!VXJ?@h#*5Ea6X@g7Vmq$\2%4>2iWa9XKH)pDq"EmiCmF*tOb@fZ7<m`;Y?b,ZXnXbTgg.Z8N,*%H8\n5!3e^ojlsU,@3s,A<A$Ti_@b5D--jIZ]`\m5*T-QJ#[*nhM4m4TTqcNNqZo`NnsN`JhQ^*%`%^6SJl$40=$R5iPnuJ)F!9>D%->oo]JHLMW-f+imlG4N*,032Y;h5pQ"+Ha?JDSGY#GN>P0g\TdqZ/8XpXt7;FZ_kH(8/NujeDR*In+2&B`M=)1bB/'dKKLN3cRKA%8JGhQ('eADe0+iL2XiCZdDc\"?2K3=,CgUQ!GpNLNs$k?_2A:H@^:,BiA1H7nkV!'!4f$q&1K%>LbG,FI22s53dctnpH4?kFt8FR%[es6t%[`k]X0QS#F$'i,,FSaAXCTLK773;:Jbp#S>0tZ5i+,;\C]V>Wgt2T,Xoh%o6,s"0?]NM:H&8'p32ACSJ`%a`oM7\FbXR/Z%3-<N-[:1]t!>%b)(rF@uU<"%'!4"1<d*g8DJ50bZ`#b9f.?UPpb`qcs//*"M[cNl3&XVmsZ'L4Hn3Hs!1/Y/Mb=!!h"X"e/?[tBT%O6EoP=A94nKmkNQ1jJALXs2U'C^ZX2@`3",p]tDd9l(9"RRK^uZlC6_A)'((1o(1D!0A&]dQq]">dW`9-4Vs;S8!MH"SbN=K]$iI%FcMYJ+j!83O7D-I2E1-4]?"JEoLIQRQiO?rO/4WMXT2ao+#])1a:3S$eqL<:)$+'Z@P!8UkeD+]fa2);JCi47U(bm]iK3B??$)CN%M/d@?C-C4bd$,.CE*7Dn)$(hiB]7=k#0YZbo76#8Og%Z0YY[Gq)S;"6!*3OuZ0,na)[Rc^WcCE!&Gnh`MM^)u!UR3:)A5O?J9_Me%$`I&$D_OY/;Ah=t\23\"!8+a#DBJF`Bn4P9kT^*8Jc*&g@NDD7J^$jj=cq>mT?+hP`*4:hidf__g-aK>1uojs=HQ0B-:lLFMr#l&%dANU%,ju!QnoS-_EXb8^jKetSf>.B)f6&%JFC5u'?k7).G>)1^@m2C)HjgS2H3_'B6U*8*#/k/dXA_W^(XR'2Z#*)R2^4HIfo?RW%MZ=r0j@^9V%#>Ep_u\%6R<o2H/D^ZUF_DA;*N$gn<?2MK<;Q/)L*30N[P<m5`jobKGp`!6762UX&N61L<(hnL:3J0.iQ1O0%=hq!%.SK-]7N30B8$OBM!0ARa*2##H5QMR^+V?]HKa8eO"99$K.N0EGU`j^V6aAg3#j"3cS`fR;,?#JNXuLUk)>4=.j'"A0!1NoNj5E-h%%kLPZ:L7(M3_b\q%Iark!TbIkiccU,C]]7Y/DDtA,-j=OJ#YCl)Qn?D4jZ"+o$JH6"OVT<YTJ$;WB'iRbDho;2t:+sML?UUcXAs=%1%n`>_*W9LhGYqTIXU-kAG&S/gNV#ME\u^Oie-Y:8d?`OZ-]4'9Pc?t:+^<lHcX(*^h=Af5F2DTUVJh]$kLkcd,^!E#"\"sn/_>P%Q(HqX;%&'o`3Vg]aEGeV%No1W#YbC%^=G+$T1[:g!'#J:7E7Xn"JP)j@B(q@R#rsi$+ns0KaBJ(B,:P3H$CVO;6)KJTE13'&69dj%#4E4HOak5sYdL1N+7,C7`l=-oI?!5_BFbU>Q1"b^MF%c^_:.A,7AAM/o@)^:(Abg21a#3666@WfTIP\!W)Es!.Z!#9_ANFqMp%'@%$q4jI<kjD&,jOtepTSMk!0Rg1i5"K<.\f:;lN[I:c3[W+3tZq+3q(KkkbF2)pcnZnf[_:!/B9P3J1u#:.OtQT(l.s+"/jS'5_/#(%%j+CK"?7Q/m%NTuNUZ=kYlV/$g48/.m$s#ZS4`,c!;OXs4"/q)X7FLK3=_V4!2-rqN+NO9@g=F"?:&^iBf$r]&4d:WfEsG_))XMu%L>[aH%2"FZ]h7o27ZK`n'lu#<:"THuNb'.0@*(<0OW&lg.u@C<Z>m2[%-&p;8D*NcJFt(H&$7G=d*`b4>>)Ft%KSm\N&6'(j`m)$%[.3BuO')[Y2[s`q*s%R\!22d_60o!2Lr**uQUs,P+DnBN:\5ku=J_2I%X'dij%+M^;<0fi!P#,%:*/.bU((H=,/AnrMVDUn[`QD6%BB*(uY=7'Xk@eIdq"BF1<H)oqE+!^3A?Wjm:PL'6AD9b%@l6etCIGC',"SP!mg$CcOF+mBT_]6gCc0WE+qG[(@Rni+K!mPC:#nsW%A-K1T@J#Z^3I%%S;4EBs(3&153)^^qRi_j>pkV5W3RCX$+`'a8D@tWZ>YD=*_<$gV\?W*F4>,"g%4t[j7<<_f,e1M*PZEC@B<n!P%'?=m#Z:#B,]uG&*EdleH,%&k)A/ZJ<!ta10Cb!7lV-['e0gS,42L?VZ.WCQgTMHK0\-(;o6P9k7E'8bI)\c3RfV,A-W!;`,n2CbQ%:.,Nm"B^1"h(R%iO-'P0Oj/c^K0E0oo:YA=`\C@Z+?XUb&53($(Ra*ZM6FR/jNYMD7QcXQ/irX2L-c7C1!U6,g2ht+haXUMMomBk%<G:PS8GNkR<2*_1XdB=r!?JC[.0tG<d2r&"=F5nQ$q.Fg&2>L"`0%\S.j86=70^0Z9b3pb!Ut9[ohFT\*f/J@(SR!`hKT.<g87p)%d$BN:j/uq5!(f)!*SJ0#[)#SuJmKjBTt8uX8fQSJ$].YO)Zo(X-#.;^Dl'lkLa6X95h_(_1IQ.nS,eYC_&Sf0!<-g?g7<o;57E]K%+@ZUDiD(TcA8#5Q.%Frt@"KZS8c0K35jj3!?aWN6+Ep_)!O^[^NB@^Y+O?#/!WWSscI&#?#ngJCYKe`OeKtS&Hs:j@]\''c4>.0R%5(FI.Uj_6V.N3pX&-?S+<[rX\!udohY8S\AY;h[N1*Q*::*gP@'&e8XKmPT!!kkdZCG2WXkXqsSH!`Es*U+m`HVi3.&bj28:rPf<%*hd:8/l[Qn+P6F!>[5ntJJmT?r&<F4gf,I.:*9>k;9_Of063mr5N;I5#R-^:7M]^"n.Fq4Tnm/E'.lN\,HNNg0`f(H%DNUY%1jS6%7[)1hD3c&A*.[,"!)VHVdUP+)>gktlZ+,t:]@Ft<GMNl3F7\'BVV;*'o>hFbA:Xr@>6O^lJRE!($pr1KOl3ApC-*"GX:[6$f-56h%OXqm<Xbig?cl;a8?GOI@!q"EZ64Zj;Cm!hAQAF-)0'lFd4SaHA1,T9I+Qp?2qkau.)ffYRA.tGTH3?VjfWqb,DA&XEa!5F*5_2_c%#(j^g.ieJG]KSOUWT!cl:a'+taRbQU;::P_:b*=<!8e+QW.epN>+l/:c>[;5;AK\8s2GKk+f@UCiWDjt`2b-MeVS*:1;`VbV_O'7%!u.H`_%K%'\7HQYM?>>9ZnVW8^,hopkU!G:l_)?X/L[SRa2gr.P@"$Ij-UQ_kt6sjZp_DgaH_\a(=C9i*9/%U>r`6-O+8?\_[Tnn%qJYIf2F6C4e=Efo=oYU/aVlF0aT/PT8#QLQ8riH$/E'0\;%mmnm7NB@%(\7Y1\Ri2SKQl.'f[R!R\1^6\4pEhiU"X-,f:4P6Hcmj%N)>^sfcu*/AGruX,\rK\,U5mjShOd(OfST+OfUjcOc0;64UOt?G3]E0WUM1RW9FZ@*BEeC!]UliMGF6)dZl?$V[4!q$4/)ADDr?'%Z'B>:a/E@u[K41%m)YE_0j;^t2Gt3D6JW'#.orXG-\*Dm:[$.P84ZMV3Jl+@fO["FE[9[WP&Sd.A,u-oO)uWl;^"m]*Q\R0a0p.:%"3BY@!9$I<5i?Td!]cE$5l+bD7&[,3+Q5kGkn5EaC)VX#fO=1&(+7\@!e[2b50A!)A12E@?0S\j-6_R]6H(>#!!%dXC/6T]O%%d5%oHYZ3I;ZocX9!')$DKZ))C.Ge#dA^5'CmCn;3H(!4ioD_$4%k0`Wg<g\rpJ^0h('bj(X,+H,'spcVW,1+>5Y!,)2Lf$%i_T83lT;%eHS1O^<m=e#NETqqiVUHiCl]XbW%MX%KGbh]I`V#2fW*IODPs#2Y;,s_'=M%J1/]q&@R$e&=8+Fet2-CYcT>8_Z0mE-$QnWoE'R/%fLF3^=]!YB^D-!FiSA6V\1MM)2Vs=.due'CDDd`[P\B/&Po.N&D1O*o""u[+JuOhbps=md'F2[+=i^oN:u?==KEHU]W%Wi"DQ$9t%"=/*6^NJn0L?[nT%2/b5H8lK:Atd,[MG3UE@3!Og6GP-o#g8\@U-,hg,7)MHM*m5+lig.S#GX*5H/_d8q%sYX$'p*]`#_7tTe!KD%h5u\A_t-:D0h+,>_Ut\.j1u:9]0<Q$NqS&<"[m6D#bS%<1rI6CU.Br;3=BDhpe1gE+\3N)*#4250od8a<tmp?KkZna$j0TOLc?7^%"Of.\+@:[[fJ"Qo-PhiZU(rhd^ob[lN"FCG$4fM:pebkC(jj!cKj'?Q&.p't5ZEPA!lg6sKTHonK>``=<0Wb)0BM.9Qka\p1<#(^%PAh`Yi^H.@\6GQoYKBBjJ@U[GG?1gsgD/iY`JSBBlX2FVPL3ic;e<J+L?Nk:%?gg&!!*8Ke!_#sJGj"JaI!]5,?`$F=b1N0W1Yk)%TcA-OrDAA8=2rp4.uGs?`!e>;N2VEI>?'OJD.<RZ`H)iXA(ZgZ=(LY76@94+;Scj;9]"_-%PC&c-A259:]NHl%io]S0q:64h?LpP%(5Grr!V0h-G1e$1,TmpcNXe/`_^ntO,5)BfW**!MVoN'JbfCAA@o@1'q[.qLRhQSH$2@ti7rnfdA-9iqZ*t8Q\Hl19J4,F-?m,f)%Kbl3_PZ"ji]00\J$nM&Y5`R8`CN.c?U4gtt,](MSM<kS$=<a]o,*begn2?-`nhj+rV&;FITHhY4K\1N,N8LU[$.oa(>Z+#n>Qq]s%.%ElIS-G#+"HFmo&:lt$8N*kcI&hcGSE'!YOOu%WnX+u_L;E;QD45u7!FB4X`"C*AU!5ESYe]Em8`(>d,%!abq4qo,6Y>BtBUEi#%d(toif-4:P()2V0E_c5BfN(XMGmfGISgFb/&jq4XGt'#?ih6&LKZR%<%+uJk/d(pfX;"4'$Xm/=.rJ+,M&=\mW#&Pd-G@C^53Oe#%Ih2agSeZLmr@oE=q8\#allQ=aM[F`-&k:KhaNrpt8F0ln@,PhA<%J]5&-n?83B%_a?88h?E]A2sEe)Y[FUF3:Or6Lp(m&hYQ@eo5%_gHJ-BF(,b&G`Pb=CBt>I"Voqi#Ds>')g0jP.Ri,E'3O[Ze\/bZEVpkKT8ej5S+"<imi@X$S9@7mOJX[^m#[-^ps9+kCV)W9SVcr%7HG.LUc9M&:`m6<8qRF6(8l<&K`FHl'.."^T]?H()=FmO&h[FUI=h$)Q2jrn-QtBh3W[(Cn;>2AbuVnB4\'^V&5XiS_^UuDiu0UA%jSU,G&9ks4-_g\,MN:#bLmX3M'O*1.`g2F8p&k:Fo'D#7(g"TnJTLo+=t!HBqLB.j>JB>)2F*^-0f7=!A-*lBiDTEaAJu47\cHZC%Q0k:SZP,X4+C<GA+.96-K<U@1>sK4_Hprn\-pl\$2Vp/sb#H2Q?#^BM:*>5.S4CPBY;Dh((+h.G&Z-9Qo_p&Q$\ZA_=ec8mXi+3K%JLD"/))qo\?pJ^9@mJOlN<,5%2?kSh&2c=M,SJ=?NfaUuO;8>GNjI.[@T@BX8KX,8P%!=:0PSc39S_ttKoN$@4\,9o1nM&Z#^7.S%ASef\X.4@5+m>m;TtV5\b9r8o5nQT\NC_02)!\V:K]q>6%dlcg^p2Y*<PV@F*6q$9k$j8MHai2He3@3SjbTfZ+!Z1CYT#QH6o@Bf%c.l8,=F_64R(!7#4)j++#(LY550VMRS;k`;Q$N]I$3ESM%>CLfb*+#sVEDt&ODp/F!'!#q(KR+JLF4+s%b%Tel*)nNdhb"\5$9*I%EGN2#a]NOmNVEYU9Rq4S,'F^UT"\sU!BKI2Z1\n/QS*U>94a!Dj8Y6LT^96.VKmoT`R4TYH2TQJ_OOSh]*<M765'F4^p^4SJ/Dg6%1UC#ZiaStD.bdf%^qqAf_D&Nm&UEnu5\(UC#]?+"La+<U&`oG/6&e=SV-7XI,H:<'$n%!E!"7[j,E/`[SWO.=m<FI-]h$)_lO.N^%foj[=<h(e1KNN,Z\AJNfU*TX>:Xq.inOJp7-;OdNck3T\@Zh'@c,#lA!ljJCC0!*)!$Rk^.DlAb40\?FG$oi`(?Q;e06DkYhutkt%%W?UFBZ.,V$GMb/*J-joOi#$JjG:<47;/8;/So.WRLkqp9n@9*P_B>R&LO0tieeF!9kYGUTGRc#gs?U`(k?BlM<tAl)4=]dI:47W%<5#gW`bgRF(*QA&Ac&GH:(>ZVMCqRe1?WP3ZrcALUM,*`VWuWYMOb$6VN(2o9->Dq-n%M[h([&mDd3m:5kchB2nTYF29Nppi_Wke%OD9gfPqjOh]Wh&eA_\,s$Y,!fcj1JcA*aTc@p=2H]Ki9k#f_I%+[/5d91COD#,?K54rTt_Ue3-OSpo6`O\W$C]&d/5?r;d>R_knj%_8f1r1Z:nmo]^$u$kJNC;?D^$QFI/6Ke1.5,dL:>NX99_0-!7tX0;$ZE[j'/cj`,Ig<&RV+j$oaHP*?K_As[(`0X0g#(]EY=R;<4%3!mB_\SMu=95$gMa9=ssDHjgdN$1hf\r>5@:#65q,e9Zn-k=pVL;E)j?3UcT&5<YU$TsQJ,*>V$O<T78GnjYSF/kIDfDSXaqs?B8%Gb0@$M,8tp*@Tng*R,7aeHi1^JX^Jk3+Kf!U^%Yq,)'PW8AM]Ri]DmG*J?@[4!mYW9rm-U1kEQ+d$%I$KV"jsAC:4lNJ&5R6]ai'%`eX[.XV:qD^qn'R7E?l*@LfeDmQ*<p5!e0N9Q3-(1=!:G"BuN5_E#`VFp.o81Es$,0,G"\\7R8HpFo?/*'_R;'M.aVm)Y>%0?!Gn%iX-,fm(+]H?UUG,-79@4+pcR\g-[W*SPcO4Y&`H6=NE+Y*>8W5-1saR!S&j?).#4Y!.'e,M(hSuno7DCLA-G*E>PMgChWVK89.>@%SKh/2:b9V\MC^)"%,sZcPtg6(k2ig2G8c'qm^AbGep(GU,>dSCTun0?6-s0$`33#6Y0gn!%M_kq"cj5ZZ=rOA*/_Nqmso/nn1OKB%,\c!GV'^jg8V&(2)2-Cm%du^AMN5aeK5r?J?-s7g/OOq2H/K&$.s@cb*@7mR'/58aMD[($ZFJmbkaE'oHr$CT)36"\gUWFsCf1`4%KWi?[\I"IDTQD_jEDqSIpu5a'$jr,0C,1"NruGR&&#%H3;8@<2]W0=V,G$`HaEg<h#.p]u%D\KTFD[2G*m,[/eBB*PNguBj=WDH)%)j*LIh+Ig$>rc@O\eTt5MXQp72+0m&))0uEU!:kCiQ[$eEg\"R30>Hh^I,u`GKa*RFF*aDjb.MBI%NQhr0bV!>(G<BSHXNI/nl&n%`]2sF[QuT"M?5?Nd2:UV_V"INaA')E<ko)bC%k:lk_H>9:;B3T^W)08G0aT3$18`.0j.!]&H7\qDe:N&[t7I`<00Dl'-j'X4:\O?%%n%rcVPio9>LIp6TVt/F5b1FQAi`=Nr4^AWjc#0qhXH=T3'>uI%&:)T29kh8#:j</UsSm@j_8B>VQ#Im9KNr&5[5W>6UsN&`"92$%G[0#Xd0OQ9b-[F?%&=An>Jb&VM_XC))A.%&$>i@"kV>!rO\T^%;aiVFic41T7Fna_%@)iR+P[XI:r7A]k0(^&f_(Y!"6o&^b8]]g%QDQV(`N[83K[J/\cjD4*d=;5+GBjZ:L*9[5OAiTt@Z)Yc%Gfs6bbDJt\JepL8Rs^\NPP+D_?.5XEU?)hY9]u)QrA<&*sfmV+sO6!%!M1qo=?)Q*eATH;/f05?g)Gdr,JdKG<bb*WGt9\NKHWMaa;FbGKWuA;U6-f+\qXTrVlTtGN:BH-8;>Ec@7lHOQpg2_+Y>&3A:5S/%N%9EeN12M%Fk!LW0b.L0ERGWCM40_i`\J/3<L,U6m!;!0Q`>@BM+BbH&eAJG%W`8[3(@:F6FO3L*ob/BAR73_&7LGHO>=dBN.@,^%Z&BB5XV3+.;RS,t-dYKuTJC>=b:(3SY[_b#6^c59CiP8bUb#Ga%7AG013s:L33Lb&2,%k"(bjQ>'+[IP/>X@.U4"T8l:F'"1`S2c%LBBpIcq-<(c.oP@EG&NRY"RL-&Xp,!D&D7EHF&=?PRVU@FnWJDSe6N'kp?HD&JR`t&LC4#fGBL%mI1A`k<ut@Yf!5$8$kiL*,-u=%=!;C8@m##bdU1W:O2@p0#E`VC,XRU#)6QP8Rc.*l$=ap.6\,[*9Ci9tLh"62.lDZ^Lgs77@p9f0OX4d[84-W,>$L!:%8da0S)R/u%VbD)h7V%"=Al]a"l2.>P'Ka0WXW]+AAX&QAar%$+rC);s@;M\(,U"d/d@/htY@V;<8Vo,)e(cG(`?"_1@q;ULoVDs5"RpPmENatV%Z'K[;6D:\KT*E#1d1C`.U1*=j`<9$fN:'oG_O(=c$DTm2XpO8>9a5'C\-gh^e5da2M/-$"2N'tTR(eGT(c!WH';jta@U)Fql?uOP%^Y1aYOZRBH&aCA"<q<>*LcePS[8-)2O;9u4'.-%mD)64!BccjH6D6l13C+3L7(mSX%"\UlOER%HL`705,1C$1OM4fH0TdJF&/k5e%H3D7_H=!-"'bk'B)G)]o5"h2NjVq+*@a-D[80@dWOu2UN1&TjnM&AJnih`#E@7.<='F3!Q+O6'.HAp6)/l.4RjDf"2ge^]0Di@\;%7IlLA]J#2b$)rpA"W4ioJu&N$C)BkU8+RW:"+5eH_8\D<k,MUm#f3ZQ%`j_S0PtB,4c9P'+IL8E`fL4B35u:K_S[^`=0ZOPkh<mi%6ql!V"D/c9C?FM&<8R>eZJ6!\H'<;76UECT-*ZQhUIp1GSL\&&X8"XX)<*:8!65Kt-5^D[ie0tYE&_B-"MI;+=*DMdI3B%%YdsTC%&A!ZS+;*4*9RMUB;=#T5O_q;Be#!,j8d%s=;ZL6D'JV*?2T+:G9EFj'`%n,Y?WH(1]6<8'XT4E0KL@Y4!b0gsXDYgAp'^R>l7gBX%3uCa5`W4NsM.0]M=BMAbi65[Y&j?eaWk^K5_@Y-Z?HF,tQ"6n'80V01'RR+uaX,1WBiL"cb,g3]A6i!cW@#eA4&d,!`bqPgl<rFO%H$LcQHeMH31br9d,`/<8MD<uua,1eL;HuR7o#CnmE@=`?1BP3$U9`]FaL?dFR*r&IXaF!A71+*d@M'tP3Lk]#Z=`U"lU?@?g^_;`%MX)lID2(o]5no]L)dsqd:_kuG+e`]NX[9`2R'(>(@A:E&*_t3D_\kI3+s;IQ*/IR:Y&FRVgDAE4\AXe=Y*Qp2Qn394V1"mo(Ij0F%Q-\CBT,OG^J!r'oreX,r:=T;Ch3nL4*F851<<0FLD%]\Ie.uA-)9e'F8d#C"ODd6X0jA@l<M]T='_74pb8.Kj7*IT\3uR<T:'lMk%ND[5<$D:kB%@E%K`pOj;>f_i?Sn\T:,SX+BZ5b7rlNTfq33LmL#sDN('EAUfcR9'6MdS!?,,gKdFnrI8PQXtt<>/=tN1usL9N20a%%6`iX(f;&JNMl)ol?VX2TK)a$?nXE>#"9RVj3YlN9q,]_7W^S-TJ,VpW)d0n;T<o"=B?*l##%F4)d=d9^(#mUpblNs&BF<o-Ur=q%BMOS$,9jj9#Pf]I7""$7'QL"U"=WCa30=5M>QqRr)Qdh?H(r4`<shC%$%mms$Of?I'cXPIZ.q5b>fpfT2O^Y[2?B;8]G:K\UQ_T5%MHGs&<\W<uDSi0)`AY[fU;d<90<k4/!t)/o!%aBUEBSCMEY5';?e>_j]25I21(5Cq#O5^hIk9<8^.R6'Sdd'H@@3/nBtt0YNOPm5%Plsf[^^rr,b'p4m`!9AHeY>iCA5[Z4T$n/N6S,Fd@gWAUH\<VTF,r&QRT`etSeR#0k3]W+VG(0P0l7J''#A&r;.L_s(O?iKS#e06%%uZ=?+K(-ONu?Op*g!%r:+EmEZ<r8_MijW1fj[q64:YT8O(&S$Lp7RiL_lrLVQs?-_1s62*"'l3#nZ.YZNf@*()5i25r"_B_'!4H%3LoI$)RI6n(%L37LB:n]RcfdG,gEAl6qs>$eb2];^4G3W!'Noh`f($tbSZpt"Q8AD?;Zm]-38AB4>+f060'orN1k["12`R+&O."G%&8ce)cd@7cTVNR<,^Q41VY_sUE-ufF$7Xo'FD%4Pc61/(9L4D8=Pd]X2+ATCieK>2Jr1c[a`=Z%$_"l0lr-JEF=k+]]lf%@)H03^%AfeE>jQr][0:RL@@+r6=IL[/7R1=Mcg#V<UD22B_I.VffVWEnIpBa)"@SHjuX6Ci575<EB<]`W[H:X:F8Hoem0.\gU8l1$u-SBm:%C.q1Mm[e^fYnB!@k@0>-`i)"AB+b.jmfK$)JF]66eQEr:SDmU^nfmQk_FVab+6h1*!4?eQ_XnZM\Iog1`52o_'r&IBBMcXT&Q#bF%SOGm1g&-#K!apg5Ck?0*5rFJR"/lEtqpkb'N+`Y-7=H$gabg11]'1O"C@QD/+q][upW!VA&uN8i$&V.SVdsnhhiSrK)\NKE-6unb%Oc[U-#p*[g;iX#9*ls_s<8l&(_Ee>F%%kLp4`L[7[j-43Jl7i\,nYF^<=D1Pi[ER(rcVj.V$(0g7*)?3)WXfUQ0Q>`RUA)dd>')A%KOMlb9k;?W%-k&#9t:k<:S7sn`&;Tq0(0O,:cI%+-nN:X95R@,K6a4T"`0KPH+(5%7aD0?Dn&B1nb3J6]82X8<>,Vf"8^blSAa;7%7Ti!\&ccc23Qc>R'V&P=02,']WLSYc,"tgFE7Qg=20MQs@"LR'4607.HD4qRrAP=tES?Osl'P]'R>l2]P_1/t#pb&A%c'O:J8Q4c%iB_=PI/d'foc\"&*24@.CHB[?K<5]2"=7sG2NnA8TB"F(2on-O@4.r6n/W9Hj,p<9KYmBu;5aXJqgoY2!+R[8b>bn>0LOC<RY(pn%%n-bc?qUdp4;/s2."d)<O$`A)"4]KL4Ubb!'VGNEKBU8fR=?'/)mYALk(%hVjd"9Aq8"1I'pZK;/k[Kk7>?72,QOXNdmjImq*!dM%JJgs/[m2sNO8+t[$)!>q:P_PZj)a`DW@?K*RO$$:IPXEr11i0@YEEeLYcroOdPVGZ7j9+]l,GpJ$O-0^=Bp-:0+AWrmt!1l+ZA%B%6<g0(GJo.85eW(<c5K*',J]W2jB#ik6DB)<^j74^P!^B/kX37t"a]$VnJ5'nDqZ\7Zb][`JR%,f[\m7<&'eYk6HB!Vk*V;f?uW_r%YR5hf_6n+h_DbZ^"q[18-<Fo3.icbOic(Ook-B8uE9:ZtRl%[S@.m^P0oA,CPDJFY0A.WW$&bOqOh"@P*EHm1R(H7t*heO6fjIQ0%KcPgjl2WugPRj`)k/tgpphgJY:n^CICKjc[^-Mu^fB<kK&6Q^m#fTBtoPZ596WOYoNfgK\cS&r3L%3Qi<$8pJP8u.\Q:Vc'5YGQj%<OG+.@CZTGN5RSlK\eX_Y!E;FOHCNoNWE*;b=$O)-ih7e$BMRtH,sdc=Kq=n[NN7XaT-Z=;,>_qn4nYnI.0PS#6nS-/)<mu5<5AA%s7H(4"9;R?X+F:V`pr]W'<%mR!^P1f5%7>6SqEbbg0!8NI1Euq+N3/B(S=9!Zj9'::ME6X,*\=0SV0d*ed70]ab*j3JLJJX@Jt-:%/GPqVS)iTh'h=X1K%E(:H_tp)(K37u/X$kK#7oM0VEbiO8Vi5&m^o4>;!s=?@>q,WA"sM02MF>H!abooZFH`L":4IWlkoU7LOhB9%\]9k`SNpF;83ZZ:32QbI''*H;LWp7F#?(r\5ggsejkVI7$F;KubH"c>r$K$_JoGKR)&TJR9NBXD?pl0moElk..S@R"4C^/2#q(ch%Q%]`RbnD-1`6m9E$7OFB5u^c>G5:\:!KiaAJ@1h>J1*s`5or6c5^=n%X'N76/tV5c<.@gqHXT9u(2d-NLW&p@mtG$'P3^N=$Ck@R%$85GeFQJc2.Ve`p$G"da>1F,9giH<+)W$>lHoT*S6fDOkP39!mD^lA"%6W5TWKMLp@q*;--;@)["km!0H5g*ngs/C]b_&Wd>%/@W%io1ub_]'\$?GL(BSSg!A\6\@fURF_Nic"B5;E%dI``%edpgT`7Wl5]-e'Vb[7Y\oXU((K%+M.)s#++,;_@gf9=qu*..1A56cqcKY%&J\8="HQOK$2fWk@I7<\d8#`08s7^$U<"*K[TK]S2QjPF6d6W'*1'DCpDS"5IGEsM:c?"=j)P/JFhSG!#]#-q)*1gb-UPc_X_ZN%%DY'7<[thun'`^;/5#m:jg;H=iTLt=@J-#mjb,Okt&X3k[aUs`I>S]LhC_N3^aj#(m_\RCHU_WH&nLRO8O6SrTW6/NQSnkSK+$#@+%>f$-PWJ`K-&-3:4HpiYX-Y6'$9*Gsf!$fK!oI(eQ$-[C5j/VZ:&:e,1M#9Z)a:m!i6A[Ga7i4!\@JU2+mg1"jABbTM!b$)e(0s##%IYAM&02.%ReA/^^b"C$D`=58][qZS6TL;5N#!aFqCJ`6aoU*1GlqJo]fW?GE0Kf>&34:NHetY/R/4u^,^Bu=aj#[jS09IBSLEf.;%NtPY4Z@c8J_E16%*kua=RqTdG5sR+QqMS^ZO9$8%",jhU*X2F%IEM@VfQASZ#Yul3FC;hIj)RYS@_U<=c?)#H-8r+2-U?!:$9-1b%,#&7lIFt9;53HXS7SaGO&d\Y`a.W$QVn"#l_aA:[;ZcY)!C<Bc,S/@DmEkW,WhMgm63uC48t?7hCe=u(aTMm?8V*\_KYt#O_\s-L%-96[7Zd.Y-S0TR'"<oF#*b-i;f9]ZP_K82t$Vclme&F`5U*l5J6T,PqVD"gB"m3)0Hp0&;F=>?7FG.]+'IF"1$BkZ#KaH/n3X2@u%$qJ>qfIT7D&=_GmhiaX6gP!G>s&KJj"pp!?1+1?F13Zgb93rb/m'XRgq4dSi"QB5C<+Aqn98FGqkY_a$DAsO\8n#T3a]c<(LK#PH%.YUFrPes4^Jj\QJ@b[8Xdu9It;s:P-6aN/_9-4a6V8k$,_]c1;0q7qjWFNJDBa$c3LD2"b\YK^ddX<:,K_-`3#=X^biXnEJWBQ.A%;/a<?'isS8=p-hObbVU?j)8Bt2\cM4",TI6jl8PQSIc"b\NK7d^i3u<XCW>XUbF3ILJbYbi)(a3VJrc)*HL"]k_UF=q#B[GgNI*f%P2s?Ms5CU%=:#fg1GZ+oX2[aCd*N+M@9s,;Q_4JPSlp#%6d4F<c-5"]X,>7+_,Jp1cc?C,R%)in$$(3uV3A#O\<E<p"@feEBE,\H%D\%1Ol[f`'1eU6k+<FgOiqtsMnpqG.ol37;<R!u&&IeY>ap`s#`YAoV]F5?4`&B1Y,tufBY\rBj:GmIe6g*K]$TII[/6QuRK?1(i%X!LiVLoEj^@KVtn53q2Kic#sp8:(">*b[#cE)!BO5VJo)"PqCQ;+^q_p;34M/+a!!aUbm)M(C2n=T5N6B%GoE7/+a2PQ67CoOUtp%JYiKFR?7kpdr>S&%L;"5$'%+&603`uVVf)Y+/>;t>&5ug:4+Zg/KcUNEX(j:$8oV$5&>[/%_[L'`E"$;N"LU9(-S(*i+_.B[XRA#%;!c,QrVe-,'g!OOJ+fD87;^$1.rA4eq3B\b(uAeo\c8@IYfu:]M$gQ&f61A#B&O>(AR//:6[!0[F-u*Z+/LKiYQ7@u%h$jt2Rf_`%H:!pL72C2W4r/7JSrGh'>J*t^`o:Hf9</ekYp]fc/'!m?3__\ZRH+iM\ZWhPQ+&&-RJgU2H?3Vq>$_mEY[$NCAkNP8BIMo((LX5p%%7D[h6Pa&u`R_=_-3G^7CD1k@(.D#bJ@&#:E/@hT^&qga4V#-+nLT:5:tU2ajS'i#C,i%Mgg9o)K4]>4FL2pN2q06LjK:0:OuPQ(%QiXYMqL%$/1r8T;%[,fcAFgKK#kVpui;eS3-2!h;Ym`P#Mt_aTNd<W61FkG`UFrQ/'p%fPF?3>;@fZnj$tq7!"F^dO_i+1^[<)c$%bA>['Oj.VD,nDh]5U(RIU@7\[Gpua"Mm478Mf)oVYJTI3#hnZ30"dVq!t&3!M%A44G*3?j4&Nj;D1e0M%sKdNZkC_#kkKP[&-[(B%Mnu=MC_&N&'B6[j_/gdS5O?dC(g4b_58c-[015'P;,p&=pX/YQO'r`Jj!*I+e\Y8o$W--&f'V=1^k/WBae1+$Xbg/#Nl@\Q8;:Q?%T<k!/HYe<^B"g/JGn<#<>dq7Kef=C;LF;]aV0ERU:3h*r%'Se$UR5VA!T?'SPV^p="8>#4Y%Sc[N9_P]i/gn>^&`_amD/@jLRZ*I%[tlAp"WQ)9Aj@+]6_W,;5`@>iq3E^C@/,XR1XK!6l983a!]b^KV""18\MC'D1uY;KHM.rkQP^,UP-col'Hn=9)/]Ei*4s%'aD0UA%.,acmGob2K]WhR/9T8B"gRrSZP_1<"N"'l1$J<]J2#sC?T*T8jleBTmGga7>9\RG@W\4]qbCVDROZ$B@^A_#1g_(;p5#BC+3@PdI%=K7[L"n?-lKpq*G7Y8KqlD\RQ2hX8a7XbCn?iu]g@2fA95+,m!D&.2#P(CgB<O\qu[J,KuEK0#q444q"4"b1F#l2lToNa4&HKr[:%#6_r6WT&9=o\Kll3f?'tK';6SagTd0EQal/V2SMT(4c!MGk-BPZ,X!h3T:12IB8]$:iWAb#)7JeD-2&JB(ZTp&Um*`N17;GLi*fR%UX!Sk='&IO(_2To`nac7j26*N%?&`fg[[+<LUai8@o%pu-e4`$8ubM4TB^&a6"A<'"VpI='7bj]8e4-PN8%dZ/It)kAVQc%nW6dU%&]jZ_MNqdu7"d1K`PGS'mu-;K0b"G;Yi;#?<?sN^K4.[a//ID_WqB7c>X^fhBppkQZ&HrfJLl.o(7Kq-;`rM5ZQ'he<g^hcI"(-P%@TTWtkT\k^=o4,_m,Ggc2?ht=$:9'&n'nSu+_OMiLkkQ"$Z@20,Abcm1ZekAjt^>'NXTp%=N_IFIf4ot1M1TSe;b*,_lAI,J6]!`%h:NMDaM#184ICD(a%R)=%pZp;p"F(cSVm0jH(Gr!?rig/TdCOMN'-*T@`Nfs9Rr=o!lC1D5@+?-Jnl1Am\a%dmf;,emFo(8i+f?L%?s?GLDo-d%jd>a</a52GT8j/r6=Om.OTB*#Cs6Q/q`'I5P/:lJ^N:FA$\0NgHOIGH1YnCA+^JndHtja[fkf(?%a7Cr\/FT"j%\&/%M?O4L3S";QiZN*E4Dq!uY/.EbLsmn1VKR8NpdUSX-G=dDM9U)u/!Ncp]`Vfgj8,)*He$8E2LdA'6/W-p)13ijnG4-$WDHqVlhHc;%I&JGrf>CYF>3,sJ0-ed&gXo$un*=6Sb+J-`'0(S`[3stj(GY/B3Q>)(T'<#*r.*G/n:7Jflk$LF)s6K+:i(D9O+kg^C>%GXJG[HQ%D.MXWhL<.</NU)=HAXe?IFSJ?2R>&u7.!X7EVn`d:@>/I)Gtb.qd;kd[)llSQ'6(YA(q,N5(M<bp.NXFoM@<^&*a.\I3ZcC,EMAW%i9B1uea,_PEdZ0mR#bHSos$=O1(kTD!].8,%WiWL7XRFjm^,*I'E4#(nu%oGLO;ffo@k>a_>-_hOT#l)X?WKhNRB-X)nm2IKdPXu%0#:V>fW*3Vb[ZUNpAJurkbaK5aF?1`#c>H;6Y,[;O!F\pqoEm:@PW0i4\>JHiP\U4,u/JLb<pjoP5?$_Z4&#k>9b#:8\`N(c&dl(%OA<hejr^(hXI5$e:GosJkMo%3!;/`+Q2KfZ+[r4WJPj^-k:-L(M/OalpX,Q'GVDi.CdtdDn\P^44<Dt1o=`\]%OW=sHU(i+H"3/E%<0rr>16t$\gTGeDnl1a1$q]S4eHj$:_mFN1Q1b!>d[%P,mdl+Fb/7/_4*-f"+/qoIWHtGs-$p[MB8>_E^'#528,a-^[sG$O,r#.,%W_EV^_8O,&$Z8'*YCeQp7"ZD%aRleYjp<Z1#gSROV"4A)j>81tkp:loH-DV-0u@lf0/g4+k"-J'597T/X1Bj6I^9#g-Skd+.bV+q%6p*rVFQN[7k1%E+I-8UBlEgQ=8c"u4l!.B+95G_/!F9Z04l2k]0=,)"25rB->C<>+\Yo>/b\Q4jl5CGu)_Blh4a[A[iYV4/)dV#N%cR5]Om-J?$/5_"Olb5;&gkj(>'0]-KDJuq+hHQfE!$]IO0M?HWi%)R`r9Apc#sp55g[-gFSkH+R?P6obHVZ^J':jMKm?&=,_*l1Z%V`N/Q)d>DDpVi:u:Ne'1ZCM<.,oK3.-:(neo<geC=OfIRWJ#cK<ijJ$#oo/?.6YL<8J5GdT%Dg]+>QbO15u<3QPFWf;ElnjenM_c%YR@?3/1^^6<?Y?(78A2U@26>L?m2VCOADj><bH#[X/7jTA2JicB<k6\8XN]S8=QIu4/pQ5]!X^lN`r&jj=%RhQmkU`,8DS*O^AO8%&s%cp;Q*^oA:(A>f^#>QJVd57V,]*UaiC,jXiOTG;pk$NSqgkfF;&nFc+Z!6+58Z/fP$ZEROps+9J$n4#M"D?CI5Cj9671p("dX]%SaiFP/%aW.6<(;LP^U4u/+0pUqQ9sa4JBm[=8-VrFfJ1'9r^)9nY@N9JWF9):h;e@.<UE86YKFk_?pHlTS&]BI,C<VWVR\Bll0^s%P;2n):sZ80"f,B)&0j$0>)-j=o"/XW?gB$i!Y`gq(J]36mP%D9FVAuWPPWWR'j:9#-t=.^&Q)&bSQDUpF6QJejW_u3E<q,-FoM!V%+V:UjGj5irk(fKh"K"4n:EJLfO/'n*@J17g9bk:)ZPG:G,J$X`CIN6#8T<6imGiBp&J*'N]1=)C:V30</4Dn.*[gY4@R;8uQnU2C%W0c%17nr0\Wa4*\g$`CT#-[<.@6R1:&JJVA1$n\YoEuj,nhNcadiCKK_\`a#nV+jFrQT%*16O;qC?.brAZ@Ap@l3'J`-B!&Zg<D<%>J3"KHB8uG7edPF(QakaA"-+C:kS1/79dpTDS@bmB'#Lc:_AM;E5_OJ1i5/iQr/;UL+Oo+I6nLd?7j./J5F9<m.0<+ni#eM(^dR`%"mqY^g+C^$!DJ2R6<F^FlUGeKi\*!._f=flOFGmCX_ao&!9=&*bj-'a+<'*#_LYf/CQEaG68<gN[PB)W#f*rjoci9%?p97KN6!RX%0JP&UC^tEq7J?oR-A#mrn&A\b[ajk>O.<9O,*`3W!Y_QQD)<^rZ"7!4!\X/#9;\!eWC@N+O>F+d(e]U*?muXK'=gr+0ue;HJuM&[%!kQ'FPNZ\!JgmC.[/e2QQ70!O5\YjZ\&/t=jrRkodId6$eEDG`qaK2q3K1gm[<AHFWa[YL[G\D/K;GdtUL]ttF'._g@7W,4W4%2)%;OP1_Pine+Xfhm:LF"5:=<$j"(?Jj;g:'`kc?7X1i39&`W$]tt,-FiYilF!L&nuTrpo0U.k"u7q$s1&M6Am$,?:j8W!20d-h>1#A%Mh2_2Yu6t<;EnDr?8ALfOe($K^oUBl`i,:+MFTp]C3f?D"YJ_]H)j+\lX+`;eT*Doci]4jfM6>O]CtS,>JKnno3chb;W5\^<Qc'%%QJfXOQR&kH']@?VCah"0=gOP/V7<<oAGTsh$>e2WMClrXOe(T[^_HTqOqPqdU,3;'^79!"oj^g%lXqgm_hC1;=$@j.8="<j9T0Ie%J""M2fgX/''cC5a9DUt4=b1nP13G_:V4N%2H)J%VO8cd511"]7k6\8CYP'e1[f(`K?c/('#(kD__LP/:+T"?=b4cGW7=\&MdA(]C%gNCf4U2f"KIh0S2^uKDPdqaLkf/ToqC,&)?a.YXjW&eib,"KT3W&J6?e)PG0?)gZsZ[a#LQ85:egciATYE0)p-&3_H-[cIp:q<L4%a,OtXCSnL(,9E''R)e9</1X=l9Ff)q-N7\$QY:SWF`*)YiK=[`_D*CXT&RacoUoG2gXV->g79q,K6$ka4",m9F]m\9%c"r2oV`bd%"?#Lg<3EiLD2QKprB+$o:s-&3&t[/)?A<!Ja\a7.75<U7&S\4K?tHhdnbt,rR1qCY_6c-u`am9o&T>`XAf:-#=^WrnN,)3DS>JT0%XZgb_[t8is@X)_</8YtR1Jg5i7pdi[#1BbHj#gpCTkR^s'f,s*R4VrYr/JmuG\NC/f:&M-^"$fu2%_YQ,R)FNk!??4rQo"n,d[AV%!<nUNT)%5Tm"-sHbVl[mAfL?')%Jf&amV""rE*ii#;/s%N&'Tu.Tb]fUA9/_N%G'..=ba0q?*U^)9C1F\KS[>-R^BR[ZMRcgR+IG%T]rf<BOB6[Ps8!h?u(%]U3g.,];D<Ao!kXK?#0#@J69dB*3KFS^D2jB>L:K8".b&G4>i0fRCb>7-F(7DX-SLP"d1)6S!(AeEG#$g%^8+ISQ^6"]-ipeRER*rhJ[/BuF@'0XQ?I6UFY"cEa.*O3CjgE7`\OD_\6C*2nfQh/NFbD>m;Ls"eKu")\#/n#$@`F/:+*s.ho^KH%>8qX5CEB?\))gag/XGdBc)d)FXiBp>P5AInEZ]/dDrDj]X!2Y8MrN^Xo=;WDDpbKXH!&kF^Yo'rp308dBpk#d=eO:#XVi\Vm;;r_%<JKoW`2(_JC+gkdI6Q@H(hh(sUYIG?&r4Xad#j2/]tLQF)`gG?H)#,;mbr#6-93WClL#DnQtrNL1_;I?gtd;P5-rVXBsql!\$3NH%QD\L2\4S4QGX.cEYVAsDN+^tj6-pMO;j\$K[O;jA\#\^Dm#:GMb;)L992PdGlbJ6i6>H/"c'Sb:qaf7@k$_R[X<*L[?,P@d7Yd3%%bnuTA\5H/r;sMd\Fbs`o]fc;"\es'u_e)&m%o;oA4S,Hg1)O\3F1M=]PQW/W7/NBBkK4`O<g3(3eg+t'Y"dho:c;]`fj+g>e7hjM%N+TPD8XbWN[lgXZb1KGDI.q>oki(ikml&spZt^X3^g@W2mu3V7\03[%GT[MDke4p*UmF$PX'rqIBYE'h>SMDFp6t]e+1M'_eR[6:%Wl(_95%-+ZYR)T39U]Rj[6i#?M9'>:O8-C;,RHN$/:<>dRgl*Z.TAuFN*<56AQuTlHC-n&NP*eQS@8b/CrG]&caO/'#6*_5hW6Ij%aMA=d;%Zfuekbt73kOLj/JNa]Zq6-p0YDEmq]4/!L$"UrG16(kaoas4f(O1O@Y9m+D.\AOJnmD1pgBU)>dB\#`)_1^_'pQ'f`gLh%5``*MA[(<EI8BSWS<E"$IeH2*4ItW6G.P38At^AJfW;5Y?9BFc>&9a`Q4[c'D9Q-r8287+GCCE=p*8nCII\:'PDjjhjeD9dX#L:B%/@:Bs$]V6=Q2,JSpIE\VYq5EL-DA7#>?@]]+>#<Q^JjGk6=P@7=@eW+]t7W`o88&m6<e7;V*QIE)?egV/ijAW5q8aHoJm9gr!Dm3%S:q0nZ'r>==D/Z,/@:Ah+r!O&MA]1@q?%,mL:.YVD0)[QfP,$hi6iTs8+<H5\"?9%Trm`l+uUHMjGc[;W/4p5j0Zh%oGiorWL$,Z%cnaT3[#LJ,"lO(9?fpR8jg&$&(uYh'D&+$ZghC\&/@68lc9f^)Zd:HS()d\4/9,*>!SSb\c52,eIX.Ds@PE.b9iJ]!Th/Y0MV4PQ%`h`WZQnQ%)iqL6<qDsdc3_4=;_>8IF/[^9_,!nVYG0R9-nH'?7QAg&#WI5H,*WV+C4^a4n!V+MO@p&e@m^.cdY3@q2b$/-e(\Ee*%OAPaP`!ap#The+iLs;&/h2cr.ZY".gC23*6/.0d)kdMpF@$4=,>90V=!bq0e+;XN?R"`2/35_:10-6SuQA<-*)doIt(Mi&4QHil2%JRTo.(@f8DS3@>!q`Lt_i/W'L_ahM#Dp-[AkR@PqVn#/f.b9qT'dMXj6"RIg&b+f7&Z[NN?BBIt4O^']f?8Eo!A=^s*u*Sh/2W7S%MpiRq1eCWX/g-]a.SSIF^24Y>ld9YuMKH1u=f@EJAUR%<Kf[tT[r0U^@@N_nfb'.EbE)b(->FtMZAc:)=^Z-/n6C,(BGgud]irml%aH![KNOE!@Cs@_t"j?e<[K`t/Zah.1!Om?>*DrRkGTCE<hSUk"dRVY!77g_V+"]5q8M^16'Zh>75r+7]\!#`]\3ctfD+QM0)eCS?%<lO?*D$<JG<[HLfbECiB,JD%9[iW+kUs#2Wm)!:p7p!"H`PA^ePj)GAm"bgWMj#0T%'e@)0R?f4V=@ijGhD]22R3M/2Wb?XjNnqo%?e+bUgSB=Jqo=1b5j^V@384=s),Pt&eZaiiYnNj1b</6Tf)^Cm+Ml9P^p?<`G97#H"8Ko#R3D<BAJs#X[ONsXHTFt'qd]a'"ms4G%2*]t9m_(3UkDS*^hR_GbUnj5Z[tATA/mq%iOo$PM)uE<KYALi^O)Hhe.,9igJN2,5ltZ5km!<%,#rd1o%KFWMhg]sa#<Jl:IsX90%+-_IJLT((7P@?@I_nNna[sPT6I\VM_JG)&Q\B%A#+4hYWpA]DRp[QW1$oUeiOIA0@dS\1X,4&<bec>45$<4`)iG);o0E;m:^:thZ%#Aur'*8^&_X6U/oBGWs=j073m11_.GV0kQ0K\eHXN&IbX%KPk@;3bE=:h(GdmLW^Up#;jAl@Cr-^K>jK\gI1LpuCAc!`9:A?pN?Z%CZ%9E5EZ#4ge7_14]ndC&9Lc;GOQ#7BWe.Z(a=^2J771OCN#R-#-IMMkn"uLM;*Zdqu2ln4omLp6R4brUgODBSM$k8ijbW_`c&J%%'So[r+$,Fi>7l!CrO*'3DLc?c!*GhInpW'pQ`5Gdgkj9Q!r>'1KVJP(Is7g2")$OgDm'UY)+J%Q=(-#`K89qF]WoG&\u/t?$WY#B%!7r2AY:"1q5j7`AVMYp]6cB00Vf7JK?q2s0SMg!MLBYVA)Bi6Wg]4>]aXJNjhoFa)ZSuSr;ONh1#iLcY]8[ioGC\)=Bheeai+;m>%Q%T:EQgd*13?a1o&/n$4lD-[3'N%in<$8+B@"A$kSN%\n\k\g<0%[PbcYi39NcTfdJtA996f7<d1*FeDi1hqoiVh*3r;dh$\)E49%[ik08Bb@F@pB2]/H@M)H3`a<i:s%CAG:;:;d-AGB#D?B;Ps?,mhtFLVTQ?"L/+K4M7OYKYmQn@6+b?m_;QL,7\H,!<"U8TDfE=3b%2#j+6Ej/)L64X+tgJsq#GA!\F0$E7Fat2RdKU=-<?rS_14#O6/L\70sSZ$XPh+lCQOOT!/%Y4?aA3m,16%J]HO(*#@J=l[EQ0&;A%_t%[(a_]o*#5B>-flX'cpQK<#$YFo`-JkFSF.9DcL*30GlM1EVZFmE7j?C``)r!8p6#`\Dqup[HIP\Y>nW2_YH]t%C9F*'BTJF?F%L/TOV)FVmtD9`u3OuL1aq05WKDqD+>q]!H^=Ds+meGF='@?Hnl81aKun(#;$S*!9a6a=S^e].6ihdT7arjZGnn:r%A/EG3:Pd.fi%+*_&h[Rq[%e<#^#-fOr:h#BWD5a5ld;%u79N!sA=okI4m&jXJ`J5;OSFB2qph]=WO9:@<RUh[Z?,mI"e/nR!s6kL'=K0n.Q?IQSZ%*7]Lf^3)6Xp3G#Kn5:>V2OOeIA99\n41.,Ep!kl`"8CG")iVZY\,uf%\e$J'qV0S2X7EiqO#M0N8#-6Y.OZ2Xp(_>?T*j8V%6'Rh%o^4smmN"dbD=7pLR+,h*:,HV0!*X$TDjd$ddU?7(h6;DED6mnf2@3=DSWJ(GC?EJjcXo>9l$cPjEiM)DmcaVX/CX"B5EK(9<#B(D%&7ZhKbaUkkH)X@iZ3V-B!=.@c8<<ohm;8,^7H-6t5_'qZ+BsU2"7_(R,,7WR'M593lF;iBCeKbO'kLh5TEXmKOu^koRf,q5C`</`%l;^3^"bDI2-5r=K_P.83TR_ALR"L>DX`ZANOkE1fj)#`k#8X1E;a2S!M)n/'*L`PZe<PZcm5;FLn%oi50[!2URC7[;]4d&"ZPEp[%,`1U*FD\&MNu=Tg..CH.1T7l%`KYWV_Ra\nAd0[:O9,'WPJS$#Io,u=!hFlUr":F2E.)\U[Zj'H8lk18bJuA7eQXf1_0Spc%!"k2%1__A;NdDH_8;CVO-tLM]BJI33?aC2U"LIsY2Wckr9UbD5E^:gt]TAYs3i.r]gOh$@j"NJH/K"-lAMF:Ob4s^4As_&!6)FlaCn-t4%Z$9t!dK.m)^?4[iK5`O2Ju:If_%pPr8Z:no]'Xha[tefq6lS&bl4.1C6&iM/-(H"5APD4E@uJZM8GU4j0X+P_gc?`!.DO%,qJI!]%_;hXG3tGi[U+SreP=Xsf*n6l7+ISH?^$OSiWs:o0aS%c6MpJl";Z2/*K^,IA2QJDJ.b"/HRg7Cu6m$RS<O;/O1!*bc\-.W;X*rp'%L5.K^]=7_6`^[`4M(Zk1TIH.plGUl+oujQ,o8O3%nJV*-!In'e`?-/@)[F%cf$Ci(p^@5YmG_pPS\jKs/`%Xj#YCW?A:*`&b[*U=%$EX2X`K%e!E&><0aj*308h;uhpgN,o@Yu/f+.DqZ$3T.bqeaT8%)ZY8(U<q_el4\bS`W(?^U5O;Tf@!BD:&6:=nDX$:MpYNo.XB7%=7Z2>*u2Q^H$kr*%S[/7Wc!S('bY?ZlOIDla<"]M3GnY&d1:fR^j]2DDP9/pE>j's$Sq[_W7V*#&Vr21mj\DEndcZfhQ#2n=Ps<j%UnXe%r0"9Pl`_.L-W\n&GJjhdFoaHK"8%d4@-22E.SpUro`eN>(_.'K(tfqY*M1Td%)LTM^O&KhgHi]i5nRp;gB21g=3%-gZpAQ-%lsoqNV082Qgi_"I0ZS*m6?Gi4kP5"Mbu`s7_=0"KJm_8G#K=Vr+uE=3?G'?lpU:RECkLp>VO[TqPYkA8Dh+]T=3nW!0(e&.(KmOI%f:!5D.g>IX4PWWs_]G*1>>.up"Af]GhMlk0d/R/c42"19.fCF\4l^.emNZQ\^\NO<5Y(eo#6&0=d3`bW#N2b=")4;SQL"tYcp*j&%*Vr8r+7a6gg=&uUO:(j]H>nsC@9Ntm&nUNV#)*Pg6iBuHI74'2m""*Ga.4V8KqM_,.C9lpMf$I<7DB2*7,QHKAe<+55ZPrsiJI\e%9'4pN,DZddV9PG6D88Y]KH]*31bN7D<(u!B>[iM,^r!YS2ZiQHn7?ID_]&$TVpdW0:W\%f%2@`c@]u:sD>%6"U:<E^4L<17,$?m3%g\Y=%b>K^o]rF']]R4-nA)XpLh_YD5o?UTH>][T\*pU9\(?o`@VJA=0Kr,"24$!\<PFnqq.q(\dMop&/@<H.K0k(=n@E\^G(m%LP%TY]N*fVUMlJ]DN:<&jJ4gRm5KgJN-d$ub2.8IX^br2MoS%$.3l)WQCl$;9>eT3."(\A\><YKa05r+`^c-&8i_@C`9j'Jpnu%Iem/%Y<N%&ZL9uGX!r]bm_a^&36MWTbiSn"0RYp0U412UMA*r6MDFZV3=Wr&k*n&E6eA>/OY]HdlE=8q`SEh9`KpHWDU\#bJ2+$WI_G?3%`5`Z*3Q3pDUNR^bk3fpMTg4n=AUfd8fb9#t\UXL#*="<L_rK_CULQaE+n"fsVr;)`cKADdOFW-mi[9B1r]?aiNY,dL^7aZda"n$s%(nKnF6%84/"Bm'nV3s7C>+aSFq:md0)^_h%\`j_:`/aZ]PFDm+i<%N9O"V2rjr?"Z$Uudj:)n.p6kmcgLS$YC<hR<S>hdtU_rTo>%0KJq.:$b<%!hquWj3b\_Fbk('3t)C$H=&+E=<o'Z^9]-L!kRqLYJ5@A'SSjAmpf8JodU@u+]d9pbW4D)Ek%6blKd4:'DTZ9GUV1C%g)d`"3[U-M_@/g:p0)%BB<^$'Q*j11h"t<1BTZnW(+IlhN9N>fD+Bb9pGRYGK@c_X,gSdt'L;Dm6o!9ig%TTj-8(m!i$?XibUo_,%An)L/Bie6*bQ'hH,1:/b0_om"4@>7-?"76`477h)nR6HV^b="$-UPmb*#Ad.=Uke1_drJVa3G<%:-=i#WD*b53tgM<!'Jnsp.5h-%/nKS3?Qop?J-%E`cXS=r`X"DqC7-%Pk["\`g8?`H&O@]gaLH51$MtcJ`hLU;8##Kk6o7#:bV2T$N8?iK@OE5VIea]Noc>J"\$(8M%Ih6rdmLL+[/Yn_$(>t)fC$G99fFSD$4JaBOQl8)['IGc"1+4PV#`fVp0W,lq9@s9=.WA!66>M;rRDY`;<oeV>>>2"=)Q)qN99."%%DGE73B9&4p9im2"-[_$?87n,QJEL#kjH\$If+[Jl^2./QE+hi`@:`r`?SntN1d/%>ZDT[ddh\ks!^FT_4-4>6_^C$p'YYFIg4:gA%7\4B`"`\2oJD9"TC=%SrZ1#T4#HBK"^d&B*AD"DS>)dqN:T^q7\J0B/%4dCYjn_(U<"gL&]SBBRVKDNb1l;t#flV$u93Aa!-;\CH%fJJgAo><[?*7nM&f7e?7V'3+OU^+g:K_H[&"A@Ms4u"V:77oQeJ</pj7<M!$Gu6D'OOIW`><TC\!MMKH'QEi_J1WYpfSB_!ds`$o%hsu"UW35ZMa&P%FYkHmqlZA41VIp5]:ino9'FOTbo7=]:<uiGpH0CQ9:fiRND()lF"%cCY/]J?Pl^2jN$iH6s&c=iCT/)MGU4ITn%6WQ#thEfk6>(b+K2S3jt/MM=QaU%>]Xsi,\+a[sBF"O_9:]jEd<WlqbiPO=SV/49j5Z6a9lbFrbAp>O2N4eh?0:'KgR;@sImV1X3%H35LC<p+M(C;)A/PS`V=i/@7+)e\Idh^`NZK9P9Ai(FMe.V9[`_Hoku3fmU0qLIH/+pOAT5<nIc!nceaK5LdaYtBHd=Dlb+A06&r%&YgD'?,/3"20'I??l)j=hQI#Y@Zm0BM=qGACX/n6UB`e+@]di/@bWXjH=RFh3G!CY\,phE?pr`%pCd8AH`LT`Ml.apoOl.-+-tOc%\kP3>NjaegG@k^pJ2KgN[MS.U\$mrIROedX%U6V)KND>>P"0j&c\ofgcGp"g_:]Fu[N)Rj0R3(W0k8@BR/M?(4imWLn[WJS5N!Pc%g`O,^97)DP]7!hi[E,gq^SD\6\NnLtLUgj\<,(_WbU)e=0F0'oQVrY:'<q9O?Ol*G!!_0sq@iNQ,<dFR]OJ(Er%JU4EBWA8(hmZ]%"IJd51&>5qnl_@=Odn\Z!/T@@`63-gcWSR8E^gMGB^t.,8u0#OV_6jrdur,hc"e5[+[#.>L-Y4A>S#Gs=!G8iR.RF:GhIk,TOM^0%@2;8tQjW?Qnr`J1-E7i;ARtNj"$`BO`;<(rJZV%a4-F5lBGJ[knJMIEIoLuWBa2!RH>L9mH,d+EXkI4\`AUG<ba?8oZ#MohF3j^N%9t'R(T9<i4n^?M<Do>/Cn+Y,D67)NM+7E@W'?GO)YZ[gFQnjEGoE1bLd>ZEnHJ$J?gj>dA#g;Q:q0YgOjgN^R4[]5JQEXs1LuS$u%/3@a:`5eElh[:C7=]3H-11AB\gu?N#0<2$L5[e/!<!q<iL;X<I2tql?Mu7_c]mS@LY!@:^2WV6;Y1lJ*^9rXX1XE]/11#D%fV?gW%$[WTaA<^.e7&!6HL<7Y1i^TLe82B!#0/JRM\)6%%b;'HPDoX+JoSFpt:7r/K*tAAY%[-\Mi[9.9XZ38h_WUtag/U4/F_Oquld1sq%/UBJSkS;hRFX#'fVmM0=C:hb7)E\S.oSe^a<CtBW`cq#r)^4lo8/;2.(bD^p6E$u-YCTq!jC:J'pc*OnK?XGd>K&(iWDGm6Jc4^]%`Ik8d-7%0I?6.a\/_1do/6.B3#V\X.*rY+P'_!:/>cN7rF9dR(`u^]':?s*U,I&ZYkq4#G5>&EXV<\K&ckQ@b=V[$4D6d<_#=dud%)<,39,`lFH*C<;dZ/C07kfTL]c%!&DmrAqeBQ.9V/]Eg+7;^^8/M^_@3OWg39Z;Y,K+-jUQN'bi%)`kb"c!$&r1m4"K-h+LV6-f'%4UfoaRR#LUqKeP5Pn6:t2rt.dCh5;%9oVJ987'*hn'r#I,O`&+^,^k>)^8`^B&3@B64rb8Dn?Zrbn+9DA.(7E3l9d!ji<Dh3Wk`d%9t1K&@]gQ@S\XHL5^3]="YPcXR/=^;/S\4FKGRBeX@r@7]g-TeCogCn8g5(@Z"lfW.X:OPkdW7E9`S>kjJqEZ*umIPPl^.9.IoTo%;P3*JrmA]l#=qDtRCMPbr"+I@\*4c[+Ep+=6^;!&m(kG&KR3O/C^5[OPPrI^]Ybj<;OK!$N:M)5mi_WhR"195.-&GD"6)9B;sa3T%ff>Z$hZcE6#!%,b2@1ADrZ\&=JOCf*`_?e&r7s6Sg1;i_Mk1gnRicR^RugR6ocjT/2;Y5VI#4@3Aao-'3e=LKhA.Fi?7-sChMMpC%9N%*.77t-?!+=M2@V^"1LTo`K3umU/<n3K0K*cO@gP'FZcs*j5C:LJWS/Q%,WbU2DZ^<]ehU&7De=o$LK;'"7aSh,;7OfoHIQVWE%r&lm^l=I>dM6mjJj03.O%/QJ@/GJZiReA^nBEYoE@W+r.MQdU\Stpr6+lq]P?6KODnKo'4'/`*$L_c"L1HXZ-_K2e.;'BLCqMmi/%=_BEE%c'@'WVN#phpDGr;C3?L>aKS7At(k)NT*Pq$H&k`Xp2,a=l8#%?@.XP*Q+=]Yg-(f$L3Pi#gS[\9YDA\=K3F+^KEt&6m;;l%LSjtu2g1Wr)j+a74!1&/HJ\DG>o8.'[p>mMeQj`76N^a*mq"j!?QJPRV=F9MQiKI*2GMunqMP^LM4lsUSc$SV8S#[IdhY$&1$P10%_uMEeG]%"r$:os6qJjVZF$:FLB,Q)^\>PESp9"Up+cO$*[fJJn#XoL#N]A!Uf5qJjL-,eGi@u2^)=/J8bG,bccR`]?*pff+p0gq#%W$;+fn/5-[VWqssG^6;\QS/-FTW-p:Zg7+!WiPbqr@L&;h>opIgn:XM]0CInYp6MN"@/c<OS21TmE:Mi"MsQu_o(5tC33lS@l-T*%e/tlL8iOSi>t,\>]Y=T?A?8lE(/]3/1GmV`315'jd:0.1*t&1teiJdt)q1a[1pa"[c%\m-gJ>4'W+MjRpclAOaDaR;BS1i4b,UOE%O@GXY,o:P4qNe&L>'V<Lh7</(YEnH2_nrQ]i@?K[\6UCKPSg.7*mKrCQFCB0`8GF;RRfOomSloM#NqYH\6L['q)h\j<pRPZA.TtR%*_mlO.C\XB:>+U&R_m$Hc&<W'5G)HEZH'QM:PPZ?Pen)#^_YOZM_*-&(CI2e37Y@?mec<s:IF,";5@b)+nJ!VOfOl/Ud5"1m<r*'%:'-[ZrUI81AoY(!(62bYMAn_,j<3Hrfa^Dff6OZ1[C)L9RRp;+5&i!8o5Ijk*e<g$C/#OQKmZ$KPc+Pan,d+8brQ[CTU]1AD*%aI%jh'E1"VrGb&+GD%(XW_EIY][5/p$SOOrL9*Gu`o&T\HDM4OA0S:%#lEojUPu&kWGo'jDgMH,7jTkHcu,OGrJnKW&ltWbK"p+*967%!D1#&-[[VaE<Bqu!=&TK"qK$Zk4McRDj]iAlAjSoR[_UfMqc%aHA)aYjY\MlnMbUIDNiFbEL8XjPO46S<p-^PDu5c279-Vi-\n+#%Z`?0-eTB,7dlOBem$&ERBSF;O<""A>h(3q":N-9n;+qSl6TVSSD$cFY4K3F!Xdq46.i/:_eg$,=iC[CUGN,:+?;*6H6`Ca1L/fk!%6d4(OJk_dOY/RJm[p10]falTqimUj#'<7c,WqCIIfWcoc!=H6`FR4%r>Qk&U79$BAgsN8tCD\5'RmXCQ&I=(1XgpPLG#e6p"=tM@%Z_r?5dda1>VMso_lf1^g#UK7,,MVN`hZ0\InHO_O(/-S8"Os4X$]'*nf')qioiPHA!CBKiX'2FIXJ;=Zd%#(W\:mjI?99'XUk&)"%Sr]0)"13+FGh.H+900QCG!Vo0`YdcPLMZ3@nO3M3&HuL^B9Kbn7kY"L]90>5P$gTlHHYXt!^Mr_2uYn4;i8DHHFV(F+<^Ip?+G-Q%L)`l7[]AXuZ<b*HarEY%;c`D%="6XU%Oi\86I6KBj/[:KV(daGHn;mI>N_k?U;3L)*aHUT.^i<?kaF1/:e_0p6W1!CJd7aqn@:f1%S>e6l*l<b5e"ii%P9T,o4]T]k;o83tXm&t`ah9pod^'eaTL'X<+3+#@,VGJpkVC@H%%?aBj^1BBP$nSl!2M!"`W.B'@u6+&=dAn:%J\7tt(6L$P-9eZnCD$X\0'+<K8l6U\&P";jX=/+"@a#11%"d47135HbX%V#C]r4ea?nDh$-Dbt'N(?gj6c+RH1EiG98^:>X`-+#5%dmC/bUsQIKLt^^N17TG4VUV??d2qE60kYQ;.ccOa&;7YK6>TeWjp17_HK"77esfA(1bNQT83l5>Uj=]u&p!p\N3(U;XpR/1$X?T;%!eS`3"9@`^^sKn!L5^c9/]\NV'5I![@cZb*6DuDPcNFX0-W,a@8HKZ#*7!5%)>4;\(G`JNmH,&)(pRuh#F%RrpFA^"NT,gD5_@J$%%,7`rrK*R=#kf#]c@mHm:>m;mL)^U=rJ*/WKFjtWa)`5QDFSha5udWpdK-#>TAn:,opLtU[5^K_Rf"F]W&W\gWJpJuMp,r;'Asm4%9c$WA!S;0R?+p`@HUlG.ba0L;i]_b'9`,:-Kcg])LFFB/:rGm1(s`D\HC&Kd,_+:K;(Wh]!8LGIXdX@G!Pt;CQnpt/OnMR]Y!=\o%,#'um):1P5;9H]m%mbLM2cO4i1MS^WA-1.HKT3#=_+[2+$Od$rbc"bV!0Il?Pq@\`#c-u+c6YOiSGH'Z>#%4FlF`:NWjq5aY0//9%C69JC"@s#/oZ\W97mQ9JKDhh([65T]bI%kh_;WB]5Nd$BK8MCq(q*fBpnH"JJ]4h:Q,1)o6p[mqd>pPXBn1LpL_&GFN,D8YI*+jG%,?XA24tuWa:ui+U\XE)r6YG#"VpAL&P+$fR%\:06SAfZQIT=E'd!aP-eZU;e_n,P<@(`aHLQZ&=r=7ab;ML6QY(/]BSo/lBd(Vp[%$\'X@>mY(Bc5ma='6'!^HsqoA;=,+CjRFi>hm,8/?)Z\VU@8fXIPm+1c1iZLObB#g[HZK*"65=ah/.UJ/oAAA-fi0EInW`TVa`<H%:E:qG=Ar__+=*HHjCJ'ceN;aMWR@N;`Z0K??nO;HM+DY&Z!,N/W.[Xu*^C!;:9dQkjWJe"1:Qd=@=J>n4eV_3oAaaoi4*c:P%lS*%ee'qh^::!!LhU]sBHB=HZ#XagmC_]CTjD+ur!ni^Pf]t<hnC<:e+N`?f4>MDE>lVP0tK+V",\OM?*]dDH>-V:?H3lh3^D*IV!&g_%_is0rP/Wp6It.$(l.HX4'VhFB>dG.jHBBGs;bb[Rco(J90,*%"f0a(.Orii]A@DH[D6-(ol$tbkDod'#oF?O>j2EIf&]?2.N88]4%RH;T4AbdMCK0'K=BQ59IqTnWDfWT;m%cV-9Of#9CY6]8X\S_Cu<Lj\:@[HdL.-8*m_X)&03u(ub?BMVHe)U9'p-3uPh?NHQG5gEr%Z('0C+R'Z>)=9)5n+HY@3$7ltJDh0t0?+U(O>\,X+j'Zam&POub"#]$%!_7dV(cAVE%]>jglXROmITlf*-"V'1/Y<X>qHnTNBc)0%$VUiiD#!JF2jeOqf8;.fNLejV_.ua&:ko5C]ah+@,V^(*2Sj7Mmrk=<R4Ai`&c^m+i(1G_Xq^a`,*B[,O`"2+.b8Sm>q'kqC:3j8%M48/,L=cRPdgD!:(h,b%Q)+DV$1!e9%nec*qXOOZj/bjXqG6;hSquAg]s9dB;'pnsWUqqTM-&4YDYX@0L[]C"*$6"1(429-ZH"e^%`'jP;YXe?W;>-869=7$n)sc)lOH*XJW8(cD=Oj2Vd:=N.=eU$M(&uP4=_9-n$[g&51oDN`kr31D=C<N[d0h5uM@(W./7-Kuh7RJM%O=jO[>U:R25&aZ![]VHoEE*hb^;3XZk-B4@;jA71N7IHm.(&9\#8$I<QVtF,"gQC5!t=AZ)PT+mBasMCLe`u*ni)3Hn[kbP-B$$"%>]M=PV',"-`F]rAnJe&ARBV5^C(&DnbGs2[<*mB=!,)5\.Je&P/W0Cd67Ec&!=4,V+1.#XpQmV>7gj'^:%O09+mZT+e^#i"E*IVb%E^11+Q?ch4a(a!,&FI:Y532CUDi9?h#9b4;(1ru$>%@I?iZD7goE$RlnfOt+Kn8_T8F0kr3j1f=3VI_eXIWN]%abtmAUNku$CVR*%p"EbP\*RXAJTl3M$W*`!4[?1D<*f1GRn<&W63o!bWX=3(!MNr7X<AekP>Lo7_mULcBTHr9bZY>;7eOV1&FbV8G)jn8ZXW=>WXY9k%m@:;Xf[^js]/^i?+`j>4N!aXs@[:$2+EKp-T+?V8UH]QhfB?t%E6/n.W/p`u6G9&"@T&"DNEN$WI8Xmsp-nmgan^eNQUH^%Je2rP%>(q`I<g<m!SK`I_R"R?ACQ#%E/VXK3!TR!Zkd&4CeFC$Xkn2!\+K/J_%#\45*R*+/Gk([b,765@*`;!7BMQS&*Uh1Ch<2u1I'd4Q%mfEsJ^#BLckNq<SJG=A:QWLsr#pK7`NsMMFW*FrW#R*>d>5\VaVL[QQK7S.=R_@(`f8_h/;li'0?W)i0J%<2i250J?+'8<-+DlgS%KmufF*370i)<S!eY6dMJ\sF#I/s4!>O"#Oua7OaWs-VG9W7Ef`JUjTb"!/2!f=;-2>g.Y%6ODN"U,1B_"5\OIG^$rXq\VPda2"tH%a5<X4g^jU:*'m(IE0G^Wj,21;bh/\=>%>Z;g(C9;pl,gYC$HEsR,b>Y\<!V<l`gW"m6-2N4OG#6cd2/,3?,`H>p^;+C9kGL!<pf2%BYTX*\SmK@s5J#RV8:C2FQ2UP?%^%fM/=sA.PoDpAH)\<K@[*]a6R-HBu6l6kmn%(?g=!")I4$^p\Q>M`*9YV/]sN211tl^r9>n=%Q%H_U'q2L;-,<poZNge)g`JSU]g(C.P*8So)N>E8OaFIkVA,:AX'-]q]V0ZaeNB1DhpB3S:C+*Gll!Hr'.`9XD7)R,InUa_+II,@%+-Se*'(UC.m>#X`;0[OD-sBLClJPQZO^l2B&ZC)I(BK&-F"hESeGqejfL_VXFuOG+MMjkjVFQG,ht=V:H#d9<9@FS!V[2C58[SIr%I6R6nVIL.r/.=,9(!3DF1_2U^;3JhY<O;J2'[^'"m1993&Vt*kma+aY1#28i/uO%kQ$]'b=^m^;.L;V?i>,@%B9PdiUk>gH@9:WY%1]_!C(H+5KV[-\3X.Rgg-_chj'AIZpGSH5AM#\n)_1I1_k'8OfiY'\iSr1"?$06;0=i*/h9qo3ubZ35hK>^\Sd;6Bcn76:kc]7:f%%S3OigmYq$TgGA4[^7?mQnT;u7);(]e:[O@*<Q"4r_O>\1.(s,ZD"]a#qQ"mJ,+<Gr]MdHC1Sn8r::HlA56E[4Ra^p9,deYkcZ$X%f-WHd#/s.+A3/=*UZ,SJWj9=UrH\2B*D_.b7Aor'ocnBOeZ]Eq$`jKd%ctm?"Ql2'r.ha'rp`4^s7&m7qU^e#rr2MmJ,$q9%mU!D%T76V3^]4/Zs8N#hYA_2Rjeollr9^CHrTVXXrTULMs4dL=Dnl5Ho3_Lnk?i`<p6YgPkMLgF]D1MQr:!M^r#ahq*sYK8#l~>%AI9_PrivateDataEnd